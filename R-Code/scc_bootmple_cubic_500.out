
R version 3.4.0 (2017-04-21) -- "You Stupid Darkness"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # get data
> mpledata<- read.csv("mpledata_all.csv")
> 
> 
> #install.packages("statnet", Sys.getenv("R_LIBS_USER"), repos = "http://cran.case.edu" )
> #library(statnet)
> 
> # set seed
> set.seed(333)
> 
> # MPLE
> mple.est <- glm(edgeij ~ istar2+ostar2+mutual+triangle+ edgecov.mq.t+ edgecov.same.issue.area.t+ edgecov.year.diff.t +edgecov.year.diff.square.t +  
+                 nodeicov.AbsDiffMQscores+ nodeicov.NumberJusticesPro+ nodeocov.sender.time + nodeifactor.SameIssueArea.2+ nodeifactor.SameIssueArea.3+ 
+                 nodeifactor.SameIssueArea.4+nodeifactor.SameIssueArea.5+ nodeifactor.SameIssueArea.6+ nodeifactor.SameIssueArea.7+ 
+                 nodeifactor.SameIssueArea.8+nodeifactor.SameIssueArea.9+  nodeifactor.SameIssueArea.10+
+                 nodeifactor.SameIssueArea.11+ nodeifactor.SameIssueArea.12+ nodeifactor.SameIssueArea.13+nodeifactor.SameIssueArea.14+ 
+                 nodeofactor.SameIssueArea.2+ nodeofactor.SameIssueArea.3+ nodeofactor.SameIssueArea.4+nodeofactor.SameIssueArea.5+ 
+                 nodeofactor.SameIssueArea.6+nodeofactor.SameIssueArea.7+
+                 nodeofactor.SameIssueArea.8+nodeofactor.SameIssueArea.9+nodeofactor.SameIssueArea.10+ nodeofactor.SameIssueArea.11+ 
+                 nodeofactor.SameIssueArea.12+ nodeofactor.SameIssueArea.13+nodeofactor.SameIssueArea.14+
+                 instar2_sendertime+outstar2_sendertime+ mutual_sendertime+ triangle_sendertime+mq_sendertime +sameissuearea_sendertime+
+                 yeardiff_sendertime + yeardiffsquare_sendertime+ AbsDiffMQscores_sendertime + NumberJusticesPro_sendertime+
+                 instar2_sendertime2+outstar2_sendertime2+ mutual_sendertime2+ triangle_sendertime2+mq_sendertime2 +sameissuearea_sendertime2+
+                 yeardiff_sendertime2 + yeardiffsquare_sendertime2+ AbsDiffMQscores_sendertime2 + NumberJusticesPro_sendertime2+
+                 instar2_sendertime3+outstar2_sendertime3+ mutual_sendertime3+ triangle_sendertime3+mq_sendertime3 +sameissuearea_sendertime3+
+                 yeardiff_sendertime3 + yeardiffsquare_sendertime3+ AbsDiffMQscores_sendertime3 + NumberJusticesPro_sendertime3,family=binomial,data=mpledata)
> summary(mple.est)

Call:
glm(formula = edgeij ~ istar2 + ostar2 + mutual + triangle + 
    edgecov.mq.t + edgecov.same.issue.area.t + edgecov.year.diff.t + 
    edgecov.year.diff.square.t + nodeicov.AbsDiffMQscores + nodeicov.NumberJusticesPro + 
    nodeocov.sender.time + nodeifactor.SameIssueArea.2 + nodeifactor.SameIssueArea.3 + 
    nodeifactor.SameIssueArea.4 + nodeifactor.SameIssueArea.5 + 
    nodeifactor.SameIssueArea.6 + nodeifactor.SameIssueArea.7 + 
    nodeifactor.SameIssueArea.8 + nodeifactor.SameIssueArea.9 + 
    nodeifactor.SameIssueArea.10 + nodeifactor.SameIssueArea.11 + 
    nodeifactor.SameIssueArea.12 + nodeifactor.SameIssueArea.13 + 
    nodeifactor.SameIssueArea.14 + nodeofactor.SameIssueArea.2 + 
    nodeofactor.SameIssueArea.3 + nodeofactor.SameIssueArea.4 + 
    nodeofactor.SameIssueArea.5 + nodeofactor.SameIssueArea.6 + 
    nodeofactor.SameIssueArea.7 + nodeofactor.SameIssueArea.8 + 
    nodeofactor.SameIssueArea.9 + nodeofactor.SameIssueArea.10 + 
    nodeofactor.SameIssueArea.11 + nodeofactor.SameIssueArea.12 + 
    nodeofactor.SameIssueArea.13 + nodeofactor.SameIssueArea.14 + 
    instar2_sendertime + outstar2_sendertime + mutual_sendertime + 
    triangle_sendertime + mq_sendertime + sameissuearea_sendertime + 
    yeardiff_sendertime + yeardiffsquare_sendertime + AbsDiffMQscores_sendertime + 
    NumberJusticesPro_sendertime + instar2_sendertime2 + outstar2_sendertime2 + 
    mutual_sendertime2 + triangle_sendertime2 + mq_sendertime2 + 
    sameissuearea_sendertime2 + yeardiff_sendertime2 + yeardiffsquare_sendertime2 + 
    AbsDiffMQscores_sendertime2 + NumberJusticesPro_sendertime2 + 
    instar2_sendertime3 + outstar2_sendertime3 + mutual_sendertime3 + 
    triangle_sendertime3 + mq_sendertime3 + sameissuearea_sendertime3 + 
    yeardiff_sendertime3 + yeardiffsquare_sendertime3 + AbsDiffMQscores_sendertime3 + 
    NumberJusticesPro_sendertime3, family = binomial, data = mpledata)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-8.4904  -0.1020  -0.0774  -0.0623   3.7961  

Coefficients:
                                Estimate Std. Error z value Pr(>|z|)    
(Intercept)                   -5.916e+00  1.314e-01 -45.024  < 2e-16 ***
istar2                         1.772e-01  2.081e-02   8.514  < 2e-16 ***
ostar2                         9.591e-02  2.035e-02   4.714 2.43e-06 ***
mutual                         2.420e+00  8.359e-01   2.895 0.003793 ** 
triangle                       2.938e+00  1.127e-01  26.077  < 2e-16 ***
edgecov.mq.t                  -1.829e-01  1.233e-01  -1.483 0.138015    
edgecov.same.issue.area.t      1.720e+00  1.757e-01   9.792  < 2e-16 ***
edgecov.year.diff.t           -6.779e-01  9.261e-02  -7.320 2.48e-13 ***
edgecov.year.diff.square.t    -1.258e-02  1.408e-02  -0.893 0.371786    
nodeicov.AbsDiffMQscores      -1.516e-01  6.764e-02  -2.241 0.024996 *  
nodeicov.NumberJusticesPro     1.058e-01  5.705e-02   1.854 0.063702 .  
nodeocov.sender.time           1.646e-03  3.424e-04   4.807 1.54e-06 ***
nodeifactor.SameIssueArea.2    1.386e-01  4.575e-02   3.030 0.002449 ** 
nodeifactor.SameIssueArea.3   -7.230e-01  6.349e-02 -11.387  < 2e-16 ***
nodeifactor.SameIssueArea.4    3.404e-01  6.233e-02   5.461 4.72e-08 ***
nodeifactor.SameIssueArea.5    2.016e-01  2.836e-01   0.711 0.477319    
nodeifactor.SameIssueArea.6    2.110e-02  1.650e-01   0.128 0.898232    
nodeifactor.SameIssueArea.7   -7.645e-02  4.825e-02  -1.584 0.113115    
nodeifactor.SameIssueArea.8   -3.752e-01  3.700e-02 -10.141  < 2e-16 ***
nodeifactor.SameIssueArea.9   -3.599e-02  4.050e-02  -0.889 0.374235    
nodeifactor.SameIssueArea.10   1.371e-01  5.636e-02   2.433 0.014972 *  
nodeifactor.SameIssueArea.11  -3.561e-01  1.551e-01  -2.296 0.021674 *  
nodeifactor.SameIssueArea.12  -2.958e-01  4.761e-02  -6.212 5.22e-10 ***
nodeifactor.SameIssueArea.13  -2.930e-02  2.512e-01  -0.117 0.907123    
nodeifactor.SameIssueArea.14   4.925e-02  9.687e-02   0.508 0.611125    
nodeofactor.SameIssueArea.2    2.613e-01  4.483e-02   5.828 5.60e-09 ***
nodeofactor.SameIssueArea.3   -9.090e-02  5.333e-02  -1.704 0.088321 .  
nodeofactor.SameIssueArea.4    5.849e-01  5.812e-02  10.065  < 2e-16 ***
nodeofactor.SameIssueArea.5    4.405e-01  2.558e-01   1.722 0.085096 .  
nodeofactor.SameIssueArea.6    5.116e-01  1.470e-01   3.480 0.000502 ***
nodeofactor.SameIssueArea.7    1.151e-01  4.955e-02   2.323 0.020165 *  
nodeofactor.SameIssueArea.8   -1.125e-01  3.694e-02  -3.046 0.002318 ** 
nodeofactor.SameIssueArea.9    1.482e-01  4.030e-02   3.679 0.000234 ***
nodeofactor.SameIssueArea.10   3.925e-01  5.581e-02   7.033 2.02e-12 ***
nodeofactor.SameIssueArea.11   4.290e-01  1.198e-01   3.582 0.000341 ***
nodeofactor.SameIssueArea.12   1.635e-01  4.823e-02   3.389 0.000701 ***
nodeofactor.SameIssueArea.13   9.980e-01  1.954e-01   5.107 3.27e-07 ***
nodeofactor.SameIssueArea.14   5.856e-01  1.372e-01   4.267 1.98e-05 ***
instar2_sendertime            -2.614e-02  4.396e-03  -5.946 2.74e-09 ***
outstar2_sendertime           -1.131e-02  4.297e-03  -2.632 0.008481 ** 
mutual_sendertime             -7.266e-02  2.686e-01  -0.271 0.786775    
triangle_sendertime           -3.419e-01  2.657e-02 -12.868  < 2e-16 ***
mq_sendertime                  2.154e-02  3.058e-02   0.705 0.481049    
sameissuearea_sendertime      -8.949e-02  4.468e-02  -2.003 0.045184 *  
yeardiff_sendertime            1.184e-01  1.953e-02   6.062 1.35e-09 ***
yeardiffsquare_sendertime      1.714e-03  2.151e-03   0.797 0.425647    
AbsDiffMQscores_sendertime     2.365e-02  1.712e-02   1.382 0.167052    
NumberJusticesPro_sendertime  -3.111e-02  1.336e-02  -2.329 0.019881 *  
instar2_sendertime2            1.566e-03  2.952e-04   5.307 1.12e-07 ***
outstar2_sendertime2           4.754e-04  2.944e-04   1.615 0.106340    
mutual_sendertime2             2.593e-02  2.424e-02   1.070 0.284751    
triangle_sendertime2           2.353e-02  1.928e-03  12.203  < 2e-16 ***
mq_sendertime2                -6.690e-06  2.241e-03  -0.003 0.997619    
sameissuearea_sendertime2      7.325e-03  3.380e-03   2.167 0.030236 *  
yeardiff_sendertime2          -7.660e-03  1.328e-03  -5.767 8.08e-09 ***
yeardiffsquare_sendertime2    -4.634e-05  1.113e-04  -0.416 0.677161    
AbsDiffMQscores_sendertime2   -1.642e-03  1.279e-03  -1.283 0.199359    
NumberJusticesPro_sendertime2  2.624e-03  9.914e-04   2.647 0.008132 ** 
instar2_sendertime3           -3.046e-05  6.220e-06  -4.897 9.73e-07 ***
outstar2_sendertime3          -5.775e-06  6.242e-06  -0.925 0.354926    
mutual_sendertime3            -8.776e-04  6.259e-04  -1.402 0.160917    
triangle_sendertime3          -4.848e-04  4.268e-05 -11.360  < 2e-16 ***
mq_sendertime3                -2.848e-05  4.958e-05  -0.574 0.565683    
sameissuearea_sendertime3     -1.676e-04  7.683e-05  -2.182 0.029123 *  
yeardiff_sendertime3           1.593e-04  2.815e-05   5.658 1.53e-08 ***
yeardiffsquare_sendertime3    -1.344e-07  1.941e-06  -0.069 0.944790    
AbsDiffMQscores_sendertime3    4.255e-05  2.870e-05   1.483 0.138201    
NumberJusticesPro_sendertime3 -6.538e-05  2.238e-05  -2.921 0.003485 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 186162  on 1681998  degrees of freedom
Residual deviance: 109398  on 1681931  degrees of freedom
AIC: 109534

Number of Fisher Scoring iterations: 9

> 
> colnames(mpledata)[12]
[1] "edgecov.sender.time.t"
> 
> # nonparametric bootstrap resampling
> nboot <- 500 # this number should be 200 or higher
> ncoef <- length(coef(mple.est))
> boot.results <- matrix(NA,nboot,ncoef)
> # need to weight by the number of potential edges in a time period
> n.per.time <- table(mpledata[,12])
> # get unique sender times, over which to weight
> unique.sender.times <- as.numeric(names(n.per.time))
> # calculate weights for weighted resampling of times
> #time.weights <- n.per.time/sum(n.per.time)
> 
> # loop over bootstrap iterations (easily paralellize)
> for(b in 1:nboot){
+   print(b)
+   # sample time periods with replacement
+   time.periods.b <- sample(unique.sender.times,length(unique.sender.times),rep=T)
+   # construct the data for iteration b
+   data.b <- list()
+   for(k in 1:length(time.periods.b)){
+    t<- time.periods.b[k]
+     data.b[[k]] <- subset(mpledata,mpledata[,12]==t)
+   }
+   # collapse into a matrix
+   data.b <- do.call('rbind',data.b)
+   # convert to data frame
+   data.b <- data.frame(data.b)
+   # run mple
+   mple.est.b <- glm(edgeij ~ istar2+ostar2+mutual+triangle+ edgecov.mq.t+ edgecov.same.issue.area.t+ edgecov.year.diff.t +edgecov.year.diff.square.t + 
+                 nodeicov.AbsDiffMQscores+ nodeicov.NumberJusticesPro+ nodeocov.sender.time + nodeifactor.SameIssueArea.2+ nodeifactor.SameIssueArea.3+ 
+                 nodeifactor.SameIssueArea.4+nodeifactor.SameIssueArea.5+ nodeifactor.SameIssueArea.6+ nodeifactor.SameIssueArea.7+ 
+                 nodeifactor.SameIssueArea.8+nodeifactor.SameIssueArea.9+  nodeifactor.SameIssueArea.10+
+                 nodeifactor.SameIssueArea.11+ nodeifactor.SameIssueArea.12+ nodeifactor.SameIssueArea.13+nodeifactor.SameIssueArea.14+ 
+                 nodeofactor.SameIssueArea.2+ nodeofactor.SameIssueArea.3+ nodeofactor.SameIssueArea.4+nodeofactor.SameIssueArea.5+ 
+                 nodeofactor.SameIssueArea.6+nodeofactor.SameIssueArea.7+
+                 nodeofactor.SameIssueArea.8+nodeofactor.SameIssueArea.9+nodeofactor.SameIssueArea.10+ nodeofactor.SameIssueArea.11+ 
+                 nodeofactor.SameIssueArea.12+ nodeofactor.SameIssueArea.13+nodeofactor.SameIssueArea.14+
+                 instar2_sendertime+outstar2_sendertime+ mutual_sendertime+ triangle_sendertime+mq_sendertime +sameissuearea_sendertime+
+                 yeardiff_sendertime + yeardiffsquare_sendertime+ AbsDiffMQscores_sendertime + NumberJusticesPro_sendertime+
+                 instar2_sendertime2+outstar2_sendertime2+ mutual_sendertime2+ triangle_sendertime2+mq_sendertime2 +sameissuearea_sendertime2+
+                 yeardiff_sendertime2 + yeardiffsquare_sendertime2+ AbsDiffMQscores_sendertime2 + NumberJusticesPro_sendertime2+
+                 instar2_sendertime3+outstar2_sendertime3+ mutual_sendertime3+ triangle_sendertime3+mq_sendertime3 +sameissuearea_sendertime3+
+                 yeardiff_sendertime3 + yeardiffsquare_sendertime3+ AbsDiffMQscores_sendertime3 + NumberJusticesPro_sendertime3 ,family=binomial,data=data.b)
+   # store results
+   boot.results[b,] <- coef(mple.est.b)
+ }
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
[1] 6
[1] 7
[1] 8
[1] 9
[1] 10
[1] 11
[1] 12
[1] 13
[1] 14
[1] 15
[1] 16
[1] 17
[1] 18
[1] 19
[1] 20
[1] 21
[1] 22
[1] 23
[1] 24
[1] 25
[1] 26
[1] 27
[1] 28
[1] 29
[1] 30
[1] 31
[1] 32
[1] 33
[1] 34
[1] 35
[1] 36
[1] 37
[1] 38
[1] 39
[1] 40
[1] 41
[1] 42
[1] 43
[1] 44
[1] 45
[1] 46
[1] 47
[1] 48
[1] 49
[1] 50
[1] 51
[1] 52
[1] 53
[1] 54
[1] 55
[1] 56
[1] 57
[1] 58
[1] 59
[1] 60
[1] 61
[1] 62
[1] 63
[1] 64
[1] 65
[1] 66
[1] 67
[1] 68
[1] 69
[1] 70
[1] 71
[1] 72
[1] 73
[1] 74
[1] 75
[1] 76
[1] 77
[1] 78
[1] 79
[1] 80
[1] 81
[1] 82
[1] 83
[1] 84
[1] 85
[1] 86
[1] 87
[1] 88
[1] 89
[1] 90
[1] 91
[1] 92
[1] 93
[1] 94
[1] 95
[1] 96
[1] 97
[1] 98
[1] 99
[1] 100
[1] 101
[1] 102
[1] 103
[1] 104
[1] 105
[1] 106
[1] 107
[1] 108
[1] 109
[1] 110
[1] 111
[1] 112
[1] 113
[1] 114
[1] 115
[1] 116
[1] 117
[1] 118
[1] 119
[1] 120
[1] 121
[1] 122
[1] 123
[1] 124
[1] 125
[1] 126
[1] 127
[1] 128
[1] 129
[1] 130
[1] 131
[1] 132
[1] 133
[1] 134
[1] 135
[1] 136
[1] 137
[1] 138
[1] 139
[1] 140
[1] 141
[1] 142
[1] 143
[1] 144
[1] 145
[1] 146
[1] 147
[1] 148
[1] 149
[1] 150
[1] 151
[1] 152
[1] 153
[1] 154
[1] 155
[1] 156
[1] 157
[1] 158
[1] 159
[1] 160
[1] 161
[1] 162
[1] 163
[1] 164
[1] 165
[1] 166
[1] 167
[1] 168
[1] 169
[1] 170
[1] 171
[1] 172
[1] 173
[1] 174
[1] 175
[1] 176
[1] 177
[1] 178
[1] 179
[1] 180
[1] 181
[1] 182
[1] 183
[1] 184
[1] 185
[1] 186
[1] 187
[1] 188
[1] 189
[1] 190
[1] 191
[1] 192
[1] 193
[1] 194
[1] 195
[1] 196
[1] 197
[1] 198
[1] 199
[1] 200
[1] 201
[1] 202
[1] 203
[1] 204
[1] 205
[1] 206
[1] 207
[1] 208
[1] 209
[1] 210
[1] 211
[1] 212
[1] 213
[1] 214
[1] 215
[1] 216
[1] 217
[1] 218
[1] 219
[1] 220
[1] 221
[1] 222
[1] 223
[1] 224
[1] 225
[1] 226
[1] 227
[1] 228
[1] 229
[1] 230
[1] 231
[1] 232
[1] 233
[1] 234
[1] 235
[1] 236
[1] 237
[1] 238
[1] 239
[1] 240
[1] 241
[1] 242
[1] 243
[1] 244
[1] 245
[1] 246
[1] 247
[1] 248
[1] 249
[1] 250
[1] 251
[1] 252
[1] 253
[1] 254
[1] 255
[1] 256
[1] 257
[1] 258
[1] 259
[1] 260
[1] 261
[1] 262
[1] 263
[1] 264
[1] 265
[1] 266
[1] 267
[1] 268
[1] 269
[1] 270
[1] 271
[1] 272
[1] 273
[1] 274
[1] 275
[1] 276
[1] 277
[1] 278
[1] 279
[1] 280
[1] 281
[1] 282
[1] 283
[1] 284
[1] 285
[1] 286
[1] 287
[1] 288
[1] 289
[1] 290
[1] 291
[1] 292
[1] 293
[1] 294
[1] 295
[1] 296
[1] 297
[1] 298
[1] 299
[1] 300
[1] 301
[1] 302
[1] 303
[1] 304
[1] 305
[1] 306
[1] 307
[1] 308
[1] 309
[1] 310
[1] 311
[1] 312
[1] 313
[1] 314
[1] 315
[1] 316
[1] 317
[1] 318
[1] 319
[1] 320
[1] 321
[1] 322
[1] 323
[1] 324
[1] 325
[1] 326
[1] 327
[1] 328
[1] 329
[1] 330
[1] 331
[1] 332
[1] 333
[1] 334
[1] 335
[1] 336
[1] 337
[1] 338
[1] 339
[1] 340
[1] 341
[1] 342
[1] 343
[1] 344
[1] 345
[1] 346
[1] 347
[1] 348
[1] 349
[1] 350
[1] 351
[1] 352
[1] 353
[1] 354
[1] 355
[1] 356
[1] 357
[1] 358
[1] 359
[1] 360
[1] 361
[1] 362
[1] 363
[1] 364
[1] 365
[1] 366
[1] 367
[1] 368
[1] 369
[1] 370
[1] 371
[1] 372
[1] 373
[1] 374
[1] 375
[1] 376
[1] 377
[1] 378
[1] 379
[1] 380
[1] 381
[1] 382
[1] 383
[1] 384
[1] 385
[1] 386
[1] 387
[1] 388
[1] 389
[1] 390
[1] 391
[1] 392
[1] 393
[1] 394
[1] 395
[1] 396
[1] 397
[1] 398
[1] 399
[1] 400
[1] 401
[1] 402
[1] 403
[1] 404
[1] 405
[1] 406
[1] 407
[1] 408
[1] 409
[1] 410
[1] 411
[1] 412
[1] 413
[1] 414
[1] 415
[1] 416
[1] 417
[1] 418
[1] 419
[1] 420
[1] 421
[1] 422
[1] 423
[1] 424
[1] 425
[1] 426
[1] 427
[1] 428
[1] 429
[1] 430
[1] 431
[1] 432
[1] 433
[1] 434
[1] 435
[1] 436
[1] 437
[1] 438
[1] 439
[1] 440
[1] 441
[1] 442
[1] 443
[1] 444
[1] 445
[1] 446
[1] 447
[1] 448
[1] 449
[1] 450
[1] 451
[1] 452
[1] 453
[1] 454
[1] 455
[1] 456
[1] 457
[1] 458
[1] 459
[1] 460
[1] 461
[1] 462
[1] 463
[1] 464
[1] 465
[1] 466
[1] 467
[1] 468
[1] 469
[1] 470
[1] 471
[1] 472
[1] 473
[1] 474
[1] 475
[1] 476
[1] 477
[1] 478
[1] 479
[1] 480
[1] 481
[1] 482
[1] 483
[1] 484
[1] 485
[1] 486
[1] 487
[1] 488
[1] 489
[1] 490
[1] 491
[1] 492
[1] 493
[1] 494
[1] 495
[1] 496
[1] 497
[1] 498
[1] 499
[1] 500
> 
> write.csv(boot.results, file = "bootresults.csv")
> 
> ### take percentiles
> quantile(boot.results[,1], probs=c(0.975, 0.025), na.rm = TRUE)
    97.5%      2.5% 
-5.601097 -6.268852 
> quantile(boot.results[,2], probs=c(0.975, 0.025), na.rm = TRUE)
    97.5%      2.5% 
0.2587887 0.1334648 
> quantile(boot.results[,3], probs=c(0.975, 0.025), na.rm = TRUE)
     97.5%       2.5% 
0.17138033 0.02320883 
> quantile(boot.results[,4], probs=c(0.975, 0.025), na.rm = TRUE)
    97.5%      2.5% 
 5.231570 -1.947657 
> quantile(boot.results[,5], probs=c(0.975, 0.025), na.rm = TRUE)
   97.5%     2.5% 
3.483864 2.421736 
> quantile(boot.results[,6], probs=c(0.975, 0.025), na.rm = TRUE)
     97.5%       2.5% 
 0.1266791 -0.5358927 
> quantile(boot.results[,7], probs=c(0.975, 0.025), na.rm = TRUE)
  97.5%    2.5% 
2.19809 1.23581 
> quantile(boot.results[,8], probs=c(0.975, 0.025), na.rm = TRUE)
     97.5%       2.5% 
-0.4635995 -0.9141231 
> quantile(boot.results[,9], probs=c(0.975, 0.025), na.rm = TRUE)
      97.5%        2.5% 
 0.03217691 -0.04868100 
> quantile(boot.results[,10], probs=c(0.975, 0.025), na.rm = TRUE)
     97.5%       2.5% 
 0.0175628 -0.2891756 
> quantile(boot.results[,11], probs=c(0.975, 0.025), na.rm = TRUE)
      97.5%        2.5% 
 0.23632556 -0.05270254 
> quantile(boot.results[,12], probs=c(0.975, 0.025), na.rm = TRUE)
       97.5%         2.5% 
0.0024649443 0.0007929428 
> quantile(boot.results[,13], probs=c(0.975, 0.025), na.rm = TRUE)
     97.5%       2.5% 
0.25340999 0.02281987 
> quantile(boot.results[,14], probs=c(0.975, 0.025), na.rm = TRUE)
     97.5%       2.5% 
-0.4927049 -0.9591461 
> quantile(boot.results[,15], probs=c(0.975, 0.025), na.rm = TRUE)
    97.5%      2.5% 
0.5005177 0.1955427 
> quantile(boot.results[,16], probs=c(0.975, 0.025), na.rm = TRUE)
     97.5%       2.5% 
 0.6685071 -0.5467002 
> quantile(boot.results[,17], probs=c(0.975, 0.025), na.rm = TRUE)
     97.5%       2.5% 
 0.2803362 -0.2889155 
> quantile(boot.results[,18], probs=c(0.975, 0.025), na.rm = TRUE)
     97.5%       2.5% 
 0.0388212 -0.1947474 
> quantile(boot.results[,19], probs=c(0.975, 0.025), na.rm = TRUE)
     97.5%       2.5% 
-0.2618561 -0.4798744 
> quantile(boot.results[,20], probs=c(0.975, 0.025), na.rm = TRUE)
      97.5%        2.5% 
 0.06758399 -0.14737495 
> quantile(boot.results[,21], probs=c(0.975, 0.025), na.rm = TRUE)
      97.5%        2.5% 
 0.27861001 -0.01527005 
> quantile(boot.results[,22], probs=c(0.975, 0.025), na.rm = TRUE)
      97.5%        2.5% 
 0.03307703 -0.73547974 
> quantile(boot.results[,23], probs=c(0.975, 0.025), na.rm = TRUE)
     97.5%       2.5% 
-0.1545300 -0.4318256 
> quantile(boot.results[,24], probs=c(0.975, 0.025), na.rm = TRUE)
     97.5%       2.5% 
 0.4082087 -0.6563580 
> quantile(boot.results[,25], probs=c(0.975, 0.025), na.rm = TRUE)
     97.5%       2.5% 
 0.2492753 -0.1555270 
> quantile(boot.results[,26], probs=c(0.975, 0.025), na.rm = TRUE)
    97.5%      2.5% 
0.4127960 0.1248119 
> quantile(boot.results[,27], probs=c(0.975, 0.025), na.rm = TRUE)
     97.5%       2.5% 
 0.1205154 -0.3270033 
> quantile(boot.results[,28], probs=c(0.975, 0.025), na.rm = TRUE)
    97.5%      2.5% 
0.7349763 0.4210370 
> quantile(boot.results[,29], probs=c(0.975, 0.025), na.rm = TRUE)
     97.5%       2.5% 
 0.9898118 -0.5771056 
> quantile(boot.results[,30], probs=c(0.975, 0.025), na.rm = TRUE)
    97.5%      2.5% 
0.8874300 0.1212764 
> quantile(boot.results[,31], probs=c(0.975, 0.025), na.rm = TRUE)
      97.5%        2.5% 
 0.24867876 -0.02011371 
> quantile(boot.results[,32], probs=c(0.975, 0.025), na.rm = TRUE)
      97.5%        2.5% 
 0.01103539 -0.22422750 
> quantile(boot.results[,33], probs=c(0.975, 0.025), na.rm = TRUE)
     97.5%       2.5% 
0.27813116 0.02912084 
> quantile(boot.results[,34], probs=c(0.975, 0.025), na.rm = TRUE)
    97.5%      2.5% 
0.5404335 0.2472670 
> quantile(boot.results[,35], probs=c(0.975, 0.025), na.rm = TRUE)
    97.5%      2.5% 
0.7213010 0.1057557 
> quantile(boot.results[,36], probs=c(0.975, 0.025), na.rm = TRUE)
     97.5%       2.5% 
0.28385837 0.05238375 
> quantile(boot.results[,37], probs=c(0.975, 0.025), na.rm = TRUE)
    97.5%      2.5% 
1.3646457 0.3409573 
> quantile(boot.results[,38], probs=c(0.975, 0.025), na.rm = TRUE)
    97.5%      2.5% 
0.7985194 0.2682460 
> quantile(boot.results[,39], probs=c(0.975, 0.025), na.rm = TRUE)
      97.5%        2.5% 
-0.01665831 -0.04385753 
> quantile(boot.results[,40], probs=c(0.975, 0.025), na.rm = TRUE)
       97.5%         2.5% 
 0.005910627 -0.029083010 
> quantile(boot.results[,41], probs=c(0.975, 0.025), na.rm = TRUE)
    97.5%      2.5% 
 1.150484 -1.156136 
> quantile(boot.results[,42], probs=c(0.975, 0.025), na.rm = TRUE)
     97.5%       2.5% 
-0.2100318 -0.4809450 
> quantile(boot.results[,43], probs=c(0.975, 0.025), na.rm = TRUE)
      97.5%        2.5% 
 0.11910587 -0.06737555 
> quantile(boot.results[,44], probs=c(0.975, 0.025), na.rm = TRUE)
      97.5%        2.5% 
 0.03695128 -0.19920836 
> quantile(boot.results[,45], probs=c(0.975, 0.025), na.rm = TRUE)
     97.5%       2.5% 
0.16880796 0.06923438 
> quantile(boot.results[,46], probs=c(0.975, 0.025), na.rm = TRUE)
       97.5%         2.5% 
 0.007797715 -0.005669516 
> quantile(boot.results[,47], probs=c(0.975, 0.025), na.rm = TRUE)
      97.5%        2.5% 
 0.05838864 -0.01664382 
> quantile(boot.results[,48], probs=c(0.975, 0.025), na.rm = TRUE)
       97.5%         2.5% 
 0.005235648 -0.063428855 
> quantile(boot.results[,49], probs=c(0.975, 0.025), na.rm = TRUE)
       97.5%         2.5% 
0.0027233873 0.0009198059 
> quantile(boot.results[,50], probs=c(0.975, 0.025), na.rm = TRUE)
        97.5%          2.5% 
 0.0017581915 -0.0007596093 
> quantile(boot.results[,51], probs=c(0.975, 0.025), na.rm = TRUE)
      97.5%        2.5% 
 0.12483999 -0.07078675 
> quantile(boot.results[,52], probs=c(0.975, 0.025), na.rm = TRUE)
     97.5%       2.5% 
0.03371767 0.01322460 
> quantile(boot.results[,53], probs=c(0.975, 0.025), na.rm = TRUE)
       97.5%         2.5% 
 0.006796961 -0.007983267 
> quantile(boot.results[,54], probs=c(0.975, 0.025), na.rm = TRUE)
       97.5%         2.5% 
 0.016077754 -0.002679215 
> quantile(boot.results[,55], probs=c(0.975, 0.025), na.rm = TRUE)
      97.5%        2.5% 
-0.00420081 -0.01103963 
> quantile(boot.results[,56], probs=c(0.975, 0.025), na.rm = TRUE)
        97.5%          2.5% 
 0.0003493002 -0.0003729603 
> quantile(boot.results[,57], probs=c(0.975, 0.025), na.rm = TRUE)
       97.5%         2.5% 
 0.001292627 -0.004352813 
> quantile(boot.results[,58], probs=c(0.975, 0.025), na.rm = TRUE)
      97.5%        2.5% 
4.99772e-03 7.43338e-05 
> quantile(boot.results[,59], probs=c(0.975, 0.025), na.rm = TRUE)
        97.5%          2.5% 
-1.673625e-05 -5.469326e-05 
> quantile(boot.results[,60], probs=c(0.975, 0.025), na.rm = TRUE)
        97.5%          2.5% 
 1.976268e-05 -3.349176e-05 
> quantile(boot.results[,61], probs=c(0.975, 0.025), na.rm = TRUE)
       97.5%         2.5% 
 0.001489454 -0.003564003 
> quantile(boot.results[,62], probs=c(0.975, 0.025), na.rm = TRUE)
        97.5%          2.5% 
-0.0002348455 -0.0007187453 
> quantile(boot.results[,63], probs=c(0.975, 0.025), na.rm = TRUE)
        97.5%          2.5% 
 0.0001605838 -0.0001792411 
> quantile(boot.results[,64], probs=c(0.975, 0.025), na.rm = TRUE)
        97.5%          2.5% 
 6.189408e-05 -3.575810e-04 
> quantile(boot.results[,65], probs=c(0.975, 0.025), na.rm = TRUE)
       97.5%         2.5% 
2.323557e-04 8.559364e-05 
> quantile(boot.results[,66], probs=c(0.975, 0.025), na.rm = TRUE)
        97.5%          2.5% 
 5.706350e-06 -6.853541e-06 
> quantile(boot.results[,67], probs=c(0.975, 0.025), na.rm = TRUE)
        97.5%          2.5% 
 1.047603e-04 -2.070396e-05 
> quantile(boot.results[,68], probs=c(0.975, 0.025), na.rm = TRUE)
        97.5%          2.5% 
-9.536654e-06 -1.206403e-04 
> 
> 
