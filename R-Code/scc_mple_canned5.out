
R version 3.4.0 (2017-04-21) -- "You Stupid Darkness"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # get data
> load(file="ERCM_MPLE_canned.RData")
> 
> #install.packages("statnet", Sys.getenv("R_LIBS_USER"), repos = "http://cran.case.edu" )
> library(statnet)
> 
> mq.matrix[is.na(mq.matrix)]<- 0
> 
> # id = time.periods
> # number of time periods
> time.periods <- 2116
> 
> cases.total<- scc1[,71]
> year.total <- scc1[,4]-1936 #-1936 => the first year 1937 is 1, 1938 is 2 aso 
> 
> # number of cases
> cases <- max(which(time.periods==cases.total))
> 
> # simple assignment of time periods to cases
> case.time <- cases.total[1:cases]
> years <- year.total[1:cases] 
> 
> # going to need a sender time matrix covariate
> sender.time <- matrix(case.time,length(case.time),length(case.time),byrow=F)
> # a receiver time covariate
> receiver.time <- matrix(case.time,length(case.time),length(case.time),byrow=T)
> # and a unique dyad id to prevent ergmMPLE from using weights
> dyad.id <- matrix(runif(length(case.time)^2),length(case.time),length(case.time))
> # year
> year <- matrix(years, length(case.time),length(case.time),byrow=F)
> 
> year.diff.square<- year.diff.matrix^2
> 
> # Store the data for MPLE in a year-by-year list
> mple.data <- list()
> 
> # loop over time periods to construct data for mple
> for(t in 1901:time.periods){ # time.periods
+   # extract the network up to time t
+   net.t <- network(adjacency.matrix[which(case.time <= t),which(case.time <= t)])
+   # subset MQ matrix
+   mq.t <- mq.matrix[which(case.time <= t),which(case.time <= t)]
+   # subset same issue matrix
+   same.issue.area.t <- same.issue.area[which(case.time <= t),which(case.time <= t)]
+   # subset year diff matrix
+   year.diff.t <- year.diff.matrix[which(case.time <= t),which(case.time <= t)]
+   # subset year diff matrix square
+   year.diff.square.t <- year.diff.square[which(case.time <= t),which(case.time <= t)]
+   # subset sender time matrix
+   sender.time.t <- sender.time[which(case.time <= t),which(case.time <= t)]
+   # subset receiver time matrix
+   receiver.time.t <- receiver.time[which(case.time <= t),which(case.time <= t)]
+   # subset unique dyad id matrix
+   dyad.id.t <- dyad.id[which(case.time <= t),which(case.time <= t)]
+   # subset year matrix
+   year.t<- year[which(case.time <= t),which(case.time <= t)]
+ 
+   #### set vertex attributes
+   # same issue area
+   net.t <- set.vertex.attribute(net.t,"SameIssueArea", scc1[which(case.time <= t),57])
+   # abs diff of MQ score
+   net.t <- set.vertex.attribute(net.t,"AbsDiffMQscores", scc1[which(case.time <= t),79])
+   # number justices that voted for the case
+   net.t <- set.vertex.attribute(net.t,"NumberJusticesPro", scc1[which(case.time <= t),68])
+   # number justices that voted for the case
+   net.t <- set.vertex.attribute(net.t,"sender.time", sender.time.t[,1])
+   # use ergmMPLE to create data for time t
+   data.t <- ergmMPLE(net.t~edges+istar(2)+mutual+ostar(2)+triangle+edgecov(mq.t)+edgecov(same.issue.area.t)+edgecov(year.diff.t)+edgecov(year.diff.square.t )+edgecov(sender.time.t)+edgecov(receiver.time.t)+
+                       edgecov(dyad.id.t)+ edgecov(year.t) +nodeocov('sender.time')+ nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ nodeifactor('SameIssueArea', base=1)+ nodeofactor('SameIssueArea', base=1))
+   # combine into a matrix
+   data.t <- cbind(data.t[[1]],data.t[[2]])
+   # add dependent variable label
+   colnames(data.t)[1] <- "edgeij"
+   # subset the data for this year to include nodes with sender time t
+   data.t <- data.t[which(data.t[,"edgecov.sender.time.t"] >= data.t[,"edgecov.receiver.time.t"] & data.t[,"edgecov.sender.time.t"] == t),]
+   # store in the list
+   mple.data[[t-1900]] <- data.t
+   print(t)
+ }
[1] 1901
[1] 1902
[1] 1903
[1] 1904
[1] 1905
[1] 1906
[1] 1907
[1] 1908
[1] 1909
[1] 1910
[1] 1911
[1] 1912
[1] 1913
[1] 1914
[1] 1915
[1] 1916
[1] 1917
[1] 1918
[1] 1919
[1] 1920
[1] 1921
[1] 1922
[1] 1923
[1] 1924
[1] 1925
[1] 1926
[1] 1927
[1] 1928
[1] 1929
[1] 1930
[1] 1931
[1] 1932
[1] 1933
[1] 1934
[1] 1935
[1] 1936
[1] 1937
[1] 1938
[1] 1939
[1] 1940
[1] 1941
[1] 1942
[1] 1943
[1] 1944
[1] 1945
[1] 1946
[1] 1947
[1] 1948
[1] 1949
[1] 1950
[1] 1951
[1] 1952
[1] 1953
[1] 1954
[1] 1955
[1] 1956
[1] 1957
[1] 1958
[1] 1959
[1] 1960
[1] 1961
[1] 1962
[1] 1963
[1] 1964
[1] 1965
[1] 1966
[1] 1967
[1] 1968
[1] 1969
[1] 1970
[1] 1971
[1] 1972
[1] 1973
[1] 1974
[1] 1975
[1] 1976
[1] 1977
[1] 1978
[1] 1979
[1] 1980
[1] 1981
[1] 1982
[1] 1983
[1] 1984
[1] 1985
[1] 1986
[1] 1987
[1] 1988
[1] 1989
[1] 1990
[1] 1991
[1] 1992
[1] 1993
[1] 1994
[1] 1995
[1] 1996
[1] 1997
[1] 1998
[1] 1999
[1] 2000
[1] 2001
[1] 2002
[1] 2003
[1] 2004
[1] 2005
[1] 2006
[1] 2007
[1] 2008
[1] 2009
[1] 2010
[1] 2011
[1] 2012
[1] 2013
[1] 2014
[1] 2015
[1] 2016
[1] 2017
[1] 2018
[1] 2019
[1] 2020
[1] 2021
[1] 2022
[1] 2023
[1] 2024
[1] 2025
[1] 2026
[1] 2027
[1] 2028
[1] 2029
[1] 2030
[1] 2031
[1] 2032
[1] 2033
[1] 2034
[1] 2035
[1] 2036
[1] 2037
[1] 2038
[1] 2039
[1] 2040
[1] 2041
[1] 2042
[1] 2043
[1] 2044
[1] 2045
[1] 2046
[1] 2047
[1] 2048
[1] 2049
[1] 2050
[1] 2051
[1] 2052
[1] 2053
[1] 2054
[1] 2055
[1] 2056
[1] 2057
[1] 2058
[1] 2059
[1] 2060
[1] 2061
[1] 2062
[1] 2063
[1] 2064
[1] 2065
[1] 2066
[1] 2067
[1] 2068
[1] 2069
[1] 2070
[1] 2071
[1] 2072
[1] 2073
[1] 2074
[1] 2075
[1] 2076
[1] 2077
[1] 2078
[1] 2079
[1] 2080
[1] 2081
[1] 2082
[1] 2083
[1] 2084
[1] 2085
[1] 2086
[1] 2087
[1] 2088
[1] 2089
[1] 2090
[1] 2091
[1] 2092
[1] 2093
[1] 2094
[1] 2095
[1] 2096
[1] 2097
[1] 2098
[1] 2099
[1] 2100
[1] 2101
[1] 2102
[1] 2103
[1] 2104
[1] 2105
[1] 2106
[1] 2107
[1] 2108
[1] 2109
[1] 2110
[1] 2111
[1] 2112
[1] 2113
[1] 2114
[1] 2115
[1] 2116
> 
> save.image("MPLE5.RData")
> 
> print('Merging')
[1] "Merging"
> #### matrices have different dimensions due to nodeifactor and nodeofactor -> put all matrices into the right dimension
> l<- length(mple.data)
> mple.data.same<- list()
> for(i in 1:l){
+   rowM<- dim(mple.data[[i]])[1]
+   d<- dim(mple.data[[i]])[2]
+  
+   aux.matrix<- matrix(0, rowM, 43)
+   colnames(aux.matrix)<- c( "edgeij", "edges", "istar2",  "mutual",  "ostar2",  "triangle", "edgecov.mq.t", "edgecov.same.issue.area.t",   
+            "edgecov.year.diff.t","edgecov.year.diff.square.t",  "edgecov.sender.time.t",  "edgecov.receiver.time.t",  "edgecov.dyad.id.t",  "edgecov.year.t", "nodeocov.sender.time", "nodeicov.AbsDiffMQscores",
+             "nodeicov.NumberJusticesPro", "nodeifactor.SameIssueArea.2","nodeifactor.SameIssueArea.3","nodeifactor.SameIssueArea.4","nodeifactor.SameIssueArea.5",
+            "nodeifactor.SameIssueArea.6","nodeifactor.SameIssueArea.7","nodeifactor.SameIssueArea.8","nodeifactor.SameIssueArea.9","nodeifactor.SameIssueArea.10",
+            "nodeifactor.SameIssueArea.11","nodeifactor.SameIssueArea.12","nodeifactor.SameIssueArea.13","nodeifactor.SameIssueArea.14", "nodeofactor.SameIssueArea.2",
+            "nodeofactor.SameIssueArea.3","nodeofactor.SameIssueArea.4","nodeofactor.SameIssueArea.5","nodeofactor.SameIssueArea.6","nodeofactor.SameIssueArea.7",
+            "nodeofactor.SameIssueArea.8","nodeofactor.SameIssueArea.9","nodeofactor.SameIssueArea.10","nodeofactor.SameIssueArea.11","nodeofactor.SameIssueArea.12",
+            "nodeofactor.SameIssueArea.13","nodeofactor.SameIssueArea.14")
+    
+   aux.matrix[,1:17]<- mple.data[[i]][, 1:17]  
+   # enter columns of mple.data into the right column in aux.matrix
+   for(j in 18:d){
+     col.in.aux.matrix<- which(colnames(aux.matrix)==colnames(mple.data[[i]])[j])
+     aux.matrix[,col.in.aux.matrix]<- mple.data[[i]][,j]
+   }
+   # save auxiliary matrix with right dimension into new list
+   mple.data.same[[i]]<- aux.matrix
+   }
> 
> 
> # collapse list into a data frame
> mple.data <- data.frame(do.call('rbind',mple.data.same))
> 
> write.csv(mple.data, file = "mpledata5.csv")
> 
> # estimate mple
> mple.est <- glm(edgeij ~ istar2+ostar2+mutual+triangle+ edgecov.mq.t+ edgecov.same.issue.area.t+ edgecov.year.diff.t +edgecov.year.diff.square.t  +
+                 nodeicov.AbsDiffMQscores+ nodeicov.NumberJusticesPro + nodeocov.sender.time+ nodeifactor.SameIssueArea.2+ nodeifactor.SameIssueArea.3+ 
+                 nodeifactor.SameIssueArea.4+nodeifactor.SameIssueArea.5+ nodeifactor.SameIssueArea.6+ nodeifactor.SameIssueArea.7+ 
+                 nodeifactor.SameIssueArea.8+nodeifactor.SameIssueArea.9+  nodeifactor.SameIssueArea.10+
+                 nodeifactor.SameIssueArea.11+ nodeifactor.SameIssueArea.12+ nodeifactor.SameIssueArea.13+nodeifactor.SameIssueArea.14+ 
+                 nodeofactor.SameIssueArea.2+ nodeofactor.SameIssueArea.3+ nodeofactor.SameIssueArea.4+nodeofactor.SameIssueArea.5+ 
+                 nodeofactor.SameIssueArea.6+nodeofactor.SameIssueArea.7+
+                 nodeofactor.SameIssueArea.8+nodeofactor.SameIssueArea.9+nodeofactor.SameIssueArea.10+ nodeofactor.SameIssueArea.11+ 
+                 nodeofactor.SameIssueArea.12+ nodeofactor.SameIssueArea.13+nodeofactor.SameIssueArea.14,family=binomial,data=mple.data)
> summary(mple.est)

Call:
glm(formula = edgeij ~ istar2 + ostar2 + mutual + triangle + 
    edgecov.mq.t + edgecov.same.issue.area.t + edgecov.year.diff.t + 
    edgecov.year.diff.square.t + nodeicov.AbsDiffMQscores + nodeicov.NumberJusticesPro + 
    nodeocov.sender.time + nodeifactor.SameIssueArea.2 + nodeifactor.SameIssueArea.3 + 
    nodeifactor.SameIssueArea.4 + nodeifactor.SameIssueArea.5 + 
    nodeifactor.SameIssueArea.6 + nodeifactor.SameIssueArea.7 + 
    nodeifactor.SameIssueArea.8 + nodeifactor.SameIssueArea.9 + 
    nodeifactor.SameIssueArea.10 + nodeifactor.SameIssueArea.11 + 
    nodeifactor.SameIssueArea.12 + nodeifactor.SameIssueArea.13 + 
    nodeifactor.SameIssueArea.14 + nodeofactor.SameIssueArea.2 + 
    nodeofactor.SameIssueArea.3 + nodeofactor.SameIssueArea.4 + 
    nodeofactor.SameIssueArea.5 + nodeofactor.SameIssueArea.6 + 
    nodeofactor.SameIssueArea.7 + nodeofactor.SameIssueArea.8 + 
    nodeofactor.SameIssueArea.9 + nodeofactor.SameIssueArea.10 + 
    nodeofactor.SameIssueArea.11 + nodeofactor.SameIssueArea.12 + 
    nodeofactor.SameIssueArea.13 + nodeofactor.SameIssueArea.14, 
    family = binomial, data = mple.data)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-7.2322  -0.2501  -0.1992  -0.1655   3.1651  

Coefficients: (2 not defined because of singularities)
                               Estimate Std. Error z value Pr(>|z|)    
(Intercept)                  -5.6506071  0.6982964  -8.092 5.87e-16 ***
istar2                        0.0156419  0.0011335  13.799  < 2e-16 ***
ostar2                        0.0083579  0.0016379   5.103 3.35e-07 ***
mutual                               NA         NA      NA       NA    
triangle                      1.6300725  0.0220061  74.074  < 2e-16 ***
edgecov.mq.t                 -0.0428686  0.0213403  -2.009 0.044558 *  
edgecov.same.issue.area.t     1.1153708  0.0457996  24.353  < 2e-16 ***
edgecov.year.diff.t          -0.0357446  0.0042439  -8.423  < 2e-16 ***
edgecov.year.diff.square.t    0.0003308  0.0000803   4.120 3.80e-05 ***
nodeicov.AbsDiffMQscores      0.0038402  0.0106198   0.362 0.717646    
nodeicov.NumberJusticesPro    0.0079251  0.0154197   0.514 0.607280    
nodeocov.sender.time          0.0008832  0.0003393   2.603 0.009245 ** 
nodeifactor.SameIssueArea.2   0.0478551  0.0704236   0.680 0.496801    
nodeifactor.SameIssueArea.3  -0.2338426  0.0988161  -2.366 0.017960 *  
nodeifactor.SameIssueArea.4   0.5395071  0.1042262   5.176 2.26e-07 ***
nodeifactor.SameIssueArea.5  -0.1058859  0.2029295  -0.522 0.601819    
nodeifactor.SameIssueArea.6   0.5949162  0.2084803   2.854 0.004323 ** 
nodeifactor.SameIssueArea.7   0.5571270  0.1099730   5.066 4.06e-07 ***
nodeifactor.SameIssueArea.8   0.3196585  0.0664065   4.814 1.48e-06 ***
nodeifactor.SameIssueArea.9   0.3300301  0.0731635   4.511 6.46e-06 ***
nodeifactor.SameIssueArea.10  0.2595001  0.1059741   2.449 0.014337 *  
nodeifactor.SameIssueArea.11 -0.0213048  0.2586609  -0.082 0.934356    
nodeifactor.SameIssueArea.12  0.5595238  0.1207528   4.634 3.59e-06 ***
nodeifactor.SameIssueArea.13  0.6622993  0.3144536   2.106 0.035188 *  
nodeifactor.SameIssueArea.14  1.6628173  0.5066724   3.282 0.001031 ** 
nodeofactor.SameIssueArea.2  -0.0559757  0.0679905  -0.823 0.410345    
nodeofactor.SameIssueArea.3  -0.5952922  0.1161201  -5.127 2.95e-07 ***
nodeofactor.SameIssueArea.4   0.0168865  0.1037809   0.163 0.870745    
nodeofactor.SameIssueArea.5   0.1425762  0.1398044   1.020 0.307811    
nodeofactor.SameIssueArea.6  -0.1886712  0.3542434  -0.533 0.594308    
nodeofactor.SameIssueArea.7   0.0325846  0.1338269   0.243 0.807631    
nodeofactor.SameIssueArea.8   0.0606921  0.0666407   0.911 0.362434    
nodeofactor.SameIssueArea.9   0.2112976  0.0676985   3.121 0.001801 ** 
nodeofactor.SameIssueArea.10  0.1500840  0.0935413   1.604 0.108611    
nodeofactor.SameIssueArea.11  0.7354856  0.1575403   4.669 3.03e-06 ***
nodeofactor.SameIssueArea.12  0.4407696  0.1230291   3.583 0.000340 ***
nodeofactor.SameIssueArea.13  0.8056731  0.2439459   3.303 0.000958 ***
nodeofactor.SameIssueArea.14         NA         NA      NA       NA    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 48659  on 72898  degrees of freedom
Residual deviance: 20317  on 72863  degrees of freedom
AIC: 20389

Number of Fisher Scoring iterations: 7

> 
> 
> 
