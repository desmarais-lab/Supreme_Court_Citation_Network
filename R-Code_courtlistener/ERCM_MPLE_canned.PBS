#PBS -l nodes=1:ppn=1
#PBS -l walltime=24:00:00
#PBS -m abe
#PBS -M schmid@psu.edu
#PBS -l mem=128GB
#PBS -j oe


cd /storage/work/cxs5700/SCC_paper/MPLE

echo " "
echo " "
echo "Job started on `hostname` at `date`"

module load R/3.2.0

R --vanilla <<STOP > scc_mple_canned.out

# get data
load(file="ERCM_MPLE_cl.RData")

# install.packages("statnet", Sys.getenv("R_LIBS_USER"), repos = "http://cran.case.edu" )
library(statnet)

# id = time.periods
# number of time periods
time.periods <- 700

cases.total<- scc1[,55] # id column
year.total <- scc1[,11]-1936 #-1936 => the first year 1937 is 1, 1938 is 2 aso, term column 

# number of cases
cases <- max(which(time.periods==cases.total)) # last case in time period (id): time.periods

# simple assignment of time periods to cases
case.time <- cases.total[1:cases]
years <- year.total[1:cases] 

# going to need a sender time matrix covariate
sender.time <- matrix(case.time,length(case.time),length(case.time),byrow=F)
# a receiver time covariate
receiver.time <- matrix(case.time,length(case.time),length(case.time),byrow=T)
# and a unique dyad id to prevent ergmMPLE from using weights
dyad.id <- matrix(runif(length(case.time)^2),length(case.time),length(case.time))
# year
year <- matrix(years, length(case.time),length(case.time),byrow=F)

year.diff.square<- year.diff.matrix^2

# Store the data for MPLE in a year-by-year list
mple.data <- list()

# loop over time periods to construct data for mple
for(t in 1:time.periods){ # time.periods
  # extract the network up to time t
  net.t <- network(adjacency.matrix[which(case.time <= t),which(case.time <= t)])
  # subset MQ matrix
  mq.t <- mq.matrix[which(case.time <= t),which(case.time <= t)]
  # subset same issue matrix
  same.issue.area.t <- same.issue.area[which(case.time <= t),which(case.time <= t)]
  # subset year diff matrix
  year.diff.t <- year.diff.matrix[which(case.time <= t),which(case.time <= t)]
  # subset year diff matrix square
  year.diff.square.t <- year.diff.square[which(case.time <= t),which(case.time <= t)]
  # subset sender time matrix
  sender.time.t <- sender.time[which(case.time <= t),which(case.time <= t)]
  # subset receiver time matrix
  receiver.time.t <- receiver.time[which(case.time <= t),which(case.time <= t)]
  # subset unique dyad id matrix
  dyad.id.t <- dyad.id[which(case.time <= t),which(case.time <= t)]
  # subset year matrix
  year.t<- year[which(case.time <= t),which(case.time <= t)]
  
  #### set vertex attributes
  # same issue area
  net.t <- set.vertex.attribute(net.t,"SameIssueArea", scc1[which(case.time <= t),41])
  # abs diff of MQ score
  net.t <- set.vertex.attribute(net.t,"AbsDiffMQscores", scc1[which(case.time <= t),65])
  # number justices that voted for the case
  net.t <- set.vertex.attribute(net.t,"NumberJusticesPro", scc1[which(case.time <= t),52])
  # number justices that voted for the case
  net.t <- set.vertex.attribute(net.t,"Overruled", scc1[which(case.time <= t),67])
  # number justices that voted for the case
  net.t <- set.vertex.attribute(net.t,"sender.time", sender.time.t[,1])
  # use ergmMPLE to create data for time t
  data.t <- ergmMPLE(net.t~edges+istar(2)+mutual+ostar(2)+triangle+edgecov(mq.t)+edgecov(same.issue.area.t)+edgecov(year.diff.t)+ edgecov(year.diff.square.t )+edgecov(sender.time.t)+edgecov(receiver.time.t)+
                       edgecov(dyad.id.t)+ edgecov(year.t) +nodeocov('sender.time')+ nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ nodeifactor('SameIssueArea', base=1)+ nodeofactor('SameIssueArea', base=1)+ nodeicov('Overruled'))
  # combine into a matrix
  data.t <- cbind(data.t[[1]],data.t[[2]])
  # add dependent variable label
  colnames(data.t)[1] <- "edgeij"
  # subset the data for this year to include nodes with sender time t
  data.t <- data.t[which(data.t[,"edgecov.sender.time.t"] >= data.t[,"edgecov.receiver.time.t"] & data.t[,"edgecov.sender.time.t"] == t),]
  # store in the list
  mple.data[[t]] <- data.t
  print(t)
}

save.image("MPLE1.RData")

#### matrices have different dimensions due to nodeifactor and nodeofactor -> put all matrices into the right dimension
l<- length(mple.data)
mple.data.same<- list()
for(i in 1:l){
  rowM<- dim(mple.data[[i]])[1]
  d<- dim(mple.data[[i]])[2]
  
  aux.matrix<- matrix(0, rowM, 44) # 44 is the length of the colnames vector below
  colnames(aux.matrix)<- c( "edgeij", "edges", "istar2",  "mutual",  "ostar2",  "triangle", "edgecov.mq.t", "edgecov.same.issue.area.t",   
                            "edgecov.year.diff.t", "edgecov.year.diff.square.t",  "edgecov.sender.time.t",  "edgecov.receiver.time.t",  "edgecov.dyad.id.t",  "edgecov.year.t", "nodeocov.sender.time", "nodeicov.AbsDiffMQscores",
                            "nodeicov.NumberJusticesPro", "nodeifactor.SameIssueArea.2","nodeifactor.SameIssueArea.3","nodeifactor.SameIssueArea.4","nodeifactor.SameIssueArea.5",
                            "nodeifactor.SameIssueArea.6","nodeifactor.SameIssueArea.7","nodeifactor.SameIssueArea.8","nodeifactor.SameIssueArea.9","nodeifactor.SameIssueArea.10",
                            "nodeifactor.SameIssueArea.11","nodeifactor.SameIssueArea.12","nodeifactor.SameIssueArea.13","nodeifactor.SameIssueArea.14", "nodeofactor.SameIssueArea.2",
                            "nodeofactor.SameIssueArea.3","nodeofactor.SameIssueArea.4","nodeofactor.SameIssueArea.5","nodeofactor.SameIssueArea.6","nodeofactor.SameIssueArea.7",
                            "nodeofactor.SameIssueArea.8","nodeofactor.SameIssueArea.9","nodeofactor.SameIssueArea.10","nodeofactor.SameIssueArea.11","nodeofactor.SameIssueArea.12",
                            "nodeofactor.SameIssueArea.13","nodeofactor.SameIssueArea.14", "nodeicov.Overruled")
  
  aux.matrix[,1:17]<- mple.data[[i]][, 1:17]  
  # enter columns of mple.data into the right column in aux.matrix
  for(j in 18:d){
    col.in.aux.matrix<- which(colnames(aux.matrix)==colnames(mple.data[[i]])[j])
    aux.matrix[,col.in.aux.matrix]<- mple.data[[i]][,j]
  }
  # save auxiliary matrix with right dimension into new list
  mple.data.same[[i]]<- aux.matrix
}


# collapse list into a data frame
mple.data <- data.frame(do.call('rbind',mple.data.same))



write.csv(mple.data, file = "mpledata1.csv")

# estimate mple
mple.est <- glm(edgeij ~ istar2+ostar2+mutual+triangle+ edgecov.mq.t+ edgecov.same.issue.area.t+ edgecov.year.diff.t +edgecov.year.diff.square.t +
                  nodeicov.AbsDiffMQscores+ nodeicov.NumberJusticesPro + nodeocov.sender.time+ nodeifactor.SameIssueArea.2+ nodeifactor.SameIssueArea.3+ 
                  nodeifactor.SameIssueArea.4+nodeifactor.SameIssueArea.5+ nodeifactor.SameIssueArea.6+ nodeifactor.SameIssueArea.7+ 
                  nodeifactor.SameIssueArea.8+nodeifactor.SameIssueArea.9+  nodeifactor.SameIssueArea.10+
                  nodeifactor.SameIssueArea.11+ nodeifactor.SameIssueArea.12+ nodeifactor.SameIssueArea.13+nodeifactor.SameIssueArea.14+ 
                  nodeofactor.SameIssueArea.2+ nodeofactor.SameIssueArea.3+ nodeofactor.SameIssueArea.4+nodeofactor.SameIssueArea.5+ 
                  nodeofactor.SameIssueArea.6+nodeofactor.SameIssueArea.7+
                  nodeofactor.SameIssueArea.8+nodeofactor.SameIssueArea.9+nodeofactor.SameIssueArea.10+ nodeofactor.SameIssueArea.11+ 
                  nodeofactor.SameIssueArea.12+ nodeofactor.SameIssueArea.13+nodeofactor.SameIssueArea.14+ nodeicov.Overruled,family=binomial,data=mple.data)
summary(mple.est)




STOP
echo " "
echo "Job Ended at `date`"
echo " "