
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # get data
> load(file="ERCM_MPLE_cl.RData")
> 
> # install.packages("statnet", Sys.getenv("R_LIBS_USER"), repos = "http://cran.case.edu" )
> library(statnet)
> library(MLmetrics)
> library(xtable)
> library(tc.ergmterms)
> 
> # there are cases in 1962 marked as 1963 and in 1971 marked as 1972
> scc1[3364,11] <- 1962
> scc1[4648,11] <- 1971
> 
> 
> year.total <- scc1[,11]-1936 #-1936 => the first year 1937 is 1, 1938 is 2 aso, term column 
> 
> set.seed(12123)
> #sampled.years <- c(14, 24, 34, 44, 54, 64, 74)
> 
> t<- 28
>   print(t+1936)
[1] 1964
> tt<- t+1936
>   rowlasttt <- max(which(scc1[,11] == tt))
>   idt <- scc1[rowlasttt, 55]  
> 
>   
>   cases <- max(which(year.total==t)) # 14 corresponds to 1950
>   
>   # simple assignment of time periods to cases
>   years <- year.total[1:cases] 
>   
>   # going to need a sender time matrix covariate
>   sender.time <- matrix(years,length(years),length(years),byrow=F)
>   year <- matrix(years, length(years),length(years),byrow=F)
>   
>    # extract the network up to time t
>   AM <- adjacency.matrix[which(years <= t),which(years <= t)]
>   
>   net.t <- network(AM) 
>   
>   #calculate outdegree
>   o.degree<- rowSums(AM)
>   
>   # fix the outdegrees of time t as 0
>   last.t<- which(years==t)
>   
>   o.degree[last.t]<- 0
>   
>   # indicate outdegree and term as a node attribute
>   net.t <- set.vertex.attribute(net.t,"o.degree", o.degree)
>   net.t <- set.vertex.attribute(net.t,"term", years)
> 
> 
>    # subset MQ matrix
>   mq.t <- mq.matrix[which(years <= t),which(years <= t)]
>   # subset same issue matrix
>   same.issue.area.t <- same.issue.area[which(years <= t),which(years <= t)]
>   # subset year diff matrix
>   year.diff.t <- year.diff.matrix[which(years <= t),which(years <= t)]
>   # subset year diff matrix square
>   year.diff.square.t <- year.diff.t^2
>   # subset sender time matrix
>   sender.time.t <- sender.time[which(years <= t),which(years <= t)]
>   # subset unique dyad id matrix
>   #dyad.id.t <- dyad.id[which(years <= t),which(years <= t)]
>   # subset year matrix
>   year.t<- year[which(years <= t),which(years <= t)]
>   # subset same opinion writer matrix
>   same.opinion.writer.t<- same.opinion.writer[which(years <= t),which(years <= t)]
>   
>   #### set vertex attributes
>   # same issue area
>   net.t <- set.vertex.attribute(net.t,"SameIssueArea", scc1[which(years <= t),41])
>   # abs diff of MQ score
>   net.t <- set.vertex.attribute(net.t,"AbsDiffMQscores", scc1[which(years <= t),65])
>   # number justices that voted for the case
>   net.t <- set.vertex.attribute(net.t,"NumberJusticesPro", scc1[which(years <= t),52])
>   # overruled covariate
>   net.t <- set.vertex.attribute(net.t,"Overruled", Overruled.matrix[which(years <= t),idt])
>   # sender time
>   net.t <- set.vertex.attribute(net.t,"sender.time", sender.time.t[,1])
>   # Majority Opinion Writer
>   net.t <- set.vertex.attribute(net.t,"MajOpWriter", scc1[which(years <= t),49])
> 
>   
>   not.fixed <- network(1*(sender.time == t))
>   
>   load(file="1964_1.RData")
> 
>   li <- li64[[1]]
> 
> 
>   
>   # fitting glm
>   model <- ergm(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), control=control.ergm(MCMC.samplesize=10000,MCMLE.maxit=50, init=li)) #
>   summary(model)

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + mutual + nodeicov("o.degree") + difftransties("term") + 
    gwidegree(1, fixed = TRUE) + dgwesp(0.15, fixed = TRUE, type = "OSP") + 
    edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  2 out of 50 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC % z value Pr(>|z|)    
edges                         -7.485e+00  1.971e-01      0 -37.984  < 1e-04 ***
mutual                        -1.164e+01         NA     NA      NA       NA    
nodeicov.o.degree             -2.185e-02  3.128e-03      0  -6.986  < 1e-04 ***
difftransties.term             1.918e+00  9.618e-02      0  19.945  < 1e-04 ***
gwideg.fixed.1                -2.596e-01  1.322e-01      0  -1.963 0.049598 *  
gwesp.OSP.fixed.0.15           2.897e+00  8.088e-02      0  35.815  < 1e-04 ***
edgecov.mq.t                  -1.805e-01  6.320e-02      0  -2.856 0.004290 ** 
edgecov.year.diff.t           -5.362e-02  1.803e-02      0  -2.974 0.002938 ** 
edgecov.year.diff.square.t     4.796e-04  6.539e-04      0   0.733 0.463325    
nodeicov.AbsDiffMQscores       1.651e-02  2.182e-02      0   0.757 0.449157    
nodeicov.NumberJusticesPro     7.510e-02  2.255e-02      0   3.331 0.000866 ***
nodeicov.Overruled            -6.349e-02  1.834e-01      0  -0.346 0.729148    
edgecov.same.opinion.writer.t  4.774e-01  9.436e-02      0   5.059  < 1e-04 ***
edgecov.same.issue.area.t      7.824e-01  4.559e-02      0  17.161  < 1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

     Null Deviance: 687325  on 495800  degrees of freedom
 Residual Deviance:  10968  on 495786  degrees of freedom
 
AIC: 10996    BIC: 11152    (Smaller is better.) 
>   aicm<- AIC(model)
>   bicm <- BIC(model)
> 
>   # get statistics
>   erg.est <- summary(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ 
+                 dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+edgecov(same.opinion.writer.t) + nodeifactor('MajOpWriter')+ edgecov(same.issue.area.t)  )
>   erg.est
                        edges                        mutual 
                    19747.000                         9.000 
            nodeicov.o.degree            difftransties.term 
                   145847.000                      9212.000 
               gwideg.fixed.1          gwesp.OSP.fixed.0.15 
                     6094.678                     11045.165 
                 edgecov.mq.t           edgecov.year.diff.t 
                    18853.613                    143237.000 
   edgecov.year.diff.square.t      nodeicov.AbsDiffMQscores 
                  1838873.000                     84001.743 
   nodeicov.NumberJusticesPro            nodeicov.Overruled 
                   136997.000                       307.000 
edgecov.same.opinion.writer.t    nodeifactor.MajOpWriter.68 
                     2238.000                       263.000 
   nodeifactor.MajOpWriter.71    nodeifactor.MajOpWriter.72 
                       41.000                       133.000 
   nodeifactor.MajOpWriter.74    nodeifactor.MajOpWriter.75 
                     1892.000                       786.000 
   nodeifactor.MajOpWriter.76    nodeifactor.MajOpWriter.77 
                      991.000                        88.000 
   nodeifactor.MajOpWriter.78    nodeifactor.MajOpWriter.79 
                     2517.000                      1629.000 
   nodeifactor.MajOpWriter.80    nodeifactor.MajOpWriter.81 
                     2148.000                      2427.000 
   nodeifactor.MajOpWriter.82    nodeifactor.MajOpWriter.83 
                      718.000                       106.000 
   nodeifactor.MajOpWriter.84    nodeifactor.MajOpWriter.85 
                      991.000                       505.000 
   nodeifactor.MajOpWriter.86    nodeifactor.MajOpWriter.87 
                      412.000                       527.000 
   nodeifactor.MajOpWriter.88    nodeifactor.MajOpWriter.89 
                      588.000                       236.000 
   nodeifactor.MajOpWriter.90    nodeifactor.MajOpWriter.91 
                      523.000                       334.000 
   nodeifactor.MajOpWriter.92    nodeifactor.MajOpWriter.93 
                      459.000                       131.000 
   nodeifactor.MajOpWriter.94    nodeifactor.MajOpWriter.95 
                      240.000                        60.000 
   nodeifactor.MajOpWriter.96     edgecov.same.issue.area.t 
                       62.000                     11032.000 
>    
>   
>    
>    #############################################
>    # Independence model
>    #############################################
>    ind <- ergm(net.t~edges+ 
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), estimate="MLE") #
>     
>   summary(ind)   

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  7 out of 20 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC % z value Pr(>|z|)    
edges                         -5.7429388  0.1856480      0 -30.935  < 1e-04 ***
edgecov.mq.t                  -0.1441123  0.0659087      0  -2.187  0.02878 *  
edgecov.year.diff.t           -0.0452624  0.0184031      0  -2.459  0.01391 *  
edgecov.year.diff.square.t     0.0004737  0.0006739      0   0.703  0.48214    
nodeicov.AbsDiffMQscores       0.0236293  0.0215848      0   1.095  0.27364    
nodeicov.NumberJusticesPro    -0.0783960  0.0238705      0  -3.284  0.00102 ** 
nodeicov.Overruled             1.1223318  0.1914705      0   5.862  < 1e-04 ***
edgecov.same.opinion.writer.t  0.7752479  0.1111384      0   6.976  < 1e-04 ***
edgecov.same.issue.area.t      2.1119947  0.0586216      0  36.028  < 1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

     Null Deviance: 687325  on 495800  degrees of freedom
 Residual Deviance:  15298  on 495791  degrees of freedom
 
AIC: 15316    BIC: 15416    (Smaller is better.) 
>   aici<- AIC(ind)
>   bici <- BIC(ind)
> 
>    
> 
>    li64<- list(coef(model),  coef(summary(model))[,5], coef(summary(model))[,2], aicm, bicm,
+                coef(ind),  coef(summary(ind))[,5], coef(summary(ind))[,2], aici, bici ) 
>    names(li64)<- c("Coefficients", "P-values", "StdErrors", "AICm", "BICm",
+                    "CoefficientsI", "P-valuesI", "StdErrorsI", "AICi", "BICi")
> 
>   save(li64,file="1964_2.RData")
> 
> 
> 
> 
