
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # get data
> load(file="ERCM_MPLE_cl.RData")
> 
> # install.packages("statnet", Sys.getenv("R_LIBS_USER"), repos = "http://cran.case.edu" )
> library(statnet)
> library(MLmetrics)
> library(xtable)
> library(tc.ergmterms)
> 
> # there are cases in 1962 marked as 1963 and in 1971 marked as 1972
> scc1[3364,11] <- 1962
> scc1[4648,11] <- 1971
> 
> 
> year.total <- scc1[,11]-1936 #-1936 => the first year 1937 is 1, 1938 is 2 aso, term column 
> 
> set.seed(12123)
> #sampled.years <- c(14, 24, 34, 44, 54, 64, 74)
> 
> t<- 31
>   print(t+1936)
[1] 1967
> tt<- t+1936
>   rowlasttt <- max(which(scc1[,11] == tt))
>   idt <- scc1[rowlasttt, 55]  
> 
>   
>   cases <- max(which(year.total==t)) # 14 corresponds to 1950
>   
>   # simple assignment of time periods to cases
>   years <- year.total[1:cases] 
>   
>   # going to need a sender time matrix covariate
>   sender.time <- matrix(years,length(years),length(years),byrow=F)
>   year <- matrix(years, length(years),length(years),byrow=F)
>   
>    # extract the network up to time t
>   AM <- adjacency.matrix[which(years <= t),which(years <= t)]
>   
>   net.t <- network(AM) 
>   
>   #calculate outdegree
>   o.degree<- rowSums(AM)
>   
>   # fix the outdegrees of time t as 0
>   last.t<- which(years==t)
>   
>   o.degree[last.t]<- 0
>   
>   # indicate outdegree and term as a node attribute
>   net.t <- set.vertex.attribute(net.t,"o.degree", o.degree)
>   net.t <- set.vertex.attribute(net.t,"term", years)
> 
> 
>    # subset MQ matrix
>   mq.t <- mq.matrix[which(years <= t),which(years <= t)]
>   # subset same issue matrix
>   same.issue.area.t <- same.issue.area[which(years <= t),which(years <= t)]
>   # subset year diff matrix
>   year.diff.t <- year.diff.matrix[which(years <= t),which(years <= t)]
>   # subset year diff matrix square
>   year.diff.square.t <- year.diff.t^2
>   # subset sender time matrix
>   sender.time.t <- sender.time[which(years <= t),which(years <= t)]
>   # subset unique dyad id matrix
>   #dyad.id.t <- dyad.id[which(years <= t),which(years <= t)]
>   # subset year matrix
>   year.t<- year[which(years <= t),which(years <= t)]
>   # subset same opinion writer matrix
>   same.opinion.writer.t<- same.opinion.writer[which(years <= t),which(years <= t)]
>   
>   #### set vertex attributes
>   # same issue area
>   net.t <- set.vertex.attribute(net.t,"SameIssueArea", scc1[which(years <= t),41])
>   # abs diff of MQ score
>   net.t <- set.vertex.attribute(net.t,"AbsDiffMQscores", scc1[which(years <= t),65])
>   # number justices that voted for the case
>   net.t <- set.vertex.attribute(net.t,"NumberJusticesPro", scc1[which(years <= t),52])
>   # overruled covariate
>   net.t <- set.vertex.attribute(net.t,"Overruled", Overruled.matrix[which(years <= t),idt])
>   # sender time
>   net.t <- set.vertex.attribute(net.t,"sender.time", sender.time.t[,1])
>   # Majority Opinion Writer
>   net.t <- set.vertex.attribute(net.t,"MajOpWriter", scc1[which(years <= t),49])
> 
>   
>   not.fixed <- network(1*(sender.time == t))
>   
>   
>   # fitting glm
>   model <- ergm(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), control=control.ergm(MCMC.samplesize=10000,MCMLE.maxit=50), eval.loglik=FALSE) #
>   summary(model) 

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + mutual + nodeicov("o.degree") + difftransties("term") + 
    gwidegree(1, fixed = TRUE) + dgwesp(0.15, fixed = TRUE, type = "OSP") + 
    edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  18 out of 50 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC % z value Pr(>|z|)    
edges                         -7.5743368  0.2095200      0 -36.151  < 1e-04 ***
mutual                         0.0793238  0.0492610     92   1.610 0.107338    
nodeicov.o.degree             -0.0270774  0.0028976      0  -9.345  < 1e-04 ***
difftransties.term             2.2437793  0.1039942      0  21.576  < 1e-04 ***
gwideg.fixed.1                -0.4541101  0.1342408      0  -3.383 0.000718 ***
gwesp.OSP.fixed.0.15           2.5948388  0.0861546      0  30.118  < 1e-04 ***
edgecov.mq.t                  -0.0612120  0.0527495      0  -1.160 0.245875    
edgecov.year.diff.t           -0.0676222  0.0156959      0  -4.308  < 1e-04 ***
edgecov.year.diff.square.t     0.0007450  0.0005095      0   1.462 0.143709    
nodeicov.AbsDiffMQscores      -0.0024102  0.0206362      0  -0.117 0.907021    
nodeicov.NumberJusticesPro     0.0754159  0.0271367      0   2.779 0.005451 ** 
nodeicov.Overruled            -0.6029017  0.2247549      0  -2.682 0.007308 ** 
edgecov.same.opinion.writer.t  0.8657663  0.1014864      0   8.531  < 1e-04 ***
edgecov.same.issue.area.t      0.9015367  0.0558430      0  16.144  < 1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Log-likelihood was not estimated for this fit.
To get deviances, AIC, and/or BIC from fit `model` run 
  > model<-logLik(model, add=TRUE)
to add it to the object or rerun this function with eval.loglik=TRUE.
>   
> 
>   # get statistics
>   erg.est <- summary(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ 
+                 dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+edgecov(same.opinion.writer.t) + nodeifactor('MajOpWriter')+ edgecov(same.issue.area.t)  )
>   erg.est
                        edges                        mutual 
                    23542.000                        10.000 
            nodeicov.o.degree            difftransties.term 
                   193799.000                     11432.000 
               gwideg.fixed.1          gwesp.OSP.fixed.0.15 
                     6877.246                     13655.290 
                 edgecov.mq.t           edgecov.year.diff.t 
                    22033.569                    184155.000 
   edgecov.year.diff.square.t      nodeicov.AbsDiffMQscores 
                  2577415.000                    104332.014 
   nodeicov.NumberJusticesPro            nodeicov.Overruled 
                   163172.000                       438.000 
edgecov.same.opinion.writer.t    nodeifactor.MajOpWriter.68 
                     2550.000                       277.000 
   nodeifactor.MajOpWriter.71    nodeifactor.MajOpWriter.72 
                       42.000                       143.000 
   nodeifactor.MajOpWriter.74    nodeifactor.MajOpWriter.75 
                     1980.000                       829.000 
   nodeifactor.MajOpWriter.76    nodeifactor.MajOpWriter.77 
                     1071.000                        94.000 
   nodeifactor.MajOpWriter.78    nodeifactor.MajOpWriter.79 
                     2932.000                      1765.000 
   nodeifactor.MajOpWriter.80    nodeifactor.MajOpWriter.81 
                     2428.000                      2853.000 
   nodeifactor.MajOpWriter.82    nodeifactor.MajOpWriter.83 
                      802.000                       115.000 
   nodeifactor.MajOpWriter.84    nodeifactor.MajOpWriter.85 
                     1093.000                       560.000 
   nodeifactor.MajOpWriter.86    nodeifactor.MajOpWriter.87 
                      482.000                       601.000 
   nodeifactor.MajOpWriter.88    nodeifactor.MajOpWriter.89 
                      848.000                       273.000 
   nodeifactor.MajOpWriter.90    nodeifactor.MajOpWriter.91 
                      809.000                       498.000 
   nodeifactor.MajOpWriter.92    nodeifactor.MajOpWriter.93 
                      884.000                       162.000 
   nodeifactor.MajOpWriter.94    nodeifactor.MajOpWriter.95 
                      444.000                       165.000 
   nodeifactor.MajOpWriter.96    nodeifactor.MajOpWriter.97 
                      161.000                        35.000 
   nodeifactor.MajOpWriter.98     edgecov.same.issue.area.t 
                        4.000                     13563.000 
>   
> 
>    li67<- list(coef(model),  coef(summary(model))[,5], coef(summary(model))[,2] ) 
>    names(li67)<- c("Coefficients", "P-values", "StdErrors")
> 
>   save(li67,file="1967_1.RData")
> 
> 
> 
> 
