
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # get data
> load(file="ERCM_MPLE_cl.RData")
> 
> # install.packages("statnet", Sys.getenv("R_LIBS_USER"), repos = "http://cran.case.edu" )
> library(statnet)
> library(MLmetrics)
> library(xtable)
> library(tc.ergmterms)
> 
> # there are cases in 1962 marked as 1963 and in 1971 marked as 1972
> scc1[3364,11] <- 1962
> scc1[4648,11] <- 1971
> 
> 
> year.total <- scc1[,11]-1936 #-1936 => the first year 1937 is 1, 1938 is 2 aso, term column 
> 
> set.seed(12123)
> #sampled.years <- c(14, 24, 34, 44, 54, 64, 74)
> 
> t<- 36
>   print(t+1936)
[1] 1972
> tt<- t+1936
>   rowlasttt <- max(which(scc1[,11] == tt))
>   idt <- scc1[rowlasttt, 55]  
> 
>   
>   cases <- max(which(year.total==t)) # 14 corresponds to 1950
>   
>   # simple assignment of time periods to cases
>   years <- year.total[1:cases] 
>   
>   # going to need a sender time matrix covariate
>   sender.time <- matrix(years,length(years),length(years),byrow=F)
>   year <- matrix(years, length(years),length(years),byrow=F)
>   
>    # extract the network up to time t
>   AM <- adjacency.matrix[which(years <= t),which(years <= t)]
>   
>   net.t <- network(AM) 
>   
>   #calculate outdegree
>   o.degree<- rowSums(AM)
>   
>   # fix the outdegrees of time t as 0
>   last.t<- which(years==t)
>   
>   o.degree[last.t]<- 0
>   
>   # indicate outdegree and term as a node attribute
>   net.t <- set.vertex.attribute(net.t,"o.degree", o.degree)
>   net.t <- set.vertex.attribute(net.t,"term", years)
> 
> 
>    # subset MQ matrix
>   mq.t <- mq.matrix[which(years <= t),which(years <= t)]
>   # subset same issue matrix
>   same.issue.area.t <- same.issue.area[which(years <= t),which(years <= t)]
>   # subset year diff matrix
>   year.diff.t <- year.diff.matrix[which(years <= t),which(years <= t)]
>   # subset year diff matrix square
>   year.diff.square.t <- year.diff.t^2
>   # subset sender time matrix
>   sender.time.t <- sender.time[which(years <= t),which(years <= t)]
>   # subset unique dyad id matrix
>   #dyad.id.t <- dyad.id[which(years <= t),which(years <= t)]
>   # subset year matrix
>   year.t<- year[which(years <= t),which(years <= t)]
>   # subset same opinion writer matrix
>   same.opinion.writer.t<- same.opinion.writer[which(years <= t),which(years <= t)]
>   
>   #### set vertex attributes
>   # same issue area
>   net.t <- set.vertex.attribute(net.t,"SameIssueArea", scc1[which(years <= t),41])
>   # abs diff of MQ score
>   net.t <- set.vertex.attribute(net.t,"AbsDiffMQscores", scc1[which(years <= t),65])
>   # number justices that voted for the case
>   net.t <- set.vertex.attribute(net.t,"NumberJusticesPro", scc1[which(years <= t),52])
>   # overruled covariate
>   net.t <- set.vertex.attribute(net.t,"Overruled", Overruled.matrix[which(years <= t),idt])
>   # sender time
>   net.t <- set.vertex.attribute(net.t,"sender.time", sender.time.t[,1])
>   # Majority Opinion Writer
>   net.t <- set.vertex.attribute(net.t,"MajOpWriter", scc1[which(years <= t),49])
> 
>   
>   not.fixed <- network(1*(sender.time == t))
>   
>   
>   # fitting glm
>   model <- ergm(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), control=control.ergm(MCMC.samplesize=10000,MCMLE.maxit=50), eval.loglik=FALSE) #
>   summary(model) 

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + mutual + nodeicov("o.degree") + difftransties("term") + 
    gwidegree(1, fixed = TRUE) + dgwesp(0.15, fixed = TRUE, type = "OSP") + 
    edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  17 out of 50 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC % z value Pr(>|z|)    
edges                          -7.029529   0.134775      0 -52.158  < 1e-04 ***
mutual                        -13.663562         NA     NA      NA       NA    
nodeicov.o.degree              -0.025783   0.001741      0 -14.811  < 1e-04 ***
difftransties.term              2.341595   0.070533      0  33.199  < 1e-04 ***
gwideg.fixed.1                 -0.415366   0.103285      0  -4.022  < 1e-04 ***
gwesp.OSP.fixed.0.15            2.470547   0.061068      0  40.456  < 1e-04 ***
edgecov.mq.t                    0.050107   0.024442      0   2.050  0.04036 *  
edgecov.year.diff.t            -0.109014   0.008965      0 -12.160  < 1e-04 ***
edgecov.year.diff.square.t      0.002077   0.000251      0   8.277  < 1e-04 ***
nodeicov.AbsDiffMQscores       -0.011195   0.011052      0  -1.013  0.31111    
nodeicov.NumberJusticesPro      0.045766   0.016761      0   2.731  0.00632 ** 
nodeicov.Overruled             -1.237327   0.239988      0  -5.156  < 1e-04 ***
edgecov.same.opinion.writer.t   0.464274   0.087008      0   5.336  < 1e-04 ***
edgecov.same.issue.area.t       0.711081   0.032419      0  21.934  < 1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Log-likelihood was not estimated for this fit.
To get deviances, AIC, and/or BIC from fit `model` run 
  > model<-logLik(model, add=TRUE)
to add it to the object or rerun this function with eval.loglik=TRUE.
>   
> 
>   # get statistics
>   erg.est <- summary(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ 
+                 dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+edgecov(same.opinion.writer.t) + nodeifactor('MajOpWriter')+ edgecov(same.issue.area.t)  )
>   erg.est
                        edges                        mutual 
                    32441.000                        11.000 
            nodeicov.o.degree            difftransties.term 
                   324648.000                     16989.000 
               gwideg.fixed.1          gwesp.OSP.fixed.0.15 
                     8543.664                     20221.697 
                 edgecov.mq.t           edgecov.year.diff.t 
                    32243.434                    284914.000 
   edgecov.year.diff.square.t      nodeicov.AbsDiffMQscores 
                  4564730.000                    156392.636 
   nodeicov.NumberJusticesPro            nodeicov.Overruled 
                   224460.000                       758.000 
edgecov.same.opinion.writer.t    nodeifactor.MajOpWriter.68 
                     3168.000                       297.000 
   nodeifactor.MajOpWriter.71    nodeifactor.MajOpWriter.72 
                       48.000                       159.000 
   nodeifactor.MajOpWriter.74    nodeifactor.MajOpWriter.75 
                     2151.000                       912.000 
   nodeifactor.MajOpWriter.76    nodeifactor.MajOpWriter.77 
                     1202.000                       107.000 
   nodeifactor.MajOpWriter.78    nodeifactor.MajOpWriter.79 
                     3890.000                      1996.000 
   nodeifactor.MajOpWriter.80    nodeifactor.MajOpWriter.81 
                     2867.000                      3831.000 
   nodeifactor.MajOpWriter.82    nodeifactor.MajOpWriter.83 
                      916.000                       125.000 
   nodeifactor.MajOpWriter.84    nodeifactor.MajOpWriter.85 
                     1271.000                       659.000 
   nodeifactor.MajOpWriter.86    nodeifactor.MajOpWriter.87 
                      582.000                       731.000 
   nodeifactor.MajOpWriter.88    nodeifactor.MajOpWriter.89 
                     1244.000                       324.000 
   nodeifactor.MajOpWriter.90    nodeifactor.MajOpWriter.91 
                     1584.000                       956.000 
   nodeifactor.MajOpWriter.92    nodeifactor.MajOpWriter.93 
                     1894.000                       209.000 
   nodeifactor.MajOpWriter.94    nodeifactor.MajOpWriter.95 
                     1111.000                       655.000 
   nodeifactor.MajOpWriter.96    nodeifactor.MajOpWriter.97 
                      302.000                       168.000 
   nodeifactor.MajOpWriter.98    nodeifactor.MajOpWriter.99 
                      197.000                       124.000 
  nodeifactor.MajOpWriter.100   nodeifactor.MajOpWriter.101 
                       43.000                        33.000 
  nodeifactor.MajOpWriter.102     edgecov.same.issue.area.t 
                       31.000                     19130.000 
>   
> 
>    li72<- list(coef(model),  coef(summary(model))[,5], coef(summary(model))[,2] ) 
>    names(li72)<- c("Coefficients", "P-values", "StdErrors")
> 
>   save(li72,file="1972_1.RData")
> 
> 
> 
> 
