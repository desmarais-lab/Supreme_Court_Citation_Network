
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # get data
> load(file="ERCM_MPLE_cl.RData")
> 
> # install.packages("statnet", Sys.getenv("R_LIBS_USER"), repos = "http://cran.case.edu" )
> library(statnet)
> library(MLmetrics)
> library(xtable)
> library(tc.ergmterms)
> 
> # there are cases in 1962 marked as 1963 and in 1971 marked as 1972
> scc1[3364,11] <- 1962
> scc1[4648,11] <- 1971
> 
> 
> year.total <- scc1[,11]-1936 #-1936 => the first year 1937 is 1, 1938 is 2 aso, term column 
> 
> set.seed(12123)
> #sampled.years <- c(14, 24, 34, 44, 54, 64, 74)
> 
> t<- 16
>   print(t+1936)
[1] 1952
> tt<- t+1936
>   rowlasttt <- max(which(scc1[,11] == tt))
>   idt <- scc1[rowlasttt, 55]  
> 
>   
>   cases <- max(which(year.total==t)) # 14 corresponds to 1950
>   
>   # simple assignment of time periods to cases
>   years <- year.total[1:cases] 
>   
>   # going to need a sender time matrix covariate
>   sender.time <- matrix(years,length(years),length(years),byrow=F)
>   year <- matrix(years, length(years),length(years),byrow=F)
>   
>    # extract the network up to time t
>   AM <- adjacency.matrix[which(years <= t),which(years <= t)]
>   
>   net.t <- network(AM) 
>   
>   #calculate outdegree
>   o.degree<- rowSums(AM)
>   
>   # fix the outdegrees of time t as 0
>   last.t<- which(years==t)
>   
>   o.degree[last.t]<- 0
>   
>   # indicate outdegree and term as a node attribute
>   net.t <- set.vertex.attribute(net.t,"o.degree", o.degree)
>   net.t <- set.vertex.attribute(net.t,"term", years)
> 
> 
>    # subset MQ matrix
>   mq.t <- mq.matrix[which(years <= t),which(years <= t)]
>   # subset same issue matrix
>   same.issue.area.t <- same.issue.area[which(years <= t),which(years <= t)]
>   # subset year diff matrix
>   year.diff.t <- year.diff.matrix[which(years <= t),which(years <= t)]
>   # subset year diff matrix square
>   year.diff.square.t <- year.diff.t^2
>   # subset sender time matrix
>   sender.time.t <- sender.time[which(years <= t),which(years <= t)]
>   # subset unique dyad id matrix
>   #dyad.id.t <- dyad.id[which(years <= t),which(years <= t)]
>   # subset year matrix
>   year.t<- year[which(years <= t),which(years <= t)]
>   # subset same opinion writer matrix
>   same.opinion.writer.t<- same.opinion.writer[which(years <= t),which(years <= t)]
>   
>   #### set vertex attributes
>   # same issue area
>   net.t <- set.vertex.attribute(net.t,"SameIssueArea", scc1[which(years <= t),41])
>   # abs diff of MQ score
>   net.t <- set.vertex.attribute(net.t,"AbsDiffMQscores", scc1[which(years <= t),65])
>   # number justices that voted for the case
>   net.t <- set.vertex.attribute(net.t,"NumberJusticesPro", scc1[which(years <= t),52])
>   # overruled covariate
>   net.t <- set.vertex.attribute(net.t,"Overruled", Overruled.matrix[which(years <= t),idt])
>   # sender time
>   net.t <- set.vertex.attribute(net.t,"sender.time", sender.time.t[,1])
>   # Majority Opinion Writer
>   net.t <- set.vertex.attribute(net.t,"MajOpWriter", scc1[which(years <= t),49])
> 
>   
>   not.fixed <- network(1*(sender.time == t))
>   
>   load(file="1952_1.RData")
> 
>   li <- li52[[1]]
> 
> 
>   
>   # fitting glm
>   model <- ergm(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), control=control.ergm(MCMC.samplesize=10000,MCMLE.maxit=50, init=li)) #
>   summary(model)

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + mutual + nodeicov("o.degree") + difftransties("term") + 
    gwidegree(1, fixed = TRUE) + dgwesp(0.15, fixed = TRUE, type = "OSP") + 
    edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  6 out of 50 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC % z value Pr(>|z|)    
edges                          -6.770949   0.260155      0 -26.027  < 1e-04 ***
mutual                        -12.692563         NA     NA      NA       NA    
nodeicov.o.degree              -0.038672   0.005675      0  -6.814  < 1e-04 ***
difftransties.term              1.887293   0.158311      0  11.921  < 1e-04 ***
gwideg.fixed.1                 -0.255225   0.164605      0  -1.551 0.121015    
gwesp.OSP.fixed.0.15            2.775576   0.132461      0  20.954  < 1e-04 ***
edgecov.mq.t                   -0.045824   0.056019      0  -0.818 0.413353    
edgecov.year.diff.t            -0.055264   0.034350      0  -1.609 0.107651    
edgecov.year.diff.square.t     -0.001740   0.002135      0  -0.815 0.415276    
nodeicov.AbsDiffMQscores        0.045189   0.040666      0   1.111 0.266471    
nodeicov.NumberJusticesPro      0.004938   0.033967      0   0.145 0.884410    
nodeicov.Overruled            -11.717220         NA     NA      NA       NA    
edgecov.same.opinion.writer.t   0.407521   0.119491      0   3.410 0.000648 ***
edgecov.same.issue.area.t       1.000263   0.065160      0  15.351  < 1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

     Null Deviance: 349280  on 251952  degrees of freedom
 Residual Deviance:   6645  on 251938  degrees of freedom
 
AIC: 6673    BIC: 6819    (Smaller is better.) 
>   aicm<- AIC(model)
>   bicm <- BIC(model)
> 
>   # get statistics
>   erg.est <- summary(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ 
+                 dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+edgecov(same.opinion.writer.t) + nodeifactor('MajOpWriter')+ edgecov(same.issue.area.t)  )
>   erg.est
                        edges                        mutual 
                     9097.000                         7.000 
            nodeicov.o.degree            difftransties.term 
                    48182.000                      3624.000 
               gwideg.fixed.1          gwesp.OSP.fixed.0.15 
                     3362.667                      4389.279 
                 edgecov.mq.t           edgecov.year.diff.t 
                     8310.266                     37867.000 
   edgecov.year.diff.square.t      nodeicov.AbsDiffMQscores 
                   258815.000                     39074.540 
   nodeicov.NumberJusticesPro            nodeicov.Overruled 
                    64155.000                        25.000 
edgecov.same.opinion.writer.t    nodeifactor.MajOpWriter.68 
                     1366.000                       191.000 
   nodeifactor.MajOpWriter.71    nodeifactor.MajOpWriter.72 
                       34.000                       100.000 
   nodeifactor.MajOpWriter.74    nodeifactor.MajOpWriter.75 
                     1401.000                       572.000 
   nodeifactor.MajOpWriter.76    nodeifactor.MajOpWriter.77 
                      658.000                        50.000 
   nodeifactor.MajOpWriter.78    nodeifactor.MajOpWriter.79 
                     1119.000                       906.000 
   nodeifactor.MajOpWriter.80    nodeifactor.MajOpWriter.81 
                      926.000                      1238.000 
   nodeifactor.MajOpWriter.82    nodeifactor.MajOpWriter.83 
                      440.000                        55.000 
   nodeifactor.MajOpWriter.84    nodeifactor.MajOpWriter.85 
                      455.000                       264.000 
   nodeifactor.MajOpWriter.86    nodeifactor.MajOpWriter.87 
                       93.000                       168.000 
   nodeifactor.MajOpWriter.88    nodeifactor.MajOpWriter.89 
                       35.000                        25.000 
    edgecov.same.issue.area.t 
                     4707.000 
>    
>   
>    
>    #############################################
>    # Independence model
>    #############################################
>    ind <- ergm(net.t~edges+ 
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), estimate="MLE") #
>     
>   summary(ind)   

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  15 out of 20 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC % z value Pr(>|z|)    
edges                          -5.791849   0.213466      0 -27.132   <1e-04 ***
edgecov.mq.t                    0.106408   0.057588      0   1.848   0.0646 .  
edgecov.year.diff.t            -0.013099   0.035758      0  -0.366   0.7141    
edgecov.year.diff.square.t     -0.002162   0.002282      0  -0.947   0.3435    
nodeicov.AbsDiffMQscores       -0.052311   0.043321      0  -1.208   0.2272    
nodeicov.NumberJusticesPro     -0.068494   0.033997      0  -2.015   0.0439 *  
nodeicov.Overruled            -11.923011 171.293760      0  -0.070   0.9445    
edgecov.same.opinion.writer.t   0.524661   0.122923      0   4.268   <1e-04 ***
edgecov.same.issue.area.t       2.028473   0.077070      0  26.320   <1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

     Null Deviance: 349280  on 251952  degrees of freedom
 Residual Deviance:   8759  on 251943  degrees of freedom
 
AIC: 8777    BIC: 8871    (Smaller is better.) 
>   aici<- AIC(ind)
>   bici <- BIC(ind)
> 
>    
> 
>    li52<- list(coef(model),  coef(summary(model))[,5], coef(summary(model))[,2], aicm, bicm,
+                coef(ind),  coef(summary(ind))[,5], coef(summary(ind))[,2], aici, bici ) 
>    names(li52)<- c("Coefficients", "P-values", "StdErrors", "AICm", "BICm",
+                    "CoefficientsI", "P-valuesI", "StdErrorsI", "AICi", "BICi")
> 
>   save(li52,file="1952_2.RData")
> 
> 
> 
> 
