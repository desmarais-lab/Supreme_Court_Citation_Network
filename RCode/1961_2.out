
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # get data
> load(file="ERCM_MPLE_cl.RData")
> 
> # install.packages("statnet", Sys.getenv("R_LIBS_USER"), repos = "http://cran.case.edu" )
> library(statnet)
> library(MLmetrics)
> library(xtable)
> library(tc.ergmterms)
> 
> # there are cases in 1962 marked as 1963 and in 1971 marked as 1972
> scc1[3364,11] <- 1962
> scc1[4648,11] <- 1971
> 
> 
> year.total <- scc1[,11]-1936 #-1936 => the first year 1937 is 1, 1938 is 2 aso, term column 
> 
> set.seed(12123)
> #sampled.years <- c(14, 24, 34, 44, 54, 64, 74)
> 
> t<- 25
>   print(t+1936)
[1] 1961
> tt<- t+1936
>   rowlasttt <- max(which(scc1[,11] == tt))
>   idt <- scc1[rowlasttt, 55]  
> 
>   
>   cases <- max(which(year.total==t)) # 14 corresponds to 1950
>   
>   # simple assignment of time periods to cases
>   years <- year.total[1:cases] 
>   
>   # going to need a sender time matrix covariate
>   sender.time <- matrix(years,length(years),length(years),byrow=F)
>   year <- matrix(years, length(years),length(years),byrow=F)
>   
>    # extract the network up to time t
>   AM <- adjacency.matrix[which(years <= t),which(years <= t)]
>   
>   net.t <- network(AM) 
>   
>   #calculate outdegree
>   o.degree<- rowSums(AM)
>   
>   # fix the outdegrees of time t as 0
>   last.t<- which(years==t)
>   
>   o.degree[last.t]<- 0
>   
>   # indicate outdegree and term as a node attribute
>   net.t <- set.vertex.attribute(net.t,"o.degree", o.degree)
>   net.t <- set.vertex.attribute(net.t,"term", years)
> 
> 
>    # subset MQ matrix
>   mq.t <- mq.matrix[which(years <= t),which(years <= t)]
>   # subset same issue matrix
>   same.issue.area.t <- same.issue.area[which(years <= t),which(years <= t)]
>   # subset year diff matrix
>   year.diff.t <- year.diff.matrix[which(years <= t),which(years <= t)]
>   # subset year diff matrix square
>   year.diff.square.t <- year.diff.t^2
>   # subset sender time matrix
>   sender.time.t <- sender.time[which(years <= t),which(years <= t)]
>   # subset unique dyad id matrix
>   #dyad.id.t <- dyad.id[which(years <= t),which(years <= t)]
>   # subset year matrix
>   year.t<- year[which(years <= t),which(years <= t)]
>   # subset same opinion writer matrix
>   same.opinion.writer.t<- same.opinion.writer[which(years <= t),which(years <= t)]
>   
>   #### set vertex attributes
>   # same issue area
>   net.t <- set.vertex.attribute(net.t,"SameIssueArea", scc1[which(years <= t),41])
>   # abs diff of MQ score
>   net.t <- set.vertex.attribute(net.t,"AbsDiffMQscores", scc1[which(years <= t),65])
>   # number justices that voted for the case
>   net.t <- set.vertex.attribute(net.t,"NumberJusticesPro", scc1[which(years <= t),52])
>   # overruled covariate
>   net.t <- set.vertex.attribute(net.t,"Overruled", Overruled.matrix[which(years <= t),idt])
>   # sender time
>   net.t <- set.vertex.attribute(net.t,"sender.time", sender.time.t[,1])
>   # Majority Opinion Writer
>   net.t <- set.vertex.attribute(net.t,"MajOpWriter", scc1[which(years <= t),49])
> 
>   
>   not.fixed <- network(1*(sender.time == t))
>   
>   load(file="1961_1.RData")
> 
>   li <- li61[[1]]
> 
> 
>   
>   # fitting glm
>   model <- ergm(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), control=control.ergm(MCMC.samplesize=10000,MCMLE.maxit=50, init=li)) #
>   summary(model)

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + mutual + nodeicov("o.degree") + difftransties("term") + 
    gwidegree(1, fixed = TRUE) + dgwesp(0.15, fixed = TRUE, type = "OSP") + 
    edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  2 out of 50 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC % z value Pr(>|z|)    
edges                         -6.939e+00  2.271e-01      0 -30.558   <1e-04 ***
mutual                        -1.110e+01         NA     NA      NA       NA    
nodeicov.o.degree             -3.244e-02  4.364e-03      0  -7.433   <1e-04 ***
difftransties.term             1.893e+00  1.162e-01      0  16.289   <1e-04 ***
gwideg.fixed.1                -3.177e-01  1.372e-01      0  -2.316   0.0206 *  
gwesp.OSP.fixed.0.15           2.520e+00  9.367e-02      0  26.902   <1e-04 ***
edgecov.mq.t                  -8.314e-02  4.265e-02      0  -1.949   0.0513 .  
edgecov.year.diff.t           -3.648e-02  2.242e-02      0  -1.627   0.1037    
edgecov.year.diff.square.t    -4.854e-04  8.924e-04      0  -0.544   0.5865    
nodeicov.AbsDiffMQscores       3.371e-02  2.148e-02      0   1.569   0.1166    
nodeicov.NumberJusticesPro     4.473e-02  2.446e-02      0   1.828   0.0675 .  
nodeicov.Overruled            -9.327e-01  4.884e-01      0  -1.910   0.0562 .  
edgecov.same.opinion.writer.t  3.054e-01  1.193e-01      0   2.559   0.0105 *  
edgecov.same.issue.area.t      8.624e-01  4.928e-02      0  17.499   <1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

     Null Deviance: 523895  on 377910  degrees of freedom
 Residual Deviance:   9752  on 377896  degrees of freedom
 
AIC: 9780    BIC: 9932    (Smaller is better.) 
>   aicm<- AIC(model)
>   bicm <- BIC(model)
> 
>   # get statistics
>   erg.est <- summary(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ 
+                 dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+edgecov(same.opinion.writer.t) + nodeifactor('MajOpWriter')+ edgecov(same.issue.area.t)  )
>   erg.est
                        edges                        mutual 
                    15893.000                         8.000 
            nodeicov.o.degree            difftransties.term 
                   104264.000                      6990.000 
               gwideg.fixed.1          gwesp.OSP.fixed.0.15 
                     5225.983                      8380.112 
                 edgecov.mq.t           edgecov.year.diff.t 
                    15171.356                    102302.000 
   edgecov.year.diff.square.t      nodeicov.AbsDiffMQscores 
                  1147580.000                     65301.704 
   nodeicov.NumberJusticesPro            nodeicov.Overruled 
                   110294.000                       111.000 
edgecov.same.opinion.writer.t    nodeifactor.MajOpWriter.68 
                     1973.000                       237.000 
   nodeifactor.MajOpWriter.71    nodeifactor.MajOpWriter.72 
                       41.000                       124.000 
   nodeifactor.MajOpWriter.74    nodeifactor.MajOpWriter.75 
                     1743.000                       726.000 
   nodeifactor.MajOpWriter.76    nodeifactor.MajOpWriter.77 
                      887.000                        80.000 
   nodeifactor.MajOpWriter.78    nodeifactor.MajOpWriter.79 
                     2037.000                      1425.000 
   nodeifactor.MajOpWriter.80    nodeifactor.MajOpWriter.81 
                     1780.000                      1982.000 
   nodeifactor.MajOpWriter.82    nodeifactor.MajOpWriter.83 
                      637.000                        95.000 
   nodeifactor.MajOpWriter.84    nodeifactor.MajOpWriter.85 
                      856.000                       446.000 
   nodeifactor.MajOpWriter.86    nodeifactor.MajOpWriter.87 
                      338.000                       431.000 
   nodeifactor.MajOpWriter.88    nodeifactor.MajOpWriter.89 
                      359.000                       188.000 
   nodeifactor.MajOpWriter.90    nodeifactor.MajOpWriter.91 
                      255.000                       180.000 
   nodeifactor.MajOpWriter.92    nodeifactor.MajOpWriter.93 
                      185.000                        72.000 
   nodeifactor.MajOpWriter.94    nodeifactor.MajOpWriter.95 
                       99.000                         0.000 
    edgecov.same.issue.area.t 
                     8711.000 
>    
>   
>    
>    #############################################
>    # Independence model
>    #############################################
>    ind <- ergm(net.t~edges+ 
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), estimate="MLE") #
>     
>   summary(ind)   

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  7 out of 20 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC % z value Pr(>|z|)    
edges                         -5.8767783  0.2043382      0 -28.760  < 1e-04 ***
edgecov.mq.t                  -0.0729006  0.0490511      0  -1.486 0.137221    
edgecov.year.diff.t            0.0054316  0.0232656      0   0.233 0.815402    
edgecov.year.diff.square.t    -0.0014690  0.0009472      0  -1.551 0.120917    
nodeicov.AbsDiffMQscores       0.0333221  0.0254585      0   1.309 0.190575    
nodeicov.NumberJusticesPro    -0.0839745  0.0260887      0  -3.219 0.001287 ** 
nodeicov.Overruled            -0.2803396  0.5811812      0  -0.482 0.629549    
edgecov.same.opinion.writer.t  0.4505488  0.1287921      0   3.498 0.000468 ***
edgecov.same.issue.area.t      1.9267831  0.0651705      0  29.565  < 1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

     Null Deviance: 523895  on 377910  degrees of freedom
 Residual Deviance:  12423  on 377901  degrees of freedom
 
AIC: 12441    BIC: 12539    (Smaller is better.) 
>   aici<- AIC(ind)
>   bici <- BIC(ind)
> 
>    
> 
>    li61<- list(coef(model),  coef(summary(model))[,5], coef(summary(model))[,2], aicm, bicm,
+                coef(ind),  coef(summary(ind))[,5], coef(summary(ind))[,2], aici, bici ) 
>    names(li61)<- c("Coefficients", "P-values", "StdErrors", "AICm", "BICm",
+                    "CoefficientsI", "P-valuesI", "StdErrorsI", "AICi", "BICi")
> 
>   save(li61,file="1961_2.RData")
> 
> 
> 
> 
