#PBS -l nodes=1:ppn=1
#PBS -l walltime=10:00:00
#PBS -m abe
#PBS -M schmid@psu.edu
#PBS -l mem=256GB
#PBS -j oe


cd /storage/work/cxs5700/SCC_paper/Restart/OSP_O

echo " "
echo " "
echo "Job started on `hostname` at `date`"

module load R#/3.4.0

R --vanilla <<STOP > 1986_2.out

# get data
load(file="ERCM_MPLE_cl.RData")

# install.packages("statnet", Sys.getenv("R_LIBS_USER"), repos = "http://cran.case.edu" )
library(statnet)
library(MLmetrics)
library(xtable)
library(tc.ergmterms)

# there are cases in 1962 marked as 1963 and in 1971 marked as 1972
scc1[3364,11] <- 1962
scc1[4648,11] <- 1971


year.total <- scc1[,11]-1936 #-1936 => the first year 1937 is 1, 1938 is 2 aso, term column 

set.seed(12123)
#sampled.years <- c(14, 24, 34, 44, 54, 64, 74)

t<- 50
  print(t+1936)
tt<- t+1936
  rowlasttt <- max(which(scc1[,11] == tt))
  idt <- scc1[rowlasttt, 55]  

  
  cases <- max(which(year.total==t)) # 14 corresponds to 1950
  
  # simple assignment of time periods to cases
  years <- year.total[1:cases] 
  
  # going to need a sender time matrix covariate
  sender.time <- matrix(years,length(years),length(years),byrow=F)
  year <- matrix(years, length(years),length(years),byrow=F)
  
   # extract the network up to time t
  AM <- adjacency.matrix[which(years <= t),which(years <= t)]
  
  net.t <- network(AM) 
  
  #calculate outdegree
  o.degree<- rowSums(AM)
  
  # fix the outdegrees of time t as 0
  last.t<- which(years==t)
  
  o.degree[last.t]<- 0
  
  # indicate outdegree and term as a node attribute
  net.t <- set.vertex.attribute(net.t,"o.degree", o.degree)
  net.t <- set.vertex.attribute(net.t,"term", years)


   # subset MQ matrix
  mq.t <- mq.matrix[which(years <= t),which(years <= t)]
  # subset same issue matrix
  same.issue.area.t <- same.issue.area[which(years <= t),which(years <= t)]
  # subset year diff matrix
  year.diff.t <- year.diff.matrix[which(years <= t),which(years <= t)]
  # subset year diff matrix square
  year.diff.square.t <- year.diff.t^2
  # subset sender time matrix
  sender.time.t <- sender.time[which(years <= t),which(years <= t)]
  # subset unique dyad id matrix
  #dyad.id.t <- dyad.id[which(years <= t),which(years <= t)]
  # subset year matrix
  year.t<- year[which(years <= t),which(years <= t)]
  # subset same opinion writer matrix
  same.opinion.writer.t<- same.opinion.writer[which(years <= t),which(years <= t)]
  
  #### set vertex attributes
  # same issue area
  net.t <- set.vertex.attribute(net.t,"SameIssueArea", scc1[which(years <= t),41])
  # abs diff of MQ score
  net.t <- set.vertex.attribute(net.t,"AbsDiffMQscores", scc1[which(years <= t),65])
  # number justices that voted for the case
  net.t <- set.vertex.attribute(net.t,"NumberJusticesPro", scc1[which(years <= t),52])
  # overruled covariate
  net.t <- set.vertex.attribute(net.t,"Overruled", Overruled.matrix[which(years <= t),idt])
  # sender time
  net.t <- set.vertex.attribute(net.t,"sender.time", sender.time.t[,1])
  # Majority Opinion Writer
  net.t <- set.vertex.attribute(net.t,"MajOpWriter", scc1[which(years <= t),49])

  
  not.fixed <- network(1*(sender.time == t))
  
  load(file="1986_1.RData")

  li <- li86[[1]]


  
  # fitting glm
  model <- ergm(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ dgwesp(0.15, fixed=TRUE, type="OSP") +
                edgecov(mq.t)+
                edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
                nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
                nodeicov('Overruled')+
                edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
                constraints=~fixallbut(not.fixed), control=control.ergm(MCMC.samplesize=10000,MCMLE.maxit=50, init=li)) #
  summary(model)
  aicm<- AIC(model)
  bicm <- BIC(model)

  # get statistics
  erg.est <- summary(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ 
                dgwesp(0.15, fixed=TRUE, type="OSP") +
                edgecov(mq.t)+
                edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
                nodeicov('Overruled')+edgecov(same.opinion.writer.t) + nodeifactor('MajOpWriter')+ edgecov(same.issue.area.t)  )
  erg.est
   
  
   
   #############################################
   # Independence model
   #############################################
   ind <- ergm(net.t~edges+ 
                edgecov(mq.t)+
                edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
                nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
                nodeicov('Overruled')+
                edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
                constraints=~fixallbut(not.fixed), estimate="MLE") #
    
  summary(ind)   
  aici<- AIC(ind)
  bici <- BIC(ind)

   

   li86<- list(coef(model),  coef(summary(model))[,5], coef(summary(model))[,2], aicm, bicm,
               coef(ind),  coef(summary(ind))[,5], coef(summary(ind))[,2], aici, bici ) 
   names(li86)<- c("Coefficients", "P-values", "StdErrors", "AICm", "BICm",
                   "CoefficientsI", "P-valuesI", "StdErrorsI", "AICi", "BICi")

  save(li86,file="1986_2.RData")



STOP
echo " "
echo "Job Ended at `date`"
echo " "