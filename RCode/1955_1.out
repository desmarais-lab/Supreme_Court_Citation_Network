
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # get data
> load(file="ERCM_MPLE_cl.RData")
> 
> # install.packages("statnet", Sys.getenv("R_LIBS_USER"), repos = "http://cran.case.edu" )
> library(statnet)
> library(MLmetrics)
> library(xtable)
> library(tc.ergmterms)
> 
> # there are cases in 1962 marked as 1963 and in 1971 marked as 1972
> scc1[3364,11] <- 1962
> scc1[4648,11] <- 1971
> 
> 
> year.total <- scc1[,11]-1936 #-1936 => the first year 1937 is 1, 1938 is 2 aso, term column 
> 
> set.seed(12123)
> #sampled.years <- c(14, 24, 34, 44, 54, 64, 74)
> 
> t<- 19
>   print(t+1936)
[1] 1955
> tt<- t+1936
>   rowlasttt <- max(which(scc1[,11] == tt))
>   idt <- scc1[rowlasttt, 55]  
> 
>   
>   cases <- max(which(year.total==t)) # 14 corresponds to 1950
>   
>   # simple assignment of time periods to cases
>   years <- year.total[1:cases] 
>   
>   # going to need a sender time matrix covariate
>   sender.time <- matrix(years,length(years),length(years),byrow=F)
>   year <- matrix(years, length(years),length(years),byrow=F)
>   
>    # extract the network up to time t
>   AM <- adjacency.matrix[which(years <= t),which(years <= t)]
>   
>   net.t <- network(AM) 
>   
>   #calculate outdegree
>   o.degree<- rowSums(AM)
>   
>   # fix the outdegrees of time t as 0
>   last.t<- which(years==t)
>   
>   o.degree[last.t]<- 0
>   
>   # indicate outdegree and term as a node attribute
>   net.t <- set.vertex.attribute(net.t,"o.degree", o.degree)
>   net.t <- set.vertex.attribute(net.t,"term", years)
> 
> 
>    # subset MQ matrix
>   mq.t <- mq.matrix[which(years <= t),which(years <= t)]
>   # subset same issue matrix
>   same.issue.area.t <- same.issue.area[which(years <= t),which(years <= t)]
>   # subset year diff matrix
>   year.diff.t <- year.diff.matrix[which(years <= t),which(years <= t)]
>   # subset year diff matrix square
>   year.diff.square.t <- year.diff.t^2
>   # subset sender time matrix
>   sender.time.t <- sender.time[which(years <= t),which(years <= t)]
>   # subset unique dyad id matrix
>   #dyad.id.t <- dyad.id[which(years <= t),which(years <= t)]
>   # subset year matrix
>   year.t<- year[which(years <= t),which(years <= t)]
>   # subset same opinion writer matrix
>   same.opinion.writer.t<- same.opinion.writer[which(years <= t),which(years <= t)]
>   
>   #### set vertex attributes
>   # same issue area
>   net.t <- set.vertex.attribute(net.t,"SameIssueArea", scc1[which(years <= t),41])
>   # abs diff of MQ score
>   net.t <- set.vertex.attribute(net.t,"AbsDiffMQscores", scc1[which(years <= t),65])
>   # number justices that voted for the case
>   net.t <- set.vertex.attribute(net.t,"NumberJusticesPro", scc1[which(years <= t),52])
>   # overruled covariate
>   net.t <- set.vertex.attribute(net.t,"Overruled", Overruled.matrix[which(years <= t),idt])
>   # sender time
>   net.t <- set.vertex.attribute(net.t,"sender.time", sender.time.t[,1])
>   # Majority Opinion Writer
>   net.t <- set.vertex.attribute(net.t,"MajOpWriter", scc1[which(years <= t),49])
> 
>   
>   not.fixed <- network(1*(sender.time == t))
>   
>   
>   # fitting glm
>   model <- ergm(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), control=control.ergm(MCMC.samplesize=10000,MCMLE.maxit=50), eval.loglik=FALSE) #
>   summary(model) 

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + mutual + nodeicov("o.degree") + difftransties("term") + 
    gwidegree(1, fixed = TRUE) + dgwesp(0.15, fixed = TRUE, type = "OSP") + 
    edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  6 out of 50 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC % z value Pr(>|z|)    
edges                          -6.074916   0.323671      0 -18.769  < 1e-04 ***
mutual                        -13.763207         NA     NA      NA       NA    
nodeicov.o.degree              -0.030509   0.006514      0  -4.684  < 1e-04 ***
difftransties.term              1.706718   0.180142      0   9.474  < 1e-04 ***
gwideg.fixed.1                 -0.672801   0.199455      0  -3.373 0.000743 ***
gwesp.OSP.fixed.0.15            2.631058   0.152806      0  17.218  < 1e-04 ***
edgecov.mq.t                    0.006847   0.068489      0   0.100 0.920362    
edgecov.year.diff.t            -0.142761   0.037125      0  -3.845 0.000120 ***
edgecov.year.diff.square.t      0.002879   0.002106      0   1.367 0.171553    
nodeicov.AbsDiffMQscores       -0.029192   0.043693      0  -0.668 0.504054    
nodeicov.NumberJusticesPro      0.017126   0.035958      0   0.476 0.633874    
nodeicov.Overruled            -12.210135         NA     NA      NA       NA    
edgecov.same.opinion.writer.t   0.487324   0.133192      0   3.659 0.000253 ***
edgecov.same.issue.area.t       0.938593   0.074854      0  12.539  < 1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Log-likelihood was not estimated for this fit.
To get deviances, AIC, and/or BIC from fit `model` run 
  > model<-logLik(model, add=TRUE)
to add it to the object or rerun this function with eval.loglik=TRUE.
>   
> 
>   # get statistics
>   erg.est <- summary(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ 
+                 dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+edgecov(same.opinion.writer.t) + nodeifactor('MajOpWriter')+ edgecov(same.issue.area.t)  )
>   erg.est
                        edges                        mutual 
                    10479.000                         7.000 
            nodeicov.o.degree            difftransties.term 
                    57842.000                      4248.000 
               gwideg.fixed.1          gwesp.OSP.fixed.0.15 
                     3775.115                      5101.811 
                 edgecov.mq.t           edgecov.year.diff.t 
                     9520.943                     49313.000 
   edgecov.year.diff.square.t      nodeicov.AbsDiffMQscores 
                   387271.000                     43877.366 
   nodeicov.NumberJusticesPro            nodeicov.Overruled 
                    73644.000                        28.000 
edgecov.same.opinion.writer.t    nodeifactor.MajOpWriter.68 
                     1527.000                       207.000 
   nodeifactor.MajOpWriter.71    nodeifactor.MajOpWriter.72 
                       36.000                       108.000 
   nodeifactor.MajOpWriter.74    nodeifactor.MajOpWriter.75 
                     1482.000                       622.000 
   nodeifactor.MajOpWriter.76    nodeifactor.MajOpWriter.77 
                      705.000                        58.000 
   nodeifactor.MajOpWriter.78    nodeifactor.MajOpWriter.79 
                     1319.000                      1036.000 
   nodeifactor.MajOpWriter.80    nodeifactor.MajOpWriter.81 
                     1100.000                      1417.000 
   nodeifactor.MajOpWriter.82    nodeifactor.MajOpWriter.83 
                      483.000                        62.000 
   nodeifactor.MajOpWriter.84    nodeifactor.MajOpWriter.85 
                      553.000                       317.000 
   nodeifactor.MajOpWriter.86    nodeifactor.MajOpWriter.87 
                      149.000                       240.000 
   nodeifactor.MajOpWriter.88    nodeifactor.MajOpWriter.89 
                       95.000                        62.000 
   nodeifactor.MajOpWriter.90    nodeifactor.MajOpWriter.91 
                       13.000                         1.000 
    edgecov.same.issue.area.t 
                     5504.000 
>   
> 
>    li55<- list(coef(model),  coef(summary(model))[,5], coef(summary(model))[,2] ) 
>    names(li55)<- c("Coefficients", "P-values", "StdErrors")
> 
>   save(li55,file="1955_1.RData")
> 
> 
> 
> 
