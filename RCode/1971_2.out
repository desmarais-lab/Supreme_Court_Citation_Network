
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # get data
> load(file="ERCM_MPLE_cl.RData")
> 
> # install.packages("statnet", Sys.getenv("R_LIBS_USER"), repos = "http://cran.case.edu" )
> library(statnet)
> library(MLmetrics)
> library(xtable)
> library(tc.ergmterms)
> 
> # there are cases in 1962 marked as 1963 and in 1971 marked as 1972
> scc1[3364,11] <- 1962
> scc1[4648,11] <- 1971
> 
> 
> year.total <- scc1[,11]-1936 #-1936 => the first year 1937 is 1, 1938 is 2 aso, term column 
> 
> set.seed(12123)
> #sampled.years <- c(14, 24, 34, 44, 54, 64, 74)
> 
> t<- 35
>   print(t+1936)
[1] 1971
> tt<- t+1936
>   rowlasttt <- max(which(scc1[,11] == tt))
>   idt <- scc1[rowlasttt, 55]  
> 
>   
>   cases <- max(which(year.total==t)) # 14 corresponds to 1950
>   
>   # simple assignment of time periods to cases
>   years <- year.total[1:cases] 
>   
>   # going to need a sender time matrix covariate
>   sender.time <- matrix(years,length(years),length(years),byrow=F)
>   year <- matrix(years, length(years),length(years),byrow=F)
>   
>    # extract the network up to time t
>   AM <- adjacency.matrix[which(years <= t),which(years <= t)]
>   
>   net.t <- network(AM) 
>   
>   #calculate outdegree
>   o.degree<- rowSums(AM)
>   
>   # fix the outdegrees of time t as 0
>   last.t<- which(years==t)
>   
>   o.degree[last.t]<- 0
>   
>   # indicate outdegree and term as a node attribute
>   net.t <- set.vertex.attribute(net.t,"o.degree", o.degree)
>   net.t <- set.vertex.attribute(net.t,"term", years)
> 
> 
>    # subset MQ matrix
>   mq.t <- mq.matrix[which(years <= t),which(years <= t)]
>   # subset same issue matrix
>   same.issue.area.t <- same.issue.area[which(years <= t),which(years <= t)]
>   # subset year diff matrix
>   year.diff.t <- year.diff.matrix[which(years <= t),which(years <= t)]
>   # subset year diff matrix square
>   year.diff.square.t <- year.diff.t^2
>   # subset sender time matrix
>   sender.time.t <- sender.time[which(years <= t),which(years <= t)]
>   # subset unique dyad id matrix
>   #dyad.id.t <- dyad.id[which(years <= t),which(years <= t)]
>   # subset year matrix
>   year.t<- year[which(years <= t),which(years <= t)]
>   # subset same opinion writer matrix
>   same.opinion.writer.t<- same.opinion.writer[which(years <= t),which(years <= t)]
>   
>   #### set vertex attributes
>   # same issue area
>   net.t <- set.vertex.attribute(net.t,"SameIssueArea", scc1[which(years <= t),41])
>   # abs diff of MQ score
>   net.t <- set.vertex.attribute(net.t,"AbsDiffMQscores", scc1[which(years <= t),65])
>   # number justices that voted for the case
>   net.t <- set.vertex.attribute(net.t,"NumberJusticesPro", scc1[which(years <= t),52])
>   # overruled covariate
>   net.t <- set.vertex.attribute(net.t,"Overruled", Overruled.matrix[which(years <= t),idt])
>   # sender time
>   net.t <- set.vertex.attribute(net.t,"sender.time", sender.time.t[,1])
>   # Majority Opinion Writer
>   net.t <- set.vertex.attribute(net.t,"MajOpWriter", scc1[which(years <= t),49])
> 
>   
>   not.fixed <- network(1*(sender.time == t))
>   
>   load(file="1971_1.RData")
> 
>   li <- li71[[1]]
> 
> 
>   
>   # fitting glm
>   model <- ergm(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), control=control.ergm(MCMC.samplesize=10000,MCMLE.maxit=50, init=li)) #
>   summary(model)

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + mutual + nodeicov("o.degree") + difftransties("term") + 
    gwidegree(1, fixed = TRUE) + dgwesp(0.15, fixed = TRUE, type = "OSP") + 
    edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  2 out of 50 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC % z value Pr(>|z|)    
edges                         -7.385e+00  1.478e-01      0 -49.955  < 1e-04 ***
mutual                        -1.175e+01         NA     NA      NA       NA    
nodeicov.o.degree             -2.367e-02  2.204e-03      0 -10.740  < 1e-04 ***
difftransties.term             2.213e+00  7.341e-02      0  30.141  < 1e-04 ***
gwideg.fixed.1                -2.610e-01  1.065e-01      0  -2.450  0.01428 *  
gwesp.OSP.fixed.0.15           2.561e+00  6.047e-02      0  42.346  < 1e-04 ***
edgecov.mq.t                   2.873e-02  1.885e-02      0   1.524  0.12752    
edgecov.year.diff.t           -4.802e-02  8.716e-03      0  -5.510  < 1e-04 ***
edgecov.year.diff.square.t     5.054e-04  2.533e-04      0   1.996  0.04597 *  
nodeicov.AbsDiffMQscores       3.517e-02  1.096e-02      0   3.209  0.00133 ** 
nodeicov.NumberJusticesPro     1.400e-02  1.753e-02      0   0.799  0.42448    
nodeicov.Overruled            -1.412e+00  2.603e-01      0  -5.424  < 1e-04 ***
edgecov.same.opinion.writer.t  5.641e-01  7.874e-02      0   7.164  < 1e-04 ***
edgecov.same.issue.area.t      6.469e-01  3.057e-02      0  21.160  < 1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

     Null Deviance: 1193766  on 861120  degrees of freedom
 Residual Deviance:   20178  on 861106  degrees of freedom
 
AIC: 20206    BIC: 20370    (Smaller is better.) 
>   aicm<- AIC(model)
>   bicm <- BIC(model)
> 
>   # get statistics
>   erg.est <- summary(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ 
+                 dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+edgecov(same.opinion.writer.t) + nodeifactor('MajOpWriter')+ edgecov(same.issue.area.t)  )
>   erg.est
                        edges                        mutual 
                    30032.000                        11.000 
            nodeicov.o.degree            difftransties.term 
                   287297.000                     15447.000 
               gwideg.fixed.1          gwesp.OSP.fixed.0.15 
                     8117.513                     18386.975 
                 edgecov.mq.t           edgecov.year.diff.t 
                    28698.108                    257328.000 
   edgecov.year.diff.square.t      nodeicov.AbsDiffMQscores 
                  3998728.000                    141963.768 
   nodeicov.NumberJusticesPro            nodeicov.Overruled 
                   207970.000                       702.000 
edgecov.same.opinion.writer.t    nodeifactor.MajOpWriter.68 
                     3031.000                       289.000 
   nodeifactor.MajOpWriter.71    nodeifactor.MajOpWriter.72 
                       46.000                       156.000 
   nodeifactor.MajOpWriter.74    nodeifactor.MajOpWriter.75 
                     2111.000                       884.000 
   nodeifactor.MajOpWriter.76    nodeifactor.MajOpWriter.77 
                     1172.000                       103.000 
   nodeifactor.MajOpWriter.78    nodeifactor.MajOpWriter.79 
                     3653.000                      1935.000 
   nodeifactor.MajOpWriter.80    nodeifactor.MajOpWriter.81 
                     2756.000                      3587.000 
   nodeifactor.MajOpWriter.82    nodeifactor.MajOpWriter.83 
                      885.000                       123.000 
   nodeifactor.MajOpWriter.84    nodeifactor.MajOpWriter.85 
                     1235.000                       636.000 
   nodeifactor.MajOpWriter.86    nodeifactor.MajOpWriter.87 
                      565.000                       701.000 
   nodeifactor.MajOpWriter.88    nodeifactor.MajOpWriter.89 
                     1179.000                       318.000 
   nodeifactor.MajOpWriter.90    nodeifactor.MajOpWriter.91 
                     1386.000                       859.000 
   nodeifactor.MajOpWriter.92    nodeifactor.MajOpWriter.93 
                     1605.000                       199.000 
   nodeifactor.MajOpWriter.94    nodeifactor.MajOpWriter.95 
                      916.000                       492.000 
   nodeifactor.MajOpWriter.96    nodeifactor.MajOpWriter.97 
                      274.000                       125.000 
   nodeifactor.MajOpWriter.98    nodeifactor.MajOpWriter.99 
                      120.000                        61.000 
  nodeifactor.MajOpWriter.100   nodeifactor.MajOpWriter.101 
                       18.000                         5.000 
  nodeifactor.MajOpWriter.102     edgecov.same.issue.area.t 
                        2.000                     17628.000 
>    
>   
>    
>    #############################################
>    # Independence model
>    #############################################
>    ind <- ergm(net.t~edges+ 
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), estimate="MLE") #
>     
>   summary(ind)   

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  7 out of 20 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC % z value Pr(>|z|)    
edges                         -6.167e+00  1.223e-01      0 -50.427  < 1e-04 ***
edgecov.mq.t                   2.800e-01  2.717e-02      0  10.307  < 1e-04 ***
edgecov.year.diff.t           -3.822e-02  8.658e-03      0  -4.415  < 1e-04 ***
edgecov.year.diff.square.t    -5.874e-07  2.551e-04      0  -0.002  0.99816    
nodeicov.AbsDiffMQscores       3.317e-02  1.134e-02      0   2.924  0.00346 ** 
nodeicov.NumberJusticesPro    -7.486e-02  1.736e-02      0  -4.312  < 1e-04 ***
nodeicov.Overruled            -4.645e-02  2.350e-01      0  -0.198  0.84334    
edgecov.same.opinion.writer.t  8.487e-01  9.053e-02      0   9.374  < 1e-04 ***
edgecov.same.issue.area.t      2.131e+00  4.342e-02      0  49.068  < 1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

     Null Deviance: 1193766  on 861120  degrees of freedom
 Residual Deviance:   27752  on 861111  degrees of freedom
 
AIC: 27770    BIC: 27875    (Smaller is better.) 
>   aici<- AIC(ind)
>   bici <- BIC(ind)
> 
>    
> 
>    li71<- list(coef(model),  coef(summary(model))[,5], coef(summary(model))[,2], aicm, bicm,
+                coef(ind),  coef(summary(ind))[,5], coef(summary(ind))[,2], aici, bici ) 
>    names(li71)<- c("Coefficients", "P-values", "StdErrors", "AICm", "BICm",
+                    "CoefficientsI", "P-valuesI", "StdErrorsI", "AICi", "BICi")
> 
>   save(li71,file="1971_2.RData")
> 
> 
> 
> 
