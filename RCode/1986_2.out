
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # get data
> load(file="ERCM_MPLE_cl.RData")
> 
> # install.packages("statnet", Sys.getenv("R_LIBS_USER"), repos = "http://cran.case.edu" )
> library(statnet)
> library(MLmetrics)
> library(xtable)
> library(tc.ergmterms)
> 
> # there are cases in 1962 marked as 1963 and in 1971 marked as 1972
> scc1[3364,11] <- 1962
> scc1[4648,11] <- 1971
> 
> 
> year.total <- scc1[,11]-1936 #-1936 => the first year 1937 is 1, 1938 is 2 aso, term column 
> 
> set.seed(12123)
> #sampled.years <- c(14, 24, 34, 44, 54, 64, 74)
> 
> t<- 50
>   print(t+1936)
[1] 1986
> tt<- t+1936
>   rowlasttt <- max(which(scc1[,11] == tt))
>   idt <- scc1[rowlasttt, 55]  
> 
>   
>   cases <- max(which(year.total==t)) # 14 corresponds to 1950
>   
>   # simple assignment of time periods to cases
>   years <- year.total[1:cases] 
>   
>   # going to need a sender time matrix covariate
>   sender.time <- matrix(years,length(years),length(years),byrow=F)
>   year <- matrix(years, length(years),length(years),byrow=F)
>   
>    # extract the network up to time t
>   AM <- adjacency.matrix[which(years <= t),which(years <= t)]
>   
>   net.t <- network(AM) 
>   
>   #calculate outdegree
>   o.degree<- rowSums(AM)
>   
>   # fix the outdegrees of time t as 0
>   last.t<- which(years==t)
>   
>   o.degree[last.t]<- 0
>   
>   # indicate outdegree and term as a node attribute
>   net.t <- set.vertex.attribute(net.t,"o.degree", o.degree)
>   net.t <- set.vertex.attribute(net.t,"term", years)
> 
> 
>    # subset MQ matrix
>   mq.t <- mq.matrix[which(years <= t),which(years <= t)]
>   # subset same issue matrix
>   same.issue.area.t <- same.issue.area[which(years <= t),which(years <= t)]
>   # subset year diff matrix
>   year.diff.t <- year.diff.matrix[which(years <= t),which(years <= t)]
>   # subset year diff matrix square
>   year.diff.square.t <- year.diff.t^2
>   # subset sender time matrix
>   sender.time.t <- sender.time[which(years <= t),which(years <= t)]
>   # subset unique dyad id matrix
>   #dyad.id.t <- dyad.id[which(years <= t),which(years <= t)]
>   # subset year matrix
>   year.t<- year[which(years <= t),which(years <= t)]
>   # subset same opinion writer matrix
>   same.opinion.writer.t<- same.opinion.writer[which(years <= t),which(years <= t)]
>   
>   #### set vertex attributes
>   # same issue area
>   net.t <- set.vertex.attribute(net.t,"SameIssueArea", scc1[which(years <= t),41])
>   # abs diff of MQ score
>   net.t <- set.vertex.attribute(net.t,"AbsDiffMQscores", scc1[which(years <= t),65])
>   # number justices that voted for the case
>   net.t <- set.vertex.attribute(net.t,"NumberJusticesPro", scc1[which(years <= t),52])
>   # overruled covariate
>   net.t <- set.vertex.attribute(net.t,"Overruled", Overruled.matrix[which(years <= t),idt])
>   # sender time
>   net.t <- set.vertex.attribute(net.t,"sender.time", sender.time.t[,1])
>   # Majority Opinion Writer
>   net.t <- set.vertex.attribute(net.t,"MajOpWriter", scc1[which(years <= t),49])
> 
>   
>   not.fixed <- network(1*(sender.time == t))
>   
>   load(file="1986_1.RData")
> 
>   li <- li86[[1]]
> 
> 
>   
>   # fitting glm
>   model <- ergm(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), control=control.ergm(MCMC.samplesize=10000,MCMLE.maxit=50, init=li)) #
>   summary(model)

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + mutual + nodeicov("o.degree") + difftransties("term") + 
    gwidegree(1, fixed = TRUE) + dgwesp(0.15, fixed = TRUE, type = "OSP") + 
    edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  11 out of 50 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC % z value Pr(>|z|)    
edges                         -7.243e+00  1.488e-01      0 -48.671   <1e-04 ***
mutual                        -1.450e+01         NA     NA      NA       NA    
nodeicov.o.degree             -2.571e-02  1.667e-03      0 -15.424   <1e-04 ***
difftransties.term             2.602e+00  7.571e-02      0  34.370   <1e-04 ***
gwideg.fixed.1                -1.071e-01  1.131e-01      0  -0.947   0.3437    
gwesp.OSP.fixed.0.15           2.552e+00  6.601e-02      0  38.662   <1e-04 ***
edgecov.mq.t                  -5.651e-02  2.897e-02      0  -1.951   0.0511 .  
edgecov.year.diff.t           -8.376e-02  5.680e-03      0 -14.748   <1e-04 ***
edgecov.year.diff.square.t     1.142e-03  1.249e-04      0   9.144   <1e-04 ***
nodeicov.AbsDiffMQscores       2.167e-02  1.207e-02      0   1.796   0.0726 .  
nodeicov.NumberJusticesPro     6.769e-03  1.992e-02      0   0.340   0.7340    
nodeicov.Overruled            -8.903e-01  2.243e-02     20 -39.696   <1e-04 ***
edgecov.same.opinion.writer.t  4.700e-01  7.332e-02      0   6.410   <1e-04 ***
edgecov.same.issue.area.t      5.490e-01  3.631e-02      0  15.118   <1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

     Null Deviance: 1626410  on 1173207  degrees of freedom
 Residual Deviance:   21758  on 1173193  degrees of freedom
 
AIC: 21786    BIC: 21954    (Smaller is better.) 
>   aicm<- AIC(model)
>   bicm <- BIC(model)
> 
>   # get statistics
>   erg.est <- summary(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ 
+                 dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+edgecov(same.opinion.writer.t) + nodeifactor('MajOpWriter')+ edgecov(same.issue.area.t)  )
>   erg.est
                        edges                        mutual 
                     67579.00                         16.00 
            nodeicov.o.degree            difftransties.term 
                    962039.00                      40115.00 
               gwideg.fixed.1          gwesp.OSP.fixed.0.15 
                     14064.34                      47222.93 
                 edgecov.mq.t           edgecov.year.diff.t 
                     63361.79                     743987.00 
   edgecov.year.diff.square.t      nodeicov.AbsDiffMQscores 
                  15386583.00                     365383.52 
   nodeicov.NumberJusticesPro            nodeicov.Overruled 
                    464902.00                       1766.00 
edgecov.same.opinion.writer.t    nodeifactor.MajOpWriter.68 
                      5933.00                        378.00 
   nodeifactor.MajOpWriter.71    nodeifactor.MajOpWriter.72 
                        56.00                        201.00 
   nodeifactor.MajOpWriter.74    nodeifactor.MajOpWriter.75 
                      2664.00                       1091.00 
   nodeifactor.MajOpWriter.76    nodeifactor.MajOpWriter.77 
                      1482.00                        129.00 
   nodeifactor.MajOpWriter.78    nodeifactor.MajOpWriter.79 
                      5811.00                       2655.00 
   nodeifactor.MajOpWriter.80    nodeifactor.MajOpWriter.81 
                      3928.00                       5917.00 
   nodeifactor.MajOpWriter.82    nodeifactor.MajOpWriter.83 
                      1271.00                        149.00 
   nodeifactor.MajOpWriter.84    nodeifactor.MajOpWriter.85 
                      1841.00                        930.00 
   nodeifactor.MajOpWriter.86    nodeifactor.MajOpWriter.87 
                       856.00                        992.00 
   nodeifactor.MajOpWriter.88    nodeifactor.MajOpWriter.89 
                      1983.00                        439.00 
   nodeifactor.MajOpWriter.90    nodeifactor.MajOpWriter.91 
                      2997.00                       1937.00 
   nodeifactor.MajOpWriter.92    nodeifactor.MajOpWriter.93 
                      5369.00                        333.00 
   nodeifactor.MajOpWriter.94    nodeifactor.MajOpWriter.95 
                      4207.00                       3740.00 
   nodeifactor.MajOpWriter.96    nodeifactor.MajOpWriter.97 
                       550.00                        448.00 
   nodeifactor.MajOpWriter.98    nodeifactor.MajOpWriter.99 
                      1817.00                       2244.00 
  nodeifactor.MajOpWriter.100   nodeifactor.MajOpWriter.101 
                      1606.00                       2454.00 
  nodeifactor.MajOpWriter.102   nodeifactor.MajOpWriter.103 
                      1951.00                       1035.00 
  nodeifactor.MajOpWriter.104   nodeifactor.MajOpWriter.105 
                       341.00                          5.00 
    edgecov.same.issue.area.t 
                     39814.00 
>    
>   
>    
>    #############################################
>    # Independence model
>    #############################################
>    ind <- ergm(net.t~edges+ 
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), estimate="MLE") #
>     
>   summary(ind)   

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  7 out of 20 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC % z value Pr(>|z|)    
edges                         -5.5995835  0.1116040      0 -50.174   <1e-04 ***
edgecov.mq.t                   0.0633358  0.0293939      0   2.155   0.0312 *  
edgecov.year.diff.t           -0.0553817  0.0054735      0 -10.118   <1e-04 ***
edgecov.year.diff.square.t     0.0002968  0.0001279      0   2.321   0.0203 *  
nodeicov.AbsDiffMQscores       0.0128681  0.0113821      0   1.131   0.2582    
nodeicov.NumberJusticesPro    -0.1012992  0.0176483      0  -5.740   <1e-04 ***
nodeicov.Overruled             0.1016787  0.1999327      0   0.509   0.6111    
edgecov.same.opinion.writer.t  0.6445898  0.0745816      0   8.643   <1e-04 ***
edgecov.same.issue.area.t      2.2940245  0.0423777      0  54.133   <1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

     Null Deviance: 1626410  on 1173207  degrees of freedom
 Residual Deviance:   30276  on 1173198  degrees of freedom
 
AIC: 30294    BIC: 30401    (Smaller is better.) 
>   aici<- AIC(ind)
>   bici <- BIC(ind)
> 
>    
> 
>    li86<- list(coef(model),  coef(summary(model))[,5], coef(summary(model))[,2], aicm, bicm,
+                coef(ind),  coef(summary(ind))[,5], coef(summary(ind))[,2], aici, bici ) 
>    names(li86)<- c("Coefficients", "P-values", "StdErrors", "AICm", "BICm",
+                    "CoefficientsI", "P-valuesI", "StdErrorsI", "AICi", "BICi")
> 
>   save(li86,file="1986_2.RData")
> 
> 
> 
> 
