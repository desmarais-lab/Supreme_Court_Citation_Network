
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # get data
> load(file="ERCM_MPLE_cl.RData")
> 
> # install.packages("statnet", Sys.getenv("R_LIBS_USER"), repos = "http://cran.case.edu" )
> library(statnet)
> library(MLmetrics)
> library(xtable)
> library(tc.ergmterms)
> 
> # there are cases in 1962 marked as 1963 and in 1971 marked as 1972
> scc1[3364,11] <- 1962
> scc1[4648,11] <- 1971
> 
> 
> year.total <- scc1[,11]-1936 #-1936 => the first year 1937 is 1, 1938 is 2 aso, term column 
> 
> set.seed(12123)
> #sampled.years <- c(14, 24, 34, 44, 54, 64, 74)
> 
> t<- 30
>   print(t+1936)
[1] 1966
> tt<- t+1936
>   rowlasttt <- max(which(scc1[,11] == tt))
>   idt <- scc1[rowlasttt, 55]  
> 
>   
>   cases <- max(which(year.total==t)) # 14 corresponds to 1950
>   
>   # simple assignment of time periods to cases
>   years <- year.total[1:cases] 
>   
>   # going to need a sender time matrix covariate
>   sender.time <- matrix(years,length(years),length(years),byrow=F)
>   year <- matrix(years, length(years),length(years),byrow=F)
>   
>    # extract the network up to time t
>   AM <- adjacency.matrix[which(years <= t),which(years <= t)]
>   
>   net.t <- network(AM) 
>   
>   #calculate outdegree
>   o.degree<- rowSums(AM)
>   
>   # fix the outdegrees of time t as 0
>   last.t<- which(years==t)
>   
>   o.degree[last.t]<- 0
>   
>   # indicate outdegree and term as a node attribute
>   net.t <- set.vertex.attribute(net.t,"o.degree", o.degree)
>   net.t <- set.vertex.attribute(net.t,"term", years)
> 
> 
>    # subset MQ matrix
>   mq.t <- mq.matrix[which(years <= t),which(years <= t)]
>   # subset same issue matrix
>   same.issue.area.t <- same.issue.area[which(years <= t),which(years <= t)]
>   # subset year diff matrix
>   year.diff.t <- year.diff.matrix[which(years <= t),which(years <= t)]
>   # subset year diff matrix square
>   year.diff.square.t <- year.diff.t^2
>   # subset sender time matrix
>   sender.time.t <- sender.time[which(years <= t),which(years <= t)]
>   # subset unique dyad id matrix
>   #dyad.id.t <- dyad.id[which(years <= t),which(years <= t)]
>   # subset year matrix
>   year.t<- year[which(years <= t),which(years <= t)]
>   # subset same opinion writer matrix
>   same.opinion.writer.t<- same.opinion.writer[which(years <= t),which(years <= t)]
>   
>   #### set vertex attributes
>   # same issue area
>   net.t <- set.vertex.attribute(net.t,"SameIssueArea", scc1[which(years <= t),41])
>   # abs diff of MQ score
>   net.t <- set.vertex.attribute(net.t,"AbsDiffMQscores", scc1[which(years <= t),65])
>   # number justices that voted for the case
>   net.t <- set.vertex.attribute(net.t,"NumberJusticesPro", scc1[which(years <= t),52])
>   # overruled covariate
>   net.t <- set.vertex.attribute(net.t,"Overruled", Overruled.matrix[which(years <= t),idt])
>   # sender time
>   net.t <- set.vertex.attribute(net.t,"sender.time", sender.time.t[,1])
>   # Majority Opinion Writer
>   net.t <- set.vertex.attribute(net.t,"MajOpWriter", scc1[which(years <= t),49])
> 
>   
>   not.fixed <- network(1*(sender.time == t))
>   
>   load(file="1966_1.RData")
> 
>   li <- li66[[1]]
> 
> 
>   
>   # fitting glm
>   model <- ergm(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), control=control.ergm(MCMC.samplesize=10000,MCMLE.maxit=50, init=li)) #
>   summary(model)

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + mutual + nodeicov("o.degree") + difftransties("term") + 
    gwidegree(1, fixed = TRUE) + dgwesp(0.15, fixed = TRUE, type = "OSP") + 
    edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  2 out of 50 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC % z value Pr(>|z|)    
edges                         -6.426e+00  1.857e-01      0 -34.602  < 1e-04 ***
mutual                        -1.385e+01         NA     NA      NA       NA    
nodeicov.o.degree             -3.615e-02  2.880e-03      0 -12.552  < 1e-04 ***
difftransties.term             2.167e+00  9.439e-02      0  22.961  < 1e-04 ***
gwideg.fixed.1                -8.482e-01  1.340e-01      0  -6.328  < 1e-04 ***
gwesp.OSP.fixed.0.15           2.549e+00  7.898e-02      0  32.271  < 1e-04 ***
edgecov.mq.t                  -1.864e-02  5.518e-02      0  -0.338  0.73554    
edgecov.year.diff.t           -1.005e-01  1.560e-02      0  -6.442  < 1e-04 ***
edgecov.year.diff.square.t     1.409e-03  5.379e-04      0   2.619  0.00882 ** 
nodeicov.AbsDiffMQscores       9.722e-04  1.745e-02      0   0.056  0.95558    
nodeicov.NumberJusticesPro    -9.898e-03  2.177e-02      0  -0.455  0.64930    
nodeicov.Overruled            -6.258e-01  1.955e-01      0  -3.201  0.00137 ** 
edgecov.same.opinion.writer.t  6.062e-01  9.670e-02      0   6.269  < 1e-04 ***
edgecov.same.issue.area.t      9.012e-01  4.870e-02      0  18.505  < 1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

     Null Deviance: 806762  on 581956  degrees of freedom
 Residual Deviance:  11303  on 581942  degrees of freedom
 
AIC: 11331    BIC: 11489    (Smaller is better.) 
>   aicm<- AIC(model)
>   bicm <- BIC(model)
> 
>   # get statistics
>   erg.est <- summary(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ 
+                 dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+edgecov(same.opinion.writer.t) + nodeifactor('MajOpWriter')+ edgecov(same.issue.area.t)  )
>   erg.est
                        edges                        mutual 
                    22124.000                         9.000 
            nodeicov.o.degree            difftransties.term 
                   174805.000                     10608.000 
               gwideg.fixed.1          gwesp.OSP.fixed.0.15 
                     6581.541                     12675.246 
                 edgecov.mq.t           edgecov.year.diff.t 
                    20849.101                    169158.000 
   edgecov.year.diff.square.t      nodeicov.AbsDiffMQscores 
                  2303348.000                     96477.597 
   nodeicov.NumberJusticesPro            nodeicov.Overruled 
                   153343.000                       401.000 
edgecov.same.opinion.writer.t    nodeifactor.MajOpWriter.68 
                     2444.000                       273.000 
   nodeifactor.MajOpWriter.71    nodeifactor.MajOpWriter.72 
                       41.000                       141.000 
   nodeifactor.MajOpWriter.74    nodeifactor.MajOpWriter.75 
                     1948.000                       819.000 
   nodeifactor.MajOpWriter.76    nodeifactor.MajOpWriter.77 
                     1045.000                        93.000 
   nodeifactor.MajOpWriter.78    nodeifactor.MajOpWriter.79 
                     2773.000                      1718.000 
   nodeifactor.MajOpWriter.80    nodeifactor.MajOpWriter.81 
                     2338.000                      2714.000 
   nodeifactor.MajOpWriter.82    nodeifactor.MajOpWriter.83 
                      770.000                       112.000 
   nodeifactor.MajOpWriter.84    nodeifactor.MajOpWriter.85 
                     1052.000                       539.000 
   nodeifactor.MajOpWriter.86    nodeifactor.MajOpWriter.87 
                      462.000                       577.000 
   nodeifactor.MajOpWriter.88    nodeifactor.MajOpWriter.89 
                      749.000                       257.000 
   nodeifactor.MajOpWriter.90    nodeifactor.MajOpWriter.91 
                      708.000                       441.000 
   nodeifactor.MajOpWriter.92    nodeifactor.MajOpWriter.93 
                      698.000                       154.000 
   nodeifactor.MajOpWriter.94    nodeifactor.MajOpWriter.95 
                      368.000                       122.000 
   nodeifactor.MajOpWriter.96    nodeifactor.MajOpWriter.97 
                      127.000                        12.000 
    edgecov.same.issue.area.t 
                    12582.000 
>    
>   
>    
>    #############################################
>    # Independence model
>    #############################################
>    ind <- ergm(net.t~edges+ 
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), estimate="MLE") #
>     
>   summary(ind)   

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  7 out of 20 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC % z value Pr(>|z|)    
edges                         -5.7811119  0.1745440      0 -33.121  < 1e-04 ***
edgecov.mq.t                   0.0492551  0.0564632      0   0.872 0.383024    
edgecov.year.diff.t           -0.0465931  0.0153831      0  -3.029 0.002455 ** 
edgecov.year.diff.square.t     0.0003485  0.0005270      0   0.661 0.508416    
nodeicov.AbsDiffMQscores       0.0610778  0.0183370      0   3.331 0.000866 ***
nodeicov.NumberJusticesPro    -0.1749747  0.0226504      0  -7.725  < 1e-04 ***
nodeicov.Overruled             0.5725865  0.2047132      0   2.797 0.005158 ** 
edgecov.same.opinion.writer.t  0.8764753  0.0993108      0   8.826  < 1e-04 ***
edgecov.same.issue.area.t      2.4944131  0.0607207      0  41.080  < 1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

     Null Deviance: 806762  on 581956  degrees of freedom
 Residual Deviance:  15645  on 581947  degrees of freedom
 
AIC: 15663    BIC: 15764    (Smaller is better.) 
>   aici<- AIC(ind)
>   bici <- BIC(ind)
> 
>    
> 
>    li66<- list(coef(model),  coef(summary(model))[,5], coef(summary(model))[,2], aicm, bicm,
+                coef(ind),  coef(summary(ind))[,5], coef(summary(ind))[,2], aici, bici ) 
>    names(li66)<- c("Coefficients", "P-values", "StdErrors", "AICm", "BICm",
+                    "CoefficientsI", "P-valuesI", "StdErrorsI", "AICi", "BICi")
> 
>   save(li66,file="1966_2.RData")
> 
> 
> 
> 
