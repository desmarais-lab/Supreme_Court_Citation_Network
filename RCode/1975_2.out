
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # get data
> load(file="ERCM_MPLE_cl.RData")
> 
> # install.packages("statnet", Sys.getenv("R_LIBS_USER"), repos = "http://cran.case.edu" )
> library(statnet)
> library(MLmetrics)
> library(xtable)
> library(tc.ergmterms)
> 
> # there are cases in 1962 marked as 1963 and in 1971 marked as 1972
> scc1[3364,11] <- 1962
> scc1[4648,11] <- 1971
> 
> 
> year.total <- scc1[,11]-1936 #-1936 => the first year 1937 is 1, 1938 is 2 aso, term column 
> 
> set.seed(12123)
> #sampled.years <- c(14, 24, 34, 44, 54, 64, 74)
> 
> t<- 39
>   print(t+1936)
[1] 1975
> tt<- t+1936
>   rowlasttt <- max(which(scc1[,11] == tt))
>   idt <- scc1[rowlasttt, 55]  
> 
>   
>   cases <- max(which(year.total==t)) # 14 corresponds to 1950
>   
>   # simple assignment of time periods to cases
>   years <- year.total[1:cases] 
>   
>   # going to need a sender time matrix covariate
>   sender.time <- matrix(years,length(years),length(years),byrow=F)
>   year <- matrix(years, length(years),length(years),byrow=F)
>   
>    # extract the network up to time t
>   AM <- adjacency.matrix[which(years <= t),which(years <= t)]
>   
>   net.t <- network(AM) 
>   
>   #calculate outdegree
>   o.degree<- rowSums(AM)
>   
>   # fix the outdegrees of time t as 0
>   last.t<- which(years==t)
>   
>   o.degree[last.t]<- 0
>   
>   # indicate outdegree and term as a node attribute
>   net.t <- set.vertex.attribute(net.t,"o.degree", o.degree)
>   net.t <- set.vertex.attribute(net.t,"term", years)
> 
> 
>    # subset MQ matrix
>   mq.t <- mq.matrix[which(years <= t),which(years <= t)]
>   # subset same issue matrix
>   same.issue.area.t <- same.issue.area[which(years <= t),which(years <= t)]
>   # subset year diff matrix
>   year.diff.t <- year.diff.matrix[which(years <= t),which(years <= t)]
>   # subset year diff matrix square
>   year.diff.square.t <- year.diff.t^2
>   # subset sender time matrix
>   sender.time.t <- sender.time[which(years <= t),which(years <= t)]
>   # subset unique dyad id matrix
>   #dyad.id.t <- dyad.id[which(years <= t),which(years <= t)]
>   # subset year matrix
>   year.t<- year[which(years <= t),which(years <= t)]
>   # subset same opinion writer matrix
>   same.opinion.writer.t<- same.opinion.writer[which(years <= t),which(years <= t)]
>   
>   #### set vertex attributes
>   # same issue area
>   net.t <- set.vertex.attribute(net.t,"SameIssueArea", scc1[which(years <= t),41])
>   # abs diff of MQ score
>   net.t <- set.vertex.attribute(net.t,"AbsDiffMQscores", scc1[which(years <= t),65])
>   # number justices that voted for the case
>   net.t <- set.vertex.attribute(net.t,"NumberJusticesPro", scc1[which(years <= t),52])
>   # overruled covariate
>   net.t <- set.vertex.attribute(net.t,"Overruled", Overruled.matrix[which(years <= t),idt])
>   # sender time
>   net.t <- set.vertex.attribute(net.t,"sender.time", sender.time.t[,1])
>   # Majority Opinion Writer
>   net.t <- set.vertex.attribute(net.t,"MajOpWriter", scc1[which(years <= t),49])
> 
>   
>   not.fixed <- network(1*(sender.time == t))
>   
>   load(file="1975_1.RData")
> 
>   li <- li75[[1]]
> 
> 
>   
>   # fitting glm
>   model <- ergm(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), control=control.ergm(MCMC.samplesize=10000,MCMLE.maxit=50, init=li)) #
>   summary(model)

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + mutual + nodeicov("o.degree") + difftransties("term") + 
    gwidegree(1, fixed = TRUE) + dgwesp(0.15, fixed = TRUE, type = "OSP") + 
    edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  3 out of 50 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC % z value Pr(>|z|)    
edges                         -6.7829359  0.1404792      0 -48.284  < 1e-04 ***
mutual                         0.2041553  0.0357179     98   5.716  < 1e-04 ***
nodeicov.o.degree             -0.0214922  0.0018299      0 -11.745  < 1e-04 ***
difftransties.term             2.3335441  0.0702996      0  33.194  < 1e-04 ***
gwideg.fixed.1                -0.4070920  0.1027474      0  -3.962  < 1e-04 ***
gwesp.OSP.fixed.0.15           2.5694138  0.0554964      0  46.299  < 1e-04 ***
edgecov.mq.t                  -0.2118608  0.0314382      0  -6.739  < 1e-04 ***
edgecov.year.diff.t           -0.0859782  0.0077576      0 -11.083  < 1e-04 ***
edgecov.year.diff.square.t     0.0014780  0.0001969      0   7.505  < 1e-04 ***
nodeicov.AbsDiffMQscores       0.0123619  0.0099782      0   1.239  0.21538    
nodeicov.NumberJusticesPro    -0.0144728  0.0186465      0  -0.776  0.43765    
nodeicov.Overruled            -0.8437121  0.1569944      0  -5.374  < 1e-04 ***
edgecov.same.opinion.writer.t  0.2305682  0.0889149      0   2.593  0.00951 ** 
edgecov.same.issue.area.t      0.7031360  0.0305973      0  22.980  < 1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

     Null Deviance: 1382130  on 996996  degrees of freedom
 Residual Deviance:   22514  on 996982  degrees of freedom
 
AIC: 22542    BIC: 22708    (Smaller is better.) 
>   aicm<- AIC(model)
>   bicm <- BIC(model)
> 
>   # get statistics
>   erg.est <- summary(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ 
+                 dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+edgecov(same.opinion.writer.t) + nodeifactor('MajOpWriter')+ edgecov(same.issue.area.t)  )
>   erg.est
                        edges                        mutual 
                    39132.000                        13.000 
            nodeicov.o.degree            difftransties.term 
                   433811.000                     21261.000 
               gwideg.fixed.1          gwesp.OSP.fixed.0.15 
                     9688.972                     25199.387 
                 edgecov.mq.t           edgecov.year.diff.t 
                    39285.443                    365594.000 
   edgecov.year.diff.square.t      nodeicov.AbsDiffMQscores 
                  6289528.000                    197087.941 
   nodeicov.NumberJusticesPro            nodeicov.Overruled 
                   270174.000                       978.000 
edgecov.same.opinion.writer.t    nodeifactor.MajOpWriter.68 
                     3547.000                       312.000 
   nodeifactor.MajOpWriter.71    nodeifactor.MajOpWriter.72 
                       50.000                       170.000 
   nodeifactor.MajOpWriter.74    nodeifactor.MajOpWriter.75 
                     2267.000                       962.000 
   nodeifactor.MajOpWriter.76    nodeifactor.MajOpWriter.77 
                     1282.000                       112.000 
   nodeifactor.MajOpWriter.78    nodeifactor.MajOpWriter.79 
                     4406.000                      2166.000 
   nodeifactor.MajOpWriter.80    nodeifactor.MajOpWriter.81 
                     3151.000                      4440.000 
   nodeifactor.MajOpWriter.82    nodeifactor.MajOpWriter.83 
                     1028.000                       130.000 
   nodeifactor.MajOpWriter.84    nodeifactor.MajOpWriter.85 
                     1408.000                       714.000 
   nodeifactor.MajOpWriter.86    nodeifactor.MajOpWriter.87 
                      639.000                       813.000 
   nodeifactor.MajOpWriter.88    nodeifactor.MajOpWriter.89 
                     1435.000                       356.000 
   nodeifactor.MajOpWriter.90    nodeifactor.MajOpWriter.91 
                     1974.000                      1248.000 
   nodeifactor.MajOpWriter.92    nodeifactor.MajOpWriter.93 
                     2611.000                       245.000 
   nodeifactor.MajOpWriter.94    nodeifactor.MajOpWriter.95 
                     1725.000                      1123.000 
   nodeifactor.MajOpWriter.96    nodeifactor.MajOpWriter.97 
                      378.000                       242.000 
   nodeifactor.MajOpWriter.98    nodeifactor.MajOpWriter.99 
                      412.000                       384.000 
  nodeifactor.MajOpWriter.100   nodeifactor.MajOpWriter.101 
                      218.000                       274.000 
  nodeifactor.MajOpWriter.102   nodeifactor.MajOpWriter.103 
                      231.000                         4.000 
    edgecov.same.issue.area.t 
                    23037.000 
>    
>   
>    
>    #############################################
>    # Independence model
>    #############################################
>    ind <- ergm(net.t~edges+ 
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), estimate="MLE") #
>     
>   summary(ind)   

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  7 out of 20 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC % z value Pr(>|z|)    
edges                         -5.3722983  0.1088285      0 -49.365  < 1e-04 ***
edgecov.mq.t                   0.1421632  0.0332377      0   4.277  < 1e-04 ***
edgecov.year.diff.t           -0.0779321  0.0073329      0 -10.628  < 1e-04 ***
edgecov.year.diff.square.t     0.0009249  0.0001950      0   4.743  < 1e-04 ***
nodeicov.AbsDiffMQscores       0.0066796  0.0098054      0   0.681  0.49573    
nodeicov.NumberJusticesPro    -0.1016090  0.0173368      0  -5.861  < 1e-04 ***
nodeicov.Overruled             0.4862348  0.1558906      0   3.119  0.00181 ** 
edgecov.same.opinion.writer.t  0.6586761  0.0871209      0   7.560  < 1e-04 ***
edgecov.same.issue.area.t      2.1900051  0.0405580      0  53.997  < 1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

     Null Deviance: 1382130  on 996996  degrees of freedom
 Residual Deviance:   31847  on 996987  degrees of freedom
 
AIC: 31865    BIC: 31972    (Smaller is better.) 
>   aici<- AIC(ind)
>   bici <- BIC(ind)
> 
>    
> 
>    li75<- list(coef(model),  coef(summary(model))[,5], coef(summary(model))[,2], aicm, bicm,
+                coef(ind),  coef(summary(ind))[,5], coef(summary(ind))[,2], aici, bici ) 
>    names(li75)<- c("Coefficients", "P-values", "StdErrors", "AICm", "BICm",
+                    "CoefficientsI", "P-valuesI", "StdErrorsI", "AICi", "BICi")
> 
>   save(li75,file="1975_2.RData")
> 
> 
> 
> 
