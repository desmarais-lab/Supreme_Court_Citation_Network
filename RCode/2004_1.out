
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # get data
> load(file="ERCM_MPLE_cl.RData")
> 
> # install.packages("statnet", Sys.getenv("R_LIBS_USER"), repos = "http://cran.case.edu" )
> library(statnet)
> library(MLmetrics)
> library(xtable)
> library(tc.ergmterms)
> 
> # there are cases in 1962 marked as 1963 and in 1971 marked as 1972
> scc1[3364,11] <- 1962
> scc1[4648,11] <- 1971
> 
> 
> year.total <- scc1[,11]-1936 #-1936 => the first year 1937 is 1, 1938 is 2 aso, term column 
> 
> set.seed(12123)
> #sampled.years <- c(14, 24, 34, 44, 54, 64, 74)
> 
> t<- 68
>   print(t+1936)
[1] 2004
> tt<- t+1936
>   rowlasttt <- max(which(scc1[,11] == tt))
>   idt <- scc1[rowlasttt, 55]  
> 
>   
>   cases <- max(which(year.total==t)) # 14 corresponds to 1950
>   
>   # simple assignment of time periods to cases
>   years <- year.total[1:cases] 
>   
>   # going to need a sender time matrix covariate
>   sender.time <- matrix(years,length(years),length(years),byrow=F)
>   year <- matrix(years, length(years),length(years),byrow=F)
>   
>    # extract the network up to time t
>   AM <- adjacency.matrix[which(years <= t),which(years <= t)]
>   
>   net.t <- network(AM) 
>   
>   #calculate outdegree
>   o.degree<- rowSums(AM)
>   
>   # fix the outdegrees of time t as 0
>   last.t<- which(years==t)
>   
>   o.degree[last.t]<- 0
>   
>   # indicate outdegree and term as a node attribute
>   net.t <- set.vertex.attribute(net.t,"o.degree", o.degree)
>   net.t <- set.vertex.attribute(net.t,"term", years)
> 
> 
>    # subset MQ matrix
>   mq.t <- mq.matrix[which(years <= t),which(years <= t)]
>   # subset same issue matrix
>   same.issue.area.t <- same.issue.area[which(years <= t),which(years <= t)]
>   # subset year diff matrix
>   year.diff.t <- year.diff.matrix[which(years <= t),which(years <= t)]
>   # subset year diff matrix square
>   year.diff.square.t <- year.diff.t^2
>   # subset sender time matrix
>   sender.time.t <- sender.time[which(years <= t),which(years <= t)]
>   # subset unique dyad id matrix
>   #dyad.id.t <- dyad.id[which(years <= t),which(years <= t)]
>   # subset year matrix
>   year.t<- year[which(years <= t),which(years <= t)]
>   # subset same opinion writer matrix
>   same.opinion.writer.t<- same.opinion.writer[which(years <= t),which(years <= t)]
>   
>   #### set vertex attributes
>   # same issue area
>   net.t <- set.vertex.attribute(net.t,"SameIssueArea", scc1[which(years <= t),41])
>   # abs diff of MQ score
>   net.t <- set.vertex.attribute(net.t,"AbsDiffMQscores", scc1[which(years <= t),65])
>   # number justices that voted for the case
>   net.t <- set.vertex.attribute(net.t,"NumberJusticesPro", scc1[which(years <= t),52])
>   # overruled covariate
>   net.t <- set.vertex.attribute(net.t,"Overruled", Overruled.matrix[which(years <= t),idt])
>   # sender time
>   net.t <- set.vertex.attribute(net.t,"sender.time", sender.time.t[,1])
>   # Majority Opinion Writer
>   net.t <- set.vertex.attribute(net.t,"MajOpWriter", scc1[which(years <= t),49])
> 
>   
>   not.fixed <- network(1*(sender.time == t))
>   
>   load(file="2005_1.RData")
> 
>   li <- li105[[1]]
> 
>   # load(file="2004_2.RData")
>   # li[1:6]<- li104[[1]]  
> 
>   
>   # fitting glm
>   model <- ergm(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), control=control.ergm(MCMC.samplesize=11000,MCMLE.maxit=3, init=li), eval.loglik=FALSE) #
>   summary(model) 

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + mutual + nodeicov("o.degree") + difftransties("term") + 
    gwidegree(1, fixed = TRUE) + dgwesp(0.15, fixed = TRUE, type = "OSP") + 
    edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  3 out of 3 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC %    z value Pr(>|z|)
edges                         -7.187e+00  2.913e-02     10   -246.717   <1e-04
mutual                         3.381e+03  2.814e-02     16 120132.733   <1e-04
nodeicov.o.degree             -2.032e-02  1.840e-03      0    -11.048   <1e-04
difftransties.term             2.396e+00  6.384e-02      0     37.536   <1e-04
gwideg.fixed.1                -2.857e-01  6.191e-02      1     -4.615   <1e-04
gwesp.OSP.fixed.0.15           2.605e+00  4.604e-02      0     56.592   <1e-04
edgecov.mq.t                  -3.016e-03  2.937e-02      0     -0.103    0.918
edgecov.year.diff.t           -7.608e-02  5.004e-03      0    -15.203   <1e-04
edgecov.year.diff.square.t     6.181e-04  8.387e-05      0      7.370   <1e-04
nodeicov.AbsDiffMQscores      -2.400e-02  1.554e-02      0     -1.544    0.123
nodeicov.NumberJusticesPro     9.689e-02  1.785e-02      0      5.429   <1e-04
nodeicov.Overruled            -2.675e-01  1.855e-02     92    -14.419   <1e-04
edgecov.same.opinion.writer.t  4.168e-01  3.437e-02      3     12.127   <1e-04
edgecov.same.issue.area.t      5.089e-01  3.826e-02      1     13.303   <1e-04
                                 
edges                         ***
mutual                        ***
nodeicov.o.degree             ***
difftransties.term            ***
gwideg.fixed.1                ***
gwesp.OSP.fixed.0.15          ***
edgecov.mq.t                     
edgecov.year.diff.t           ***
edgecov.year.diff.square.t    ***
nodeicov.AbsDiffMQscores         
nodeicov.NumberJusticesPro    ***
nodeicov.Overruled            ***
edgecov.same.opinion.writer.t ***
edgecov.same.issue.area.t     ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Log-likelihood was not estimated for this fit.
To get deviances, AIC, and/or BIC from fit `model` run 
  > model<-logLik(model, add=TRUE)
to add it to the object or rerun this function with eval.loglik=TRUE.
>   
> 
>   # get statistics
>   erg.est <- summary(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ 
+                 dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+edgecov(same.opinion.writer.t) + nodeifactor('MajOpWriter')+ edgecov(same.issue.area.t)  )
>   erg.est
                        edges                        mutual 
                     98672.00                         22.00 
            nodeicov.o.degree            difftransties.term 
                   1629506.00                      60988.00 
               gwideg.fixed.1          gwesp.OSP.fixed.0.15 
                     18492.31                      71308.56 
                 edgecov.mq.t           edgecov.year.diff.t 
                     94262.38                    1295859.00 
   edgecov.year.diff.square.t      nodeicov.AbsDiffMQscores 
                  31778031.00                     537845.12 
   nodeicov.NumberJusticesPro            nodeicov.Overruled 
                    678000.00                       2944.00 
edgecov.same.opinion.writer.t    nodeifactor.MajOpWriter.68 
                      7927.00                        435.00 
   nodeifactor.MajOpWriter.71    nodeifactor.MajOpWriter.72 
                        60.00                        212.00 
   nodeifactor.MajOpWriter.74    nodeifactor.MajOpWriter.75 
                      2944.00                       1194.00 
   nodeifactor.MajOpWriter.76    nodeifactor.MajOpWriter.77 
                      1637.00                        150.00 
   nodeifactor.MajOpWriter.78    nodeifactor.MajOpWriter.79 
                      6778.00                       3016.00 
   nodeifactor.MajOpWriter.80    nodeifactor.MajOpWriter.81 
                      4434.00                       6858.00 
   nodeifactor.MajOpWriter.82    nodeifactor.MajOpWriter.83 
                      1431.00                        163.00 
   nodeifactor.MajOpWriter.84    nodeifactor.MajOpWriter.85 
                      2221.00                       1057.00 
   nodeifactor.MajOpWriter.86    nodeifactor.MajOpWriter.87 
                       971.00                       1118.00 
   nodeifactor.MajOpWriter.88    nodeifactor.MajOpWriter.89 
                      2338.00                        486.00 
   nodeifactor.MajOpWriter.90    nodeifactor.MajOpWriter.91 
                      3683.00                       2391.00 
   nodeifactor.MajOpWriter.92    nodeifactor.MajOpWriter.93 
                      7886.00                        389.00 
   nodeifactor.MajOpWriter.94    nodeifactor.MajOpWriter.95 
                      5703.00                       6745.00 
   nodeifactor.MajOpWriter.96    nodeifactor.MajOpWriter.97 
                       650.00                        571.00 
   nodeifactor.MajOpWriter.98    nodeifactor.MajOpWriter.99 
                      3411.00                       3703.00 
  nodeifactor.MajOpWriter.100   nodeifactor.MajOpWriter.101 
                      3430.00                       4307.00 
  nodeifactor.MajOpWriter.102   nodeifactor.MajOpWriter.103 
                      4636.00                       3080.00 
  nodeifactor.MajOpWriter.104   nodeifactor.MajOpWriter.105 
                      2313.00                       1054.00 
  nodeifactor.MajOpWriter.106   nodeifactor.MajOpWriter.107 
                       998.00                        442.00 
  nodeifactor.MajOpWriter.108   nodeifactor.MajOpWriter.109 
                       360.00                        265.00 
  nodeifactor.MajOpWriter.110     edgecov.same.issue.area.t 
                       168.00                      57261.00 
>   
> 
>    li104<- list(coef(model),  coef(summary(model))[,5], coef(summary(model))[,2] ) 
>    names(li104)<- c("Coefficients", "P-values", "StdErrors")
> 
>   save(li104,file="2004_1.RData")
> 
> 
> 
> 
