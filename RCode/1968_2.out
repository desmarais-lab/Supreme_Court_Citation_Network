
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # get data
> load(file="ERCM_MPLE_cl.RData")
> 
> # install.packages("statnet", Sys.getenv("R_LIBS_USER"), repos = "http://cran.case.edu" )
> library(statnet)
> library(MLmetrics)
> library(xtable)
> library(tc.ergmterms)
> 
> # there are cases in 1962 marked as 1963 and in 1971 marked as 1972
> scc1[3364,11] <- 1962
> scc1[4648,11] <- 1971
> 
> 
> year.total <- scc1[,11]-1936 #-1936 => the first year 1937 is 1, 1938 is 2 aso, term column 
> 
> set.seed(12123)
> #sampled.years <- c(14, 24, 34, 44, 54, 64, 74)
> 
> t<- 32
>   print(t+1936)
[1] 1968
> tt<- t+1936
>   rowlasttt <- max(which(scc1[,11] == tt))
>   idt <- scc1[rowlasttt, 55]  
> 
>   
>   cases <- max(which(year.total==t)) # 14 corresponds to 1950
>   
>   # simple assignment of time periods to cases
>   years <- year.total[1:cases] 
>   
>   # going to need a sender time matrix covariate
>   sender.time <- matrix(years,length(years),length(years),byrow=F)
>   year <- matrix(years, length(years),length(years),byrow=F)
>   
>    # extract the network up to time t
>   AM <- adjacency.matrix[which(years <= t),which(years <= t)]
>   
>   net.t <- network(AM) 
>   
>   #calculate outdegree
>   o.degree<- rowSums(AM)
>   
>   # fix the outdegrees of time t as 0
>   last.t<- which(years==t)
>   
>   o.degree[last.t]<- 0
>   
>   # indicate outdegree and term as a node attribute
>   net.t <- set.vertex.attribute(net.t,"o.degree", o.degree)
>   net.t <- set.vertex.attribute(net.t,"term", years)
> 
> 
>    # subset MQ matrix
>   mq.t <- mq.matrix[which(years <= t),which(years <= t)]
>   # subset same issue matrix
>   same.issue.area.t <- same.issue.area[which(years <= t),which(years <= t)]
>   # subset year diff matrix
>   year.diff.t <- year.diff.matrix[which(years <= t),which(years <= t)]
>   # subset year diff matrix square
>   year.diff.square.t <- year.diff.t^2
>   # subset sender time matrix
>   sender.time.t <- sender.time[which(years <= t),which(years <= t)]
>   # subset unique dyad id matrix
>   #dyad.id.t <- dyad.id[which(years <= t),which(years <= t)]
>   # subset year matrix
>   year.t<- year[which(years <= t),which(years <= t)]
>   # subset same opinion writer matrix
>   same.opinion.writer.t<- same.opinion.writer[which(years <= t),which(years <= t)]
>   
>   #### set vertex attributes
>   # same issue area
>   net.t <- set.vertex.attribute(net.t,"SameIssueArea", scc1[which(years <= t),41])
>   # abs diff of MQ score
>   net.t <- set.vertex.attribute(net.t,"AbsDiffMQscores", scc1[which(years <= t),65])
>   # number justices that voted for the case
>   net.t <- set.vertex.attribute(net.t,"NumberJusticesPro", scc1[which(years <= t),52])
>   # overruled covariate
>   net.t <- set.vertex.attribute(net.t,"Overruled", Overruled.matrix[which(years <= t),idt])
>   # sender time
>   net.t <- set.vertex.attribute(net.t,"sender.time", sender.time.t[,1])
>   # Majority Opinion Writer
>   net.t <- set.vertex.attribute(net.t,"MajOpWriter", scc1[which(years <= t),49])
> 
>   
>   not.fixed <- network(1*(sender.time == t))
>   
>   load(file="1968_1.RData")
> 
>   li <- li68[[1]]
> 
> 
>   
>   # fitting glm
>   model <- ergm(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), control=control.ergm(MCMC.samplesize=10000,MCMLE.maxit=50, init=li)) #
>   summary(model)

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + mutual + nodeicov("o.degree") + difftransties("term") + 
    gwidegree(1, fixed = TRUE) + dgwesp(0.15, fixed = TRUE, type = "OSP") + 
    edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  2 out of 50 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC % z value Pr(>|z|)    
edges                         -7.725e+00  1.948e-01      0 -39.664  < 1e-04 ***
mutual                        -1.523e+01         NA     NA      NA       NA    
nodeicov.o.degree             -2.036e-02  2.661e-03      0  -7.651  < 1e-04 ***
difftransties.term             2.196e+00  9.565e-02      0  22.962  < 1e-04 ***
gwideg.fixed.1                -3.570e-01  1.320e-01      0  -2.705 0.006823 ** 
gwesp.OSP.fixed.0.15           2.500e+00  8.082e-02      0  30.930  < 1e-04 ***
edgecov.mq.t                  -3.105e-02  5.221e-02      0  -0.595 0.552026    
edgecov.year.diff.t           -5.713e-02  1.458e-02      0  -3.919  < 1e-04 ***
edgecov.year.diff.square.t     6.712e-04  4.642e-04      0   1.446 0.148143    
nodeicov.AbsDiffMQscores      -1.348e-02  1.805e-02      0  -0.747 0.455189    
nodeicov.NumberJusticesPro     9.492e-02  2.274e-02      0   4.174  < 1e-04 ***
nodeicov.Overruled            -6.327e-01  1.728e-01      0  -3.662 0.000251 ***
edgecov.same.opinion.writer.t  7.641e-01  8.725e-02      0   8.757  < 1e-04 ***
edgecov.same.issue.area.t      9.285e-01  5.073e-02      0  18.304  < 1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

     Null Deviance: 838625  on 604940  degrees of freedom
 Residual Deviance:  11925  on 604926  degrees of freedom
 
AIC: 11953    BIC: 12111    (Smaller is better.) 
>   aicm<- AIC(model)
>   bicm <- BIC(model)
> 
>   # get statistics
>   erg.est <- summary(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ 
+                 dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+edgecov(same.opinion.writer.t) + nodeifactor('MajOpWriter')+ edgecov(same.issue.area.t)  )
>   erg.est
                        edges                        mutual 
                     24844.00                         10.00 
            nodeicov.o.degree            difftransties.term 
                    212102.00                      12223.00 
               gwideg.fixed.1          gwesp.OSP.fixed.0.15 
                      7135.39                      14578.99 
                 edgecov.mq.t           edgecov.year.diff.t 
                     23067.02                     198802.00 
   edgecov.year.diff.square.t      nodeicov.AbsDiffMQscores 
                   2854154.00                     111489.50 
   nodeicov.NumberJusticesPro            nodeicov.Overruled 
                    172233.00                        587.00 
edgecov.same.opinion.writer.t    nodeifactor.MajOpWriter.68 
                      2671.00                        279.00 
   nodeifactor.MajOpWriter.71    nodeifactor.MajOpWriter.72 
                        42.00                        144.00 
   nodeifactor.MajOpWriter.74    nodeifactor.MajOpWriter.75 
                      2016.00                        841.00 
   nodeifactor.MajOpWriter.76    nodeifactor.MajOpWriter.77 
                      1093.00                         95.00 
   nodeifactor.MajOpWriter.78    nodeifactor.MajOpWriter.79 
                      3092.00                       1800.00 
   nodeifactor.MajOpWriter.80    nodeifactor.MajOpWriter.81 
                      2496.00                       2999.00 
   nodeifactor.MajOpWriter.82    nodeifactor.MajOpWriter.83 
                       824.00                        116.00 
   nodeifactor.MajOpWriter.84    nodeifactor.MajOpWriter.85 
                      1124.00                        575.00 
   nodeifactor.MajOpWriter.86    nodeifactor.MajOpWriter.87 
                       499.00                        626.00 
   nodeifactor.MajOpWriter.88    nodeifactor.MajOpWriter.89 
                       936.00                        286.00 
   nodeifactor.MajOpWriter.90    nodeifactor.MajOpWriter.91 
                       934.00                        570.00 
   nodeifactor.MajOpWriter.92    nodeifactor.MajOpWriter.93 
                      1006.00                        170.00 
   nodeifactor.MajOpWriter.94    nodeifactor.MajOpWriter.95 
                       530.00                        219.00 
   nodeifactor.MajOpWriter.96    nodeifactor.MajOpWriter.97 
                       192.00                         49.00 
   nodeifactor.MajOpWriter.98     edgecov.same.issue.area.t 
                        16.00                      14454.00 
>    
>   
>    
>    #############################################
>    # Independence model
>    #############################################
>    ind <- ergm(net.t~edges+ 
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), estimate="MLE") #
>     
>   summary(ind)   

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  8 out of 20 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC % z value Pr(>|z|)    
edges                         -6.182e+00  1.647e-01      0 -37.528  < 1e-04 ***
edgecov.mq.t                  -1.351e-01  5.301e-02      0  -2.548  0.01083 *  
edgecov.year.diff.t           -3.214e-02  1.349e-02      0  -2.383  0.01717 *  
edgecov.year.diff.square.t    -8.871e-05  4.366e-04      0  -0.203  0.83898    
nodeicov.AbsDiffMQscores       1.392e-02  1.752e-02      0   0.794  0.42707    
nodeicov.NumberJusticesPro    -7.145e-02  2.278e-02      0  -3.136  0.00171 ** 
nodeicov.Overruled             7.580e-01  1.884e-01      0   4.024  < 1e-04 ***
edgecov.same.opinion.writer.t  9.729e-01  9.690e-02      0  10.041  < 1e-04 ***
edgecov.same.issue.area.t      2.511e+00  5.990e-02      0  41.929  < 1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

     Null Deviance: 838625  on 604940  degrees of freedom
 Residual Deviance:  16326  on 604931  degrees of freedom
 
AIC: 16344    BIC: 16446    (Smaller is better.) 
>   aici<- AIC(ind)
>   bici <- BIC(ind)
> 
>    
> 
>    li68<- list(coef(model),  coef(summary(model))[,5], coef(summary(model))[,2], aicm, bicm,
+                coef(ind),  coef(summary(ind))[,5], coef(summary(ind))[,2], aici, bici ) 
>    names(li68)<- c("Coefficients", "P-values", "StdErrors", "AICm", "BICm",
+                    "CoefficientsI", "P-valuesI", "StdErrorsI", "AICi", "BICi")
> 
>   save(li68,file="1968_2.RData")
> 
> 
> 
> 
