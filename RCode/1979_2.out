
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # get data
> load(file="ERCM_MPLE_cl.RData")
> 
> # install.packages("statnet", Sys.getenv("R_LIBS_USER"), repos = "http://cran.case.edu" )
> library(statnet)
> library(MLmetrics)
> library(xtable)
> library(tc.ergmterms)
> 
> # there are cases in 1962 marked as 1963 and in 1971 marked as 1972
> scc1[3364,11] <- 1962
> scc1[4648,11] <- 1971
> 
> 
> year.total <- scc1[,11]-1936 #-1936 => the first year 1937 is 1, 1938 is 2 aso, term column 
> 
> set.seed(12123)
> #sampled.years <- c(14, 24, 34, 44, 54, 64, 74)
> 
> t<- 43
>   print(t+1936)
[1] 1979
> tt<- t+1936
>   rowlasttt <- max(which(scc1[,11] == tt))
>   idt <- scc1[rowlasttt, 55]  
> 
>   
>   cases <- max(which(year.total==t)) # 14 corresponds to 1950
>   
>   # simple assignment of time periods to cases
>   years <- year.total[1:cases] 
>   
>   # going to need a sender time matrix covariate
>   sender.time <- matrix(years,length(years),length(years),byrow=F)
>   year <- matrix(years, length(years),length(years),byrow=F)
>   
>    # extract the network up to time t
>   AM <- adjacency.matrix[which(years <= t),which(years <= t)]
>   
>   net.t <- network(AM) 
>   
>   #calculate outdegree
>   o.degree<- rowSums(AM)
>   
>   # fix the outdegrees of time t as 0
>   last.t<- which(years==t)
>   
>   o.degree[last.t]<- 0
>   
>   # indicate outdegree and term as a node attribute
>   net.t <- set.vertex.attribute(net.t,"o.degree", o.degree)
>   net.t <- set.vertex.attribute(net.t,"term", years)
> 
> 
>    # subset MQ matrix
>   mq.t <- mq.matrix[which(years <= t),which(years <= t)]
>   # subset same issue matrix
>   same.issue.area.t <- same.issue.area[which(years <= t),which(years <= t)]
>   # subset year diff matrix
>   year.diff.t <- year.diff.matrix[which(years <= t),which(years <= t)]
>   # subset year diff matrix square
>   year.diff.square.t <- year.diff.t^2
>   # subset sender time matrix
>   sender.time.t <- sender.time[which(years <= t),which(years <= t)]
>   # subset unique dyad id matrix
>   #dyad.id.t <- dyad.id[which(years <= t),which(years <= t)]
>   # subset year matrix
>   year.t<- year[which(years <= t),which(years <= t)]
>   # subset same opinion writer matrix
>   same.opinion.writer.t<- same.opinion.writer[which(years <= t),which(years <= t)]
>   
>   #### set vertex attributes
>   # same issue area
>   net.t <- set.vertex.attribute(net.t,"SameIssueArea", scc1[which(years <= t),41])
>   # abs diff of MQ score
>   net.t <- set.vertex.attribute(net.t,"AbsDiffMQscores", scc1[which(years <= t),65])
>   # number justices that voted for the case
>   net.t <- set.vertex.attribute(net.t,"NumberJusticesPro", scc1[which(years <= t),52])
>   # overruled covariate
>   net.t <- set.vertex.attribute(net.t,"Overruled", Overruled.matrix[which(years <= t),idt])
>   # sender time
>   net.t <- set.vertex.attribute(net.t,"sender.time", sender.time.t[,1])
>   # Majority Opinion Writer
>   net.t <- set.vertex.attribute(net.t,"MajOpWriter", scc1[which(years <= t),49])
> 
>   
>   not.fixed <- network(1*(sender.time == t))
>   
>   load(file="1979_1.RData")
> 
>   li <- li79[[1]]
> 
> 
>   
>   # fitting glm
>   model <- ergm(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), control=control.ergm(MCMC.samplesize=10000,MCMLE.maxit=50, init=li)) #
>   summary(model)

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + mutual + nodeicov("o.degree") + difftransties("term") + 
    gwidegree(1, fixed = TRUE) + dgwesp(0.15, fixed = TRUE, type = "OSP") + 
    edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  6 out of 50 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC % z value Pr(>|z|)    
edges                         -6.948e+00  1.312e-01      0 -52.976  < 1e-04 ***
mutual                        -1.176e+01         NA     NA      NA       NA    
nodeicov.o.degree             -2.167e-02  1.525e-03      0 -14.211  < 1e-04 ***
difftransties.term             2.438e+00  6.948e-02      0  35.091  < 1e-04 ***
gwideg.fixed.1                -2.080e-01  1.034e-01      0  -2.012  0.04423 *  
gwesp.OSP.fixed.0.15           2.375e+00  5.290e-02      0  44.893  < 1e-04 ***
edgecov.mq.t                  -1.320e-01  4.551e-02      0  -2.900  0.00373 ** 
edgecov.year.diff.t           -1.140e-01  6.821e-03      0 -16.720  < 1e-04 ***
edgecov.year.diff.square.t     2.090e-03  1.594e-04      0  13.110  < 1e-04 ***
nodeicov.AbsDiffMQscores      -3.178e-03  9.017e-03      0  -0.352  0.72450    
nodeicov.NumberJusticesPro     3.175e-02  1.708e-02      0   1.859  0.06300 .  
nodeicov.Overruled            -6.904e-01  1.804e-01      0  -3.827  0.00013 ***
edgecov.same.opinion.writer.t  4.145e-01  7.293e-02      0   5.684  < 1e-04 ***
edgecov.same.issue.area.t      7.210e-01  3.210e-02      0  22.458  < 1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

     Null Deviance: 1325253  on 955968  degrees of freedom
 Residual Deviance:   21798  on 955954  degrees of freedom
 
AIC: 21826    BIC: 21990    (Smaller is better.) 
>   aicm<- AIC(model)
>   bicm <- BIC(model)
> 
>   # get statistics
>   erg.est <- summary(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ 
+                 dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+edgecov(same.opinion.writer.t) + nodeifactor('MajOpWriter')+ edgecov(same.issue.area.t)  )
>   erg.est
                        edges                        mutual 
                     48807.00                         15.00 
            nodeicov.o.degree            difftransties.term 
                    606011.00                      27573.00 
               gwideg.fixed.1          gwesp.OSP.fixed.0.15 
                     11288.58                      32615.85 
                 edgecov.mq.t           edgecov.year.diff.t 
                     46410.36                     483194.00 
   edgecov.year.diff.square.t      nodeicov.AbsDiffMQscores 
                   8953238.00                     255221.89 
   nodeicov.NumberJusticesPro            nodeicov.Overruled 
                    336349.00                       1348.00 
edgecov.same.opinion.writer.t    nodeifactor.MajOpWriter.68 
                      4370.00                        335.00 
   nodeifactor.MajOpWriter.71    nodeifactor.MajOpWriter.72 
                        53.00                        182.00 
   nodeifactor.MajOpWriter.74    nodeifactor.MajOpWriter.75 
                      2423.00                       1011.00 
   nodeifactor.MajOpWriter.76    nodeifactor.MajOpWriter.77 
                      1356.00                        118.00 
   nodeifactor.MajOpWriter.78    nodeifactor.MajOpWriter.79 
                      4964.00                       2362.00 
   nodeifactor.MajOpWriter.80    nodeifactor.MajOpWriter.81 
                      3482.00                       5025.00 
   nodeifactor.MajOpWriter.82    nodeifactor.MajOpWriter.83 
                      1117.00                        136.00 
   nodeifactor.MajOpWriter.84    nodeifactor.MajOpWriter.85 
                      1570.00                        788.00 
   nodeifactor.MajOpWriter.86    nodeifactor.MajOpWriter.87 
                       716.00                        893.00 
   nodeifactor.MajOpWriter.88    nodeifactor.MajOpWriter.89 
                      1652.00                        390.00 
   nodeifactor.MajOpWriter.90    nodeifactor.MajOpWriter.91 
                      2389.00                       1550.00 
   nodeifactor.MajOpWriter.92    nodeifactor.MajOpWriter.93 
                      3590.00                        276.00 
   nodeifactor.MajOpWriter.94    nodeifactor.MajOpWriter.95 
                      2662.00                       1943.00 
   nodeifactor.MajOpWriter.96    nodeifactor.MajOpWriter.97 
                       440.00                        317.00 
   nodeifactor.MajOpWriter.98    nodeifactor.MajOpWriter.99 
                       835.00                        970.00 
  nodeifactor.MajOpWriter.100   nodeifactor.MajOpWriter.101 
                       644.00                        912.00 
  nodeifactor.MajOpWriter.102   nodeifactor.MajOpWriter.103 
                       745.00                        187.00 
    edgecov.same.issue.area.t 
                     28754.00 
>    
>   
>    
>    #############################################
>    # Independence model
>    #############################################
>    ind <- ergm(net.t~edges+ 
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), estimate="MLE") #
>     
>   summary(ind)   

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  7 out of 20 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC % z value Pr(>|z|)    
edges                         -5.4240844  0.1141360      0 -47.523  < 1e-04 ***
edgecov.mq.t                   0.1526558  0.0444754      0   3.432 0.000598 ***
edgecov.year.diff.t           -0.1033003  0.0066470      0 -15.541  < 1e-04 ***
edgecov.year.diff.square.t     0.0014893  0.0001664      0   8.949  < 1e-04 ***
nodeicov.AbsDiffMQscores       0.0014531  0.0100394      0   0.145 0.884918    
nodeicov.NumberJusticesPro    -0.0666159  0.0175871      0  -3.788 0.000152 ***
nodeicov.Overruled             0.4294582  0.1611685      0   2.665 0.007707 ** 
edgecov.same.opinion.writer.t  0.7183335  0.0753327      0   9.535  < 1e-04 ***
edgecov.same.issue.area.t      2.2723700  0.0419785      0  54.132  < 1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

     Null Deviance: 1325253  on 955968  degrees of freedom
 Residual Deviance:   29899  on 955959  degrees of freedom
 
AIC: 29917    BIC: 30023    (Smaller is better.) 
>   aici<- AIC(ind)
>   bici <- BIC(ind)
> 
>    
> 
>    li79<- list(coef(model),  coef(summary(model))[,5], coef(summary(model))[,2], aicm, bicm,
+                coef(ind),  coef(summary(ind))[,5], coef(summary(ind))[,2], aici, bici ) 
>    names(li79)<- c("Coefficients", "P-values", "StdErrors", "AICm", "BICm",
+                    "CoefficientsI", "P-valuesI", "StdErrorsI", "AICi", "BICi")
> 
>   save(li79,file="1979_2.RData")
> 
> 
> 
> 
