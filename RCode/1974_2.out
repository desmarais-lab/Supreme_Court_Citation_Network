
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # get data
> load(file="ERCM_MPLE_cl.RData")
> 
> # install.packages("statnet", Sys.getenv("R_LIBS_USER"), repos = "http://cran.case.edu" )
> library(statnet)
> library(MLmetrics)
> library(xtable)
> library(tc.ergmterms)
> 
> # there are cases in 1962 marked as 1963 and in 1971 marked as 1972
> scc1[3364,11] <- 1962
> scc1[4648,11] <- 1971
> 
> 
> year.total <- scc1[,11]-1936 #-1936 => the first year 1937 is 1, 1938 is 2 aso, term column 
> 
> set.seed(12123)
> #sampled.years <- c(14, 24, 34, 44, 54, 64, 74)
> 
> t<- 38
>   print(t+1936)
[1] 1974
> tt<- t+1936
>   rowlasttt <- max(which(scc1[,11] == tt))
>   idt <- scc1[rowlasttt, 55]  
> 
>   
>   cases <- max(which(year.total==t)) # 14 corresponds to 1950
>   
>   # simple assignment of time periods to cases
>   years <- year.total[1:cases] 
>   
>   # going to need a sender time matrix covariate
>   sender.time <- matrix(years,length(years),length(years),byrow=F)
>   year <- matrix(years, length(years),length(years),byrow=F)
>   
>    # extract the network up to time t
>   AM <- adjacency.matrix[which(years <= t),which(years <= t)]
>   
>   net.t <- network(AM) 
>   
>   #calculate outdegree
>   o.degree<- rowSums(AM)
>   
>   # fix the outdegrees of time t as 0
>   last.t<- which(years==t)
>   
>   o.degree[last.t]<- 0
>   
>   # indicate outdegree and term as a node attribute
>   net.t <- set.vertex.attribute(net.t,"o.degree", o.degree)
>   net.t <- set.vertex.attribute(net.t,"term", years)
> 
> 
>    # subset MQ matrix
>   mq.t <- mq.matrix[which(years <= t),which(years <= t)]
>   # subset same issue matrix
>   same.issue.area.t <- same.issue.area[which(years <= t),which(years <= t)]
>   # subset year diff matrix
>   year.diff.t <- year.diff.matrix[which(years <= t),which(years <= t)]
>   # subset year diff matrix square
>   year.diff.square.t <- year.diff.t^2
>   # subset sender time matrix
>   sender.time.t <- sender.time[which(years <= t),which(years <= t)]
>   # subset unique dyad id matrix
>   #dyad.id.t <- dyad.id[which(years <= t),which(years <= t)]
>   # subset year matrix
>   year.t<- year[which(years <= t),which(years <= t)]
>   # subset same opinion writer matrix
>   same.opinion.writer.t<- same.opinion.writer[which(years <= t),which(years <= t)]
>   
>   #### set vertex attributes
>   # same issue area
>   net.t <- set.vertex.attribute(net.t,"SameIssueArea", scc1[which(years <= t),41])
>   # abs diff of MQ score
>   net.t <- set.vertex.attribute(net.t,"AbsDiffMQscores", scc1[which(years <= t),65])
>   # number justices that voted for the case
>   net.t <- set.vertex.attribute(net.t,"NumberJusticesPro", scc1[which(years <= t),52])
>   # overruled covariate
>   net.t <- set.vertex.attribute(net.t,"Overruled", Overruled.matrix[which(years <= t),idt])
>   # sender time
>   net.t <- set.vertex.attribute(net.t,"sender.time", sender.time.t[,1])
>   # Majority Opinion Writer
>   net.t <- set.vertex.attribute(net.t,"MajOpWriter", scc1[which(years <= t),49])
> 
>   
>   not.fixed <- network(1*(sender.time == t))
>   
>   load(file="1974_1.RData")
> 
>   li <- li74[[1]]
> 
> 
>   
>   # fitting glm
>   model <- ergm(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), control=control.ergm(MCMC.samplesize=10000,MCMLE.maxit=50, init=li)) #
>   summary(model)

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + mutual + nodeicov("o.degree") + difftransties("term") + 
    gwidegree(1, fixed = TRUE) + dgwesp(0.15, fixed = TRUE, type = "OSP") + 
    edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  3 out of 50 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC % z value Pr(>|z|)    
edges                          -6.608909   0.149975      0 -44.067  < 1e-04 ***
mutual                        -14.857145         NA     NA      NA       NA    
nodeicov.o.degree              -0.029285   0.002106      0 -13.907  < 1e-04 ***
difftransties.term              2.345625   0.076455      0  30.680  < 1e-04 ***
gwideg.fixed.1                 -0.304555   0.107845      0  -2.824  0.00474 ** 
gwesp.OSP.fixed.0.15            2.528034   0.066491      0  38.021  < 1e-04 ***
edgecov.mq.t                   -0.140318   0.033702      0  -4.164  < 1e-04 ***
edgecov.year.diff.t            -0.091049   0.009234      0  -9.861  < 1e-04 ***
edgecov.year.diff.square.t      0.001525   0.000251      0   6.078  < 1e-04 ***
nodeicov.AbsDiffMQscores       -0.004556   0.011887      0  -0.383  0.70149    
nodeicov.NumberJusticesPro     -0.001969   0.020375      0  -0.097  0.92303    
nodeicov.Overruled             -0.962272   0.214153      0  -4.493  < 1e-04 ***
edgecov.same.opinion.writer.t   0.231246   0.111070      0   2.082  0.03734 *  
edgecov.same.issue.area.t       0.688936   0.035805      0  19.241  < 1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

     Null Deviance: 1130640  on 815584  degrees of freedom
 Residual Deviance:   17876  on 815570  degrees of freedom
 
AIC: 17904    BIC: 18066    (Smaller is better.) 
>   aicm<- AIC(model)
>   bicm <- BIC(model)
> 
>   # get statistics
>   erg.est <- summary(net.t~edges+ mutual + nodeicov("o.degree")+ difftransties("term")+gwidegree(1, fixed=TRUE)+ 
+                 dgwesp(0.15, fixed=TRUE, type="OSP") +
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+edgecov(same.opinion.writer.t) + nodeifactor('MajOpWriter')+ edgecov(same.issue.area.t)  )
>   erg.est
                        edges                        mutual 
                    36577.000                        12.000 
            nodeicov.o.degree            difftransties.term 
                   389129.000                     19569.000 
               gwideg.fixed.1          gwesp.OSP.fixed.0.15 
                     9278.641                     23186.418 
                 edgecov.mq.t           edgecov.year.diff.t 
                    36909.868                    334784.000 
   edgecov.year.diff.square.t      nodeicov.AbsDiffMQscores 
                  5625194.000                    181531.913 
   nodeicov.NumberJusticesPro            nodeicov.Overruled 
                   252794.000                       865.000 
edgecov.same.opinion.writer.t    nodeifactor.MajOpWriter.68 
                     3398.000                       309.000 
   nodeifactor.MajOpWriter.71    nodeifactor.MajOpWriter.72 
                       49.000                       165.000 
   nodeifactor.MajOpWriter.74    nodeifactor.MajOpWriter.75 
                     2226.000                       938.000 
   nodeifactor.MajOpWriter.76    nodeifactor.MajOpWriter.77 
                     1252.000                       110.000 
   nodeifactor.MajOpWriter.78    nodeifactor.MajOpWriter.79 
                     4231.000                      2102.000 
   nodeifactor.MajOpWriter.80    nodeifactor.MajOpWriter.81 
                     3051.000                      4240.000 
   nodeifactor.MajOpWriter.82    nodeifactor.MajOpWriter.83 
                     1000.000                       128.000 
   nodeifactor.MajOpWriter.84    nodeifactor.MajOpWriter.85 
                     1367.000                       691.000 
   nodeifactor.MajOpWriter.86    nodeifactor.MajOpWriter.87 
                      618.000                       783.000 
   nodeifactor.MajOpWriter.88    nodeifactor.MajOpWriter.89 
                     1373.000                       347.000 
   nodeifactor.MajOpWriter.90    nodeifactor.MajOpWriter.91 
                     1843.000                      1140.000 
   nodeifactor.MajOpWriter.92    nodeifactor.MajOpWriter.93 
                     2363.000                       230.000 
   nodeifactor.MajOpWriter.94    nodeifactor.MajOpWriter.95 
                     1460.000                       924.000 
   nodeifactor.MajOpWriter.96    nodeifactor.MajOpWriter.97 
                      344.000                       218.000 
   nodeifactor.MajOpWriter.98    nodeifactor.MajOpWriter.99 
                      334.000                       276.000 
  nodeifactor.MajOpWriter.100   nodeifactor.MajOpWriter.101 
                      117.000                       146.000 
  nodeifactor.MajOpWriter.102     edgecov.same.issue.area.t 
                      116.000                     21501.000 
>    
>   
>    
>    #############################################
>    # Independence model
>    #############################################
>    ind <- ergm(net.t~edges+ 
+                 edgecov(mq.t)+
+                 edgecov(year.diff.t)+ edgecov(year.diff.square.t )+ 
+                 nodeicov('AbsDiffMQscores')+ nodeicov('NumberJusticesPro')+ 
+                 nodeicov('Overruled')+
+                 edgecov(same.opinion.writer.t)  + edgecov(same.issue.area.t),
+                 constraints=~fixallbut(not.fixed), estimate="MLE") #
>     
>   summary(ind)   

==========================
Summary of model fit
==========================

Formula:   net.t ~ edges + edgecov(mq.t) + edgecov(year.diff.t) + edgecov(year.diff.square.t) + 
    nodeicov("AbsDiffMQscores") + nodeicov("NumberJusticesPro") + 
    nodeicov("Overruled") + edgecov(same.opinion.writer.t) + 
    edgecov(same.issue.area.t)

Iterations:  7 out of 20 

Monte Carlo MLE Results:
                                Estimate Std. Error MCMC % z value Pr(>|z|)    
edges                         -5.4830527  0.1244728      0 -44.050   <1e-04 ***
edgecov.mq.t                   0.0847087  0.0332964      0   2.544   0.0110 *  
edgecov.year.diff.t           -0.0768733  0.0085605      0  -8.980   <1e-04 ***
edgecov.year.diff.square.t     0.0009163  0.0002321      0   3.948   <1e-04 ***
nodeicov.AbsDiffMQscores      -0.0064273  0.0111766      0  -0.575   0.5652    
nodeicov.NumberJusticesPro    -0.0766166  0.0196200      0  -3.905   <1e-04 ***
nodeicov.Overruled             0.3956782  0.1927929      0   2.052   0.0401 *  
edgecov.same.opinion.writer.t  0.4495768  0.1044095      0   4.306   <1e-04 ***
edgecov.same.issue.area.t      2.1816113  0.0463591      0  47.059   <1e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

     Null Deviance: 1130640  on 815584  degrees of freedom
 Residual Deviance:   24562  on 815575  degrees of freedom
 
AIC: 24580    BIC: 24685    (Smaller is better.) 
>   aici<- AIC(ind)
>   bici <- BIC(ind)
> 
>    
> 
>    li74<- list(coef(model),  coef(summary(model))[,5], coef(summary(model))[,2], aicm, bicm,
+                coef(ind),  coef(summary(ind))[,5], coef(summary(ind))[,2], aici, bici ) 
>    names(li74)<- c("Coefficients", "P-values", "StdErrors", "AICm", "BICm",
+                    "CoefficientsI", "P-valuesI", "StdErrorsI", "AICi", "BICi")
> 
>   save(li74,file="1974_2.RData")
> 
> 
> 
> 
